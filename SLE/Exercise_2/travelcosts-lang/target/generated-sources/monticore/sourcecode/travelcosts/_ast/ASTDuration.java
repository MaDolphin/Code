/* generated from model TravelCosts */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package travelcosts._ast;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class ASTDuration extends ASTCNode  implements travelcosts._ast.ASTTravelCostsNode {

    /* generated by template core.Attribute*/
 protected  travelcosts._ast.ASTISODate startDate ;

    /* generated by template core.Attribute*/
 protected  travelcosts._ast.ASTTime startTime ;

    /* generated by template core.Attribute*/
 protected  Optional<travelcosts._ast.ASTISODate> endDate = Optional.empty();

    /* generated by template core.Attribute*/
 protected  Optional<travelcosts._ast.ASTTime> endTime = Optional.empty();

    /* generated by template core.Attribute*/
 protected  travelcosts._symboltable.ITravelCostsScope enclosingScope ;


    /* generated by template core.Constructor*/
 protected  ASTDuration()  {
    /* generated by template core.EmptyBody*/
// empty body

}


    /* generated by template core.Method*/
 public  boolean deepEquals (Object o)  {
           return deepEquals(o, true);
}

    /* generated by template core.Method*/
 public  boolean deepEquals (Object o,boolean forceSameOrder)  {
      /* generated by template data.DeepEqualsWithOrder*/

      ASTDuration comp;
    if ((o instanceof ASTDuration)) {
      comp = (ASTDuration) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
     // comparing startDate
     if ( (this.startDate == null && comp.startDate != null) ||
        (this.startDate != null && !this.startDate.deepEquals(comp.startDate, forceSameOrder)) ) {
        return false;
     }
     // comparing startTime
     if ( (this.startTime == null && comp.startTime != null) ||
        (this.startTime != null && !this.startTime.deepEquals(comp.startTime, forceSameOrder)) ) {
        return false;
     }
    // comparing endDate   
    if ( this.endDate.isPresent() != comp.endDate.isPresent() ||
      (this.endDate.isPresent() && !this.endDate.get().deepEquals(comp.endDate.get(), forceSameOrder)) ) {
      return false;
    }
    // comparing endTime   
    if ( this.endTime.isPresent() != comp.endTime.isPresent() ||
      (this.endTime.isPresent() && !this.endTime.get().deepEquals(comp.endTime.get(), forceSameOrder)) ) {
      return false;
    }
    return true;     


}

    /* generated by template core.Method*/
 public  boolean deepEqualsWithComments (Object o)  {
           return deepEqualsWithComments(o, true);
}

    /* generated by template core.Method*/
 public  boolean deepEqualsWithComments (Object o,boolean forceSameOrder)  {
      /* generated by template data.DeepEqualsWithComments*/

      ASTDuration comp;
    if ((o instanceof ASTDuration)) {
      comp = (ASTDuration) o;
    } else {
      return false;
    }
    if (!equalsWithComments(comp)) {
      return false;
    }
      // comparing startDate
      if ( (this.startDate == null && comp.startDate != null) ||
        (this.startDate != null && !this.startDate.deepEqualsWithComments(comp.startDate, forceSameOrder)) ) {
        return false;
      }
      // comparing startTime
      if ( (this.startTime == null && comp.startTime != null) ||
        (this.startTime != null && !this.startTime.deepEqualsWithComments(comp.startTime, forceSameOrder)) ) {
        return false;
      }
    // comparing endDate
    if ( this.endDate.isPresent() != comp.endDate.isPresent() ||
      (this.endDate.isPresent() && !this.endDate.get().deepEqualsWithComments(comp.endDate.get(), forceSameOrder)) ) {
      return false;
    }
    // comparing endTime
    if ( this.endTime.isPresent() != comp.endTime.isPresent() ||
      (this.endTime.isPresent() && !this.endTime.get().deepEqualsWithComments(comp.endTime.get(), forceSameOrder)) ) {
      return false;
    }
    return true;     

}

    /* generated by template core.Method*/
 public  boolean equalAttributes (Object o)  {
      /* generated by template data.EqualAttributes*/

    return o instanceof ASTDuration;


}

    /* generated by template core.Method*/
 public  boolean equalsWithComments (Object o)  {
      /* generated by template data.EqualsWithComments*/

      ASTDuration comp;
    if ((o instanceof ASTDuration)) {
      comp = (ASTDuration) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing comments
    if (get_PreCommentList().size() == comp.get_PreCommentList().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PreCommentList().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PreCommentList().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    
    if (get_PostCommentList().size() == comp.get_PostCommentList().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PostCommentList().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PostCommentList().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    return true;

}

    /* generated by template core.Method*/
 public  ASTDuration deepClone ()  {
          return deepClone(_construct());
}

    /* generated by template core.Method*/
 public  ASTDuration deepClone (ASTDuration result)  {
      /* generated by template data.DeepCloneWithParameters*/

    super.deepClone(result);

    result.setStartDate(getStartDate().deepClone());
    result.setStartTime(getStartTime().deepClone());
    if (isPresentEndDate()){
      result.setEndDate(getEndDate().deepClone());
    } else {
      result.setEndDateAbsent();
    }
    if (isPresentEndTime()){
      result.setEndTime(getEndTime().deepClone());
    } else {
      result.setEndTimeAbsent();
    }
      result.setEnclosingScope(getEnclosingScope());
    
    return result;

}

    /* generated by template core.Method*/
 public  travelcosts._ast.ASTISODate getStartDate ()  {
      /* generated by template methods.Get*/

return this.startDate;

}

    /* generated by template core.Method*/
 public  travelcosts._ast.ASTTime getStartTime ()  {
      /* generated by template methods.Get*/

return this.startTime;

}

    /* generated by template core.Method*/
 public  travelcosts._ast.ASTISODate getEndDate ()  {
      /* generated by template methods.opt.Get*/

if (isPresentEndDate()) {
return this.endDate.get();
}
Log.error("0xA7003x376 EndDate can't return a value. It is empty.");
// Normally this statement is not reachable
throw new IllegalStateException();

}

    /* generated by template core.Method*/
 public  boolean isPresentEndDate ()  {
      /* generated by template methods.opt.IsPresent*/

return this.endDate.isPresent();

}

    /* generated by template core.Method*/
 public  travelcosts._ast.ASTTime getEndTime ()  {
      /* generated by template methods.opt.Get*/

if (isPresentEndTime()) {
return this.endTime.get();
}
Log.error("0xA7003x654 EndTime can't return a value. It is empty.");
// Normally this statement is not reachable
throw new IllegalStateException();

}

    /* generated by template core.Method*/
 public  boolean isPresentEndTime ()  {
      /* generated by template methods.opt.IsPresent*/

return this.endTime.isPresent();

}

    /* generated by template core.Method*/
 public  void setStartDate (travelcosts._ast.ASTISODate startDate)  {
      /* generated by template methods.Set*/

this.startDate = startDate;

}

    /* generated by template core.Method*/
 public  void setStartTime (travelcosts._ast.ASTTime startTime)  {
      /* generated by template methods.Set*/

this.startTime = startTime;

}

    /* generated by template core.Method*/
 public  void setEndDate (travelcosts._ast.ASTISODate endDate)  {
      /* generated by template methods.opt.Set*/

this.endDate = Optional.ofNullable(endDate);

}

    /* generated by template core.Method*/
 public  void setEndDateAbsent ()  {
      /* generated by template methods.opt.SetAbsent*/

this.endDate = Optional.empty();

}

    /* generated by template core.Method*/
 public  void setEndTime (travelcosts._ast.ASTTime endTime)  {
      /* generated by template methods.opt.Set*/

this.endTime = Optional.ofNullable(endTime);

}

    /* generated by template core.Method*/
 public  void setEndTimeAbsent ()  {
      /* generated by template methods.opt.SetAbsent*/

this.endTime = Optional.empty();

}

    /* generated by template core.Method*/
 public  void accept (travelcosts._visitor.TravelCostsVisitor visitor)  {
      /* generated by template _ast.ast_class.Accept*/

      visitor.handle(this);

}

    /* generated by template core.Method*/
 public  void accept (de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor visitor)  {
      /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof travelcosts._visitor.TravelCostsVisitor) {
    accept((travelcosts._visitor.TravelCostsVisitor) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x330 AST node type ASTDuration expected a visitor of type travelcosts._visitor.TravelCostsVisitor, but got de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template core.Method*/
 public  void accept (de.monticore.mcbasics._visitor.MCBasicsVisitor visitor)  {
      /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof travelcosts._visitor.TravelCostsVisitor) {
    accept((travelcosts._visitor.TravelCostsVisitor) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x330 AST node type ASTDuration expected a visitor of type travelcosts._visitor.TravelCostsVisitor, but got de.monticore.mcbasics._visitor.MCBasicsVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template core.Method*/
 public  void accept (de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor visitor)  {
      /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof travelcosts._visitor.TravelCostsVisitor) {
    accept((travelcosts._visitor.TravelCostsVisitor) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x330 AST node type ASTDuration expected a visitor of type travelcosts._visitor.TravelCostsVisitor, but got de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template core.Method*/
 protected  ASTDuration _construct ()  {
      return travelcosts._ast.TravelCostsNodeFactory.createASTDuration();
}

    /* generated by template core.Method*/
 public  Collection<de.monticore.ast.ASTNode> get_Children ()  {
      /* generated by template _ast.ast_class.GetChildren*/

    java.util.LinkedList<de.monticore.ast.ASTNode> result = new java.util.LinkedList<de.monticore.ast.ASTNode>();
        if ( getStartDate() != null ) {
          result.add(getStartDate());
        }
        if ( getStartTime() != null ) {
          result.add(getStartTime());
        }
        if (isPresentEndDate()) {
          result.add(getEndDate());
        }
        if (isPresentEndTime()) {
          result.add(getEndTime());
        }
    return result;

}

    /* generated by template core.Method*/
 public  travelcosts._symboltable.ITravelCostsScope getEnclosingScope ()  {
      /* generated by template methods.Get*/

return this.enclosingScope;

}

    /* generated by template core.Method*/
 public  void setEnclosingScope (travelcosts._symboltable.ITravelCostsScope enclosingScope)  {
      /* generated by template methods.Set*/

this.enclosingScope = enclosingScope;

}

    /* generated by template core.Method*/
 public  void setEnclosingScope (de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope enclosingScope)  {
      /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof travelcosts._symboltable.ITravelCostsScope){
    this.enclosingScope = (travelcosts._symboltable.ITravelCostsScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x617The EnclosingScope form type de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope could not be casted to the type travelcosts._symboltable.ITravelCostsScope. Please call the Method setEnclosingScope with a parameter form type travelcosts._symboltable.ITravelCostsScope");
  }
}

    /* generated by template core.Method*/
 public  void setEnclosingScope (de.monticore.mcbasics._symboltable.IMCBasicsScope enclosingScope)  {
      /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof travelcosts._symboltable.ITravelCostsScope){
    this.enclosingScope = (travelcosts._symboltable.ITravelCostsScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x148The EnclosingScope form type de.monticore.mcbasics._symboltable.IMCBasicsScope could not be casted to the type travelcosts._symboltable.ITravelCostsScope. Please call the Method setEnclosingScope with a parameter form type travelcosts._symboltable.ITravelCostsScope");
  }
}

    /* generated by template core.Method*/
 public  void setEnclosingScope (de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope enclosingScope)  {
      /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof travelcosts._symboltable.ITravelCostsScope){
    this.enclosingScope = (travelcosts._symboltable.ITravelCostsScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x884The EnclosingScope form type de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope could not be casted to the type travelcosts._symboltable.ITravelCostsScope. Please call the Method setEnclosingScope with a parameter form type travelcosts._symboltable.ITravelCostsScope");
  }
}

}
