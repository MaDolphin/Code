/* generated from model TravelCosts */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package travelcosts._ast;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class ASTCostItem extends ASTCNode  implements travelcosts._ast.ASTTravelCostsNode {

    /* generated by template core.Attribute*/
 protected  Optional<de.monticore.literals.mccommonliterals._ast.ASTNatLiteral> id = Optional.empty();

    /* generated by template core.Attribute*/
 protected  de.monticore.literals.mccommonliterals._ast.ASTNumericLiteral amount ;

    /* generated by template core.Attribute*/
 protected  travelcosts._ast.ASTCost cost ;

    /* generated by template core.Attribute*/
 protected  int currency ;

    /* generated by template core.Attribute*/
 protected  travelcosts._symboltable.ITravelCostsScope enclosingScope ;


    /* generated by template core.Constructor*/
 protected  ASTCostItem()  {
    /* generated by template core.EmptyBody*/
// empty body

}


    /* generated by template core.Method*/
 public  boolean deepEquals (Object o)  {
           return deepEquals(o, true);
}

    /* generated by template core.Method*/
 public  boolean deepEquals (Object o,boolean forceSameOrder)  {
      /* generated by template data.DeepEqualsWithOrder*/

      ASTCostItem comp;
    if ((o instanceof ASTCostItem)) {
      comp = (ASTCostItem) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing id   
    if ( this.id.isPresent() != comp.id.isPresent() ||
      (this.id.isPresent() && !this.id.get().deepEquals(comp.id.get(), forceSameOrder)) ) {
      return false;
    }
     // comparing amount
     if ( (this.amount == null && comp.amount != null) ||
        (this.amount != null && !this.amount.deepEquals(comp.amount, forceSameOrder)) ) {
        return false;
     }
     // comparing cost
     if ( (this.cost == null && comp.cost != null) ||
        (this.cost != null && !this.cost.deepEquals(comp.cost, forceSameOrder)) ) {
        return false;
     }
    return true;     


}

    /* generated by template core.Method*/
 public  boolean deepEqualsWithComments (Object o)  {
           return deepEqualsWithComments(o, true);
}

    /* generated by template core.Method*/
 public  boolean deepEqualsWithComments (Object o,boolean forceSameOrder)  {
      /* generated by template data.DeepEqualsWithComments*/

      ASTCostItem comp;
    if ((o instanceof ASTCostItem)) {
      comp = (ASTCostItem) o;
    } else {
      return false;
    }
    if (!equalsWithComments(comp)) {
      return false;
    }
    // comparing id
    if ( this.id.isPresent() != comp.id.isPresent() ||
      (this.id.isPresent() && !this.id.get().deepEqualsWithComments(comp.id.get(), forceSameOrder)) ) {
      return false;
    }
      // comparing amount
      if ( (this.amount == null && comp.amount != null) ||
        (this.amount != null && !this.amount.deepEqualsWithComments(comp.amount, forceSameOrder)) ) {
        return false;
      }
      // comparing cost
      if ( (this.cost == null && comp.cost != null) ||
        (this.cost != null && !this.cost.deepEqualsWithComments(comp.cost, forceSameOrder)) ) {
        return false;
      }
    return true;     

}

    /* generated by template core.Method*/
 public  boolean equalAttributes (Object o)  {
      /* generated by template data.EqualAttributes*/

      ASTCostItem comp;
    if ((o instanceof ASTCostItem)) {
      comp = (ASTCostItem) o;
    } else {
      return false;
    }
	// comparing currency 
    if (!(this.currency == comp.currency)) {
      return false;
    }
    return true;


}

    /* generated by template core.Method*/
 public  boolean equalsWithComments (Object o)  {
      /* generated by template data.EqualsWithComments*/

      ASTCostItem comp;
    if ((o instanceof ASTCostItem)) {
      comp = (ASTCostItem) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing comments
    if (get_PreCommentList().size() == comp.get_PreCommentList().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PreCommentList().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PreCommentList().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    
    if (get_PostCommentList().size() == comp.get_PostCommentList().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PostCommentList().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PostCommentList().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    return true;

}

    /* generated by template core.Method*/
 public  ASTCostItem deepClone ()  {
          return deepClone(_construct());
}

    /* generated by template core.Method*/
 public  ASTCostItem deepClone (ASTCostItem result)  {
      /* generated by template data.DeepCloneWithParameters*/

    super.deepClone(result);

    if (isPresentId()){
      result.setId(getId().deepClone());
    } else {
      result.setIdAbsent();
    }
    result.setAmount(getAmount().deepClone());
    result.setCost(getCost().deepClone());
    result.setCurrency(getCurrency());
      result.setEnclosingScope(getEnclosingScope());
    
    return result;

}

    /* generated by template core.Method*/
 public  de.monticore.literals.mccommonliterals._ast.ASTNatLiteral getId ()  {
      /* generated by template methods.opt.Get*/

if (isPresentId()) {
return this.id.get();
}
Log.error("0xA7003x561 Id can't return a value. It is empty.");
// Normally this statement is not reachable
throw new IllegalStateException();

}

    /* generated by template core.Method*/
 public  boolean isPresentId ()  {
      /* generated by template methods.opt.IsPresent*/

return this.id.isPresent();

}

    /* generated by template core.Method*/
 public  de.monticore.literals.mccommonliterals._ast.ASTNumericLiteral getAmount ()  {
      /* generated by template methods.Get*/

return this.amount;

}

    /* generated by template core.Method*/
 public  travelcosts._ast.ASTCost getCost ()  {
      /* generated by template methods.Get*/

return this.cost;

}

    /* generated by template core.Method*/
 public  int getCurrency ()  {
      /* generated by template methods.Get*/

return this.currency;

}

    /* generated by template core.Method*/
 public  void setId (de.monticore.literals.mccommonliterals._ast.ASTNatLiteral id)  {
      /* generated by template methods.opt.Set*/

this.id = Optional.ofNullable(id);

}

    /* generated by template core.Method*/
 public  void setIdAbsent ()  {
      /* generated by template methods.opt.SetAbsent*/

this.id = Optional.empty();

}

    /* generated by template core.Method*/
 public  void setAmount (de.monticore.literals.mccommonliterals._ast.ASTNumericLiteral amount)  {
      /* generated by template methods.Set*/

this.amount = amount;

}

    /* generated by template core.Method*/
 public  void setCost (travelcosts._ast.ASTCost cost)  {
      /* generated by template methods.Set*/

this.cost = cost;

}

    /* generated by template core.Method*/
 public  void setCurrency (int currency)  {
      /* generated by template methods.Set*/

this.currency = currency;

}

    /* generated by template core.Method*/
 public  void accept (travelcosts._visitor.TravelCostsVisitor visitor)  {
      /* generated by template _ast.ast_class.Accept*/

      visitor.handle(this);

}

    /* generated by template core.Method*/
 public  void accept (de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor visitor)  {
      /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof travelcosts._visitor.TravelCostsVisitor) {
    accept((travelcosts._visitor.TravelCostsVisitor) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x484 AST node type ASTCostItem expected a visitor of type travelcosts._visitor.TravelCostsVisitor, but got de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template core.Method*/
 public  void accept (de.monticore.mcbasics._visitor.MCBasicsVisitor visitor)  {
      /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof travelcosts._visitor.TravelCostsVisitor) {
    accept((travelcosts._visitor.TravelCostsVisitor) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x484 AST node type ASTCostItem expected a visitor of type travelcosts._visitor.TravelCostsVisitor, but got de.monticore.mcbasics._visitor.MCBasicsVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template core.Method*/
 public  void accept (de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor visitor)  {
      /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof travelcosts._visitor.TravelCostsVisitor) {
    accept((travelcosts._visitor.TravelCostsVisitor) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x484 AST node type ASTCostItem expected a visitor of type travelcosts._visitor.TravelCostsVisitor, but got de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template core.Method*/
 protected  ASTCostItem _construct ()  {
      return travelcosts._ast.TravelCostsNodeFactory.createASTCostItem();
}

    /* generated by template core.Method*/
 public  Collection<de.monticore.ast.ASTNode> get_Children ()  {
      /* generated by template _ast.ast_class.GetChildren*/

    java.util.LinkedList<de.monticore.ast.ASTNode> result = new java.util.LinkedList<de.monticore.ast.ASTNode>();
        if (isPresentId()) {
          result.add(getId());
        }
        if ( getAmount() != null ) {
          result.add(getAmount());
        }
        if ( getCost() != null ) {
          result.add(getCost());
        }
    return result;

}

    /* generated by template core.Method*/
 public  travelcosts._symboltable.ITravelCostsScope getEnclosingScope ()  {
      /* generated by template methods.Get*/

return this.enclosingScope;

}

    /* generated by template core.Method*/
 public  void setEnclosingScope (travelcosts._symboltable.ITravelCostsScope enclosingScope)  {
      /* generated by template methods.Set*/

this.enclosingScope = enclosingScope;

}

    /* generated by template core.Method*/
 public  void setEnclosingScope (de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope enclosingScope)  {
      /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof travelcosts._symboltable.ITravelCostsScope){
    this.enclosingScope = (travelcosts._symboltable.ITravelCostsScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x537The EnclosingScope form type de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope could not be casted to the type travelcosts._symboltable.ITravelCostsScope. Please call the Method setEnclosingScope with a parameter form type travelcosts._symboltable.ITravelCostsScope");
  }
}

    /* generated by template core.Method*/
 public  void setEnclosingScope (de.monticore.mcbasics._symboltable.IMCBasicsScope enclosingScope)  {
      /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof travelcosts._symboltable.ITravelCostsScope){
    this.enclosingScope = (travelcosts._symboltable.ITravelCostsScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x164The EnclosingScope form type de.monticore.mcbasics._symboltable.IMCBasicsScope could not be casted to the type travelcosts._symboltable.ITravelCostsScope. Please call the Method setEnclosingScope with a parameter form type travelcosts._symboltable.ITravelCostsScope");
  }
}

    /* generated by template core.Method*/
 public  void setEnclosingScope (de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope enclosingScope)  {
      /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof travelcosts._symboltable.ITravelCostsScope){
    this.enclosingScope = (travelcosts._symboltable.ITravelCostsScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x070The EnclosingScope form type de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope could not be casted to the type travelcosts._symboltable.ITravelCostsScope. Please call the Method setEnclosingScope with a parameter form type travelcosts._symboltable.ITravelCostsScope");
  }
}

}
