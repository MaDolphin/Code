/* generated from model TravelCosts */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package travelcosts._ast;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class ASTDurationBuilder extends de.monticore.ast.ASTNodeBuilder<ASTDurationBuilder>  {

    /* generated by template core.Attribute*/
 protected  ASTDurationBuilder realBuilder ;

    /* generated by template core.Attribute*/
 protected  travelcosts._ast.ASTISODate startDate ;

    /* generated by template core.Attribute*/
 protected  travelcosts._ast.ASTTime startTime ;

    /* generated by template core.Attribute*/
 protected  Optional<travelcosts._ast.ASTISODate> endDate = Optional.empty();

    /* generated by template core.Attribute*/
 protected  Optional<travelcosts._ast.ASTTime> endTime = Optional.empty();


    /* generated by template core.Constructor*/
 protected  ASTDurationBuilder()  {
    this.realBuilder = (ASTDurationBuilder) this;
}


    /* generated by template core.Method*/
 public  ASTDuration build ()  {
      /* generated by template _ast.builder.BuildMethod*/

        if (!isValid()) {
            if (startDate == null) {
                Log.error("0xA7222 startDate of type travelcosts._ast.ASTISODate must not be null");
            }
            if (startTime == null) {
                Log.error("0xA7222 startTime of type travelcosts._ast.ASTTime must not be null");
            }
          throw new IllegalStateException();
        }
        ASTDuration value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTDuration();
    value.setStartDate(this.startDate);
    value.setStartTime(this.startTime);
    if (this.endDate.isPresent()) {
      value.setEndDate(this.endDate.get());
    } else {
      value.setEndDateAbsent();
    }
    if (this.endTime.isPresent()) {
      value.setEndTime(this.endTime.get());
    } else {
      value.setEndTimeAbsent();
    }
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;
}

    /* generated by template core.Method*/
 public  boolean isValid ()  {
      /* generated by template _ast.builder.IsValidMethod*/

        if (startDate == null) {
            return false;
        }
        if (startTime == null) {
            return false;
        }
        return true;

}

    /* generated by template core.Method*/
 public  travelcosts._ast.ASTISODate getStartDate ()  {
      /* generated by template methods.Get*/

return this.startDate;

}

    /* generated by template core.Method*/
 public  travelcosts._ast.ASTTime getStartTime ()  {
      /* generated by template methods.Get*/

return this.startTime;

}

    /* generated by template core.Method*/
 public  travelcosts._ast.ASTISODate getEndDate ()  {
      /* generated by template methods.opt.Get*/

if (isPresentEndDate()) {
return this.endDate.get();
}
Log.error("0xA7003x057 EndDate can't return a value. It is empty.");
// Normally this statement is not reachable
throw new IllegalStateException();

}

    /* generated by template core.Method*/
 public  boolean isPresentEndDate ()  {
      /* generated by template methods.opt.IsPresent*/

return this.endDate.isPresent();

}

    /* generated by template core.Method*/
 public  travelcosts._ast.ASTTime getEndTime ()  {
      /* generated by template methods.opt.Get*/

if (isPresentEndTime()) {
return this.endTime.get();
}
Log.error("0xA7003x777 EndTime can't return a value. It is empty.");
// Normally this statement is not reachable
throw new IllegalStateException();

}

    /* generated by template core.Method*/
 public  boolean isPresentEndTime ()  {
      /* generated by template methods.opt.IsPresent*/

return this.endTime.isPresent();

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder setStartDate (travelcosts._ast.ASTISODate startDate)  {
      /* generated by template _ast.builder.Set*/

    this.startDate = startDate;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder setStartTime (travelcosts._ast.ASTTime startTime)  {
      /* generated by template _ast.builder.Set*/

    this.startTime = startTime;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder setEndDate (travelcosts._ast.ASTISODate endDate)  {
      /* generated by template _ast.builder.opt.Set*/

    this.endDate = Optional.ofNullable(endDate);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder setEndDateAbsent ()  {
      /* generated by template _ast.builder.opt.SetAbsent*/

    this.endDate = Optional.empty();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder setEndTime (travelcosts._ast.ASTTime endTime)  {
      /* generated by template _ast.builder.opt.Set*/

    this.endTime = Optional.ofNullable(endTime);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder setEndTimeAbsent ()  {
      /* generated by template _ast.builder.opt.SetAbsent*/

    this.endTime = Optional.empty();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder set_SourcePositionEnd (SourcePosition end)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEnd(end);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder set_SourcePositionEndAbsent ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEndAbsent();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder set_SourcePositionStart (SourcePosition start)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStart(start);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder set_SourcePositionStartAbsent ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStartAbsent();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder clear_PreComments ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PreComments();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder add_PreComment (Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder add_PreComment (int index,Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder addAll_PreComments (Collection<Comment> precomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(precomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder addAll_PreComments (int index,Collection<Comment> precomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(index, precomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder remove_PreComment (Object element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder remove_PreComment (int index)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder removeAll_PreComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder retainAll_PreComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder removeIf_PreComment (Predicate<? super Comment> filter)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PreComment(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder forEach_PreComments (Consumer<? super Comment> action)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PreComments(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder replaceAll_PreComments (UnaryOperator<Comment> operator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PreComments(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder sort_PreComments (Comparator<? super Comment> comparator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PreComments(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder set_PreCommentList (List<Comment> preComments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreCommentList(preComments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder set_PreComment (int index,Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder clear_PostComments ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PostComments();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder add_PostComment (Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(postcomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder add_PostComment (int index,Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder addAll_PostComments (Collection<Comment> postcomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(postcomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder addAll_PostComments (int index,Collection<Comment> postcomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(index, postcomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder remove_PostComment (Object element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder remove_PostComment (int index)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder removeAll_PostComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder retainAll_PostComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder removeIf_PostComment (Predicate<? super Comment> filter)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PostComment(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder forEach_PostComments (Consumer<? super Comment> action)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PostComments(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder replaceAll_PostComments (UnaryOperator<Comment> operator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PostComments(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder sort_PostComments (Comparator<? super Comment> comparator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PostComments(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder set_PostCommentList (List<Comment> postComments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostCommentList(postComments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTDurationBuilder set_PostComment (int index,Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostComment(index, postcomment);
    return this.realBuilder;

}

}
