/* generated from model TravelCosts */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package travelcosts._cocos;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;

/* generated by template core.Annotations*/
// empty template

 public  class TravelCostsCoCoChecker  implements travelcosts._visitor.TravelCostsInheritanceVisitor {

    /* generated by template core.Attribute*/
 private  travelcosts._visitor.TravelCostsVisitor realThis = this;

    /* generated by template core.Attribute*/
 private  List<travelcosts._cocos.TravelCostsCoCoChecker> travelcosts__cocos_TravelCostsCoCoChecker = new ArrayList<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTTravelExpenseReportCoCo> travelcosts__ast_ASTTravelExpenseReportCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTTravelNumberCoCo> travelcosts__ast_ASTTravelNumberCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTArrivalCoCo> travelcosts__ast_ASTArrivalCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTWorkDayCoCo> travelcosts__ast_ASTWorkDayCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTAllWorkDaysCoCo> travelcosts__ast_ASTAllWorkDaysCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTDepartureCoCo> travelcosts__ast_ASTDepartureCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTCostItemsCoCo> travelcosts__ast_ASTCostItemsCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTCostItemCoCo> travelcosts__ast_ASTCostItemCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTHotelCostCoCo> travelcosts__ast_ASTHotelCostCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTTransportCostCoCo> travelcosts__ast_ASTTransportCostCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTExtraCostCoCo> travelcosts__ast_ASTExtraCostCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTDescriptionCoCo> travelcosts__ast_ASTDescriptionCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTISODateCoCo> travelcosts__ast_ASTISODateCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTTimeCoCo> travelcosts__ast_ASTTimeCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTDurationCoCo> travelcosts__ast_ASTDurationCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTCostCoCo> travelcosts__ast_ASTCostCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  Collection<travelcosts._cocos.TravelCostsASTTravelCostsNodeCoCo> travelcosts__ast_ASTTravelCostsNodeCoCos = new LinkedHashSet<>();

    /* generated by template core.Attribute*/
 private  List<de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsCoCoChecker> de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker = new ArrayList<>(Arrays.asList(new de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsCoCoChecker()));

    /* generated by template core.Attribute*/
 private  List<de.monticore.mcbasics._cocos.MCBasicsCoCoChecker> de_monticore_mcbasics__cocos_MCBasicsCoCoChecker = new ArrayList<>(Arrays.asList(new de.monticore.mcbasics._cocos.MCBasicsCoCoChecker()));

    /* generated by template core.Attribute*/
 private  List<de.monticore.literals.mcliteralsbasis._cocos.MCLiteralsBasisCoCoChecker> de_monticore_literals_mcliteralsbasis__cocos_MCLiteralsBasisCoCoChecker = new ArrayList<>(Arrays.asList(new de.monticore.literals.mcliteralsbasis._cocos.MCLiteralsBasisCoCoChecker()));


    /* generated by template core.Constructor*/
 public  TravelCostsCoCoChecker()  {
    /* generated by template core.EmptyBody*/
// empty body

}


    /* generated by template core.Method*/
 public  travelcosts._visitor.TravelCostsVisitor getRealThis ()  {
      /* generated by template methods.Get*/

return this.realThis;

}

    /* generated by template core.Method*/
 public  void setRealThis (travelcosts._visitor.TravelCostsVisitor realThis)  {
      /* generated by template methods.Set*/

this.realThis = realThis;

}

    /* generated by template core.Method*/
 public  void addChecker (travelcosts._cocos.TravelCostsCoCoChecker checker)  {
      this.travelcosts__cocos_TravelCostsCoCoChecker.add(checker);
}

    /* generated by template core.Method*/
 public  void checkAll (travelcosts._ast.ASTTravelCostsNode node)  {
      node.accept(getRealThis());
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTTravelExpenseReportCoCo coco)  {
      travelcosts__ast_ASTTravelExpenseReportCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTTravelExpenseReport node)  {
      for (travelcosts._cocos.TravelCostsASTTravelExpenseReportCoCo coco : travelcosts__ast_ASTTravelExpenseReportCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTTravelNumberCoCo coco)  {
      travelcosts__ast_ASTTravelNumberCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTTravelNumber node)  {
      for (travelcosts._cocos.TravelCostsASTTravelNumberCoCo coco : travelcosts__ast_ASTTravelNumberCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTArrivalCoCo coco)  {
      travelcosts__ast_ASTArrivalCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTArrival node)  {
      for (travelcosts._cocos.TravelCostsASTArrivalCoCo coco : travelcosts__ast_ASTArrivalCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTWorkDayCoCo coco)  {
      travelcosts__ast_ASTWorkDayCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTWorkDay node)  {
      for (travelcosts._cocos.TravelCostsASTWorkDayCoCo coco : travelcosts__ast_ASTWorkDayCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTAllWorkDaysCoCo coco)  {
      travelcosts__ast_ASTAllWorkDaysCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTAllWorkDays node)  {
      for (travelcosts._cocos.TravelCostsASTAllWorkDaysCoCo coco : travelcosts__ast_ASTAllWorkDaysCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTDepartureCoCo coco)  {
      travelcosts__ast_ASTDepartureCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTDeparture node)  {
      for (travelcosts._cocos.TravelCostsASTDepartureCoCo coco : travelcosts__ast_ASTDepartureCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTCostItemsCoCo coco)  {
      travelcosts__ast_ASTCostItemsCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTCostItems node)  {
      for (travelcosts._cocos.TravelCostsASTCostItemsCoCo coco : travelcosts__ast_ASTCostItemsCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTCostItemCoCo coco)  {
      travelcosts__ast_ASTCostItemCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTCostItem node)  {
      for (travelcosts._cocos.TravelCostsASTCostItemCoCo coco : travelcosts__ast_ASTCostItemCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTHotelCostCoCo coco)  {
      travelcosts__ast_ASTHotelCostCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTHotelCost node)  {
      for (travelcosts._cocos.TravelCostsASTHotelCostCoCo coco : travelcosts__ast_ASTHotelCostCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTTransportCostCoCo coco)  {
      travelcosts__ast_ASTTransportCostCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTTransportCost node)  {
      for (travelcosts._cocos.TravelCostsASTTransportCostCoCo coco : travelcosts__ast_ASTTransportCostCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTExtraCostCoCo coco)  {
      travelcosts__ast_ASTExtraCostCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTExtraCost node)  {
      for (travelcosts._cocos.TravelCostsASTExtraCostCoCo coco : travelcosts__ast_ASTExtraCostCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTDescriptionCoCo coco)  {
      travelcosts__ast_ASTDescriptionCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTDescription node)  {
      for (travelcosts._cocos.TravelCostsASTDescriptionCoCo coco : travelcosts__ast_ASTDescriptionCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTISODateCoCo coco)  {
      travelcosts__ast_ASTISODateCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTISODate node)  {
      for (travelcosts._cocos.TravelCostsASTISODateCoCo coco : travelcosts__ast_ASTISODateCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTTimeCoCo coco)  {
      travelcosts__ast_ASTTimeCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTTime node)  {
      for (travelcosts._cocos.TravelCostsASTTimeCoCo coco : travelcosts__ast_ASTTimeCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTDurationCoCo coco)  {
      travelcosts__ast_ASTDurationCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTDuration node)  {
      for (travelcosts._cocos.TravelCostsASTDurationCoCo coco : travelcosts__ast_ASTDurationCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTCostCoCo coco)  {
      travelcosts__ast_ASTCostCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTCost node)  {
      for (travelcosts._cocos.TravelCostsASTCostCoCo coco : travelcosts__ast_ASTCostCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (travelcosts._cocos.TravelCostsASTTravelCostsNodeCoCo coco)  {
      travelcosts__ast_ASTTravelCostsNodeCoCos.add(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (travelcosts._ast.ASTTravelCostsNode node)  {
      for (travelcosts._cocos.TravelCostsASTTravelCostsNodeCoCo coco : travelcosts__ast_ASTTravelCostsNodeCoCos) {
coco.check(node);
}
// and delegate to all registered checkers of the same language as well
travelcosts__cocos_TravelCostsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  void addChecker (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsCoCoChecker checker)  {
      this.de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.add(checker);
}

    /* generated by template core.Method*/
 public  void checkAll (de.monticore.literals.mccommonliterals._ast.ASTMCCommonLiteralsNode node)  {
      node.accept(getRealThis());
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTNullLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTNullLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTBooleanLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTBooleanLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTCharLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTCharLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTStringLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTNatLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTNatLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTSignedNatLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedNatLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTBasicLongLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTBasicLongLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTSignedBasicLongLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicLongLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTBasicFloatLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTBasicFloatLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTSignedBasicFloatLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicFloatLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTBasicDoubleLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTBasicDoubleLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTSignedBasicDoubleLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicDoubleLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTSignedLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTNumericLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTNumericLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTSignedNumericLiteralCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedNumericLiteral node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTMCCommonLiteralsNodeCoCo coco)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTMCCommonLiteralsNode node)  {
      de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  void addChecker (de.monticore.mcbasics._cocos.MCBasicsCoCoChecker checker)  {
      this.de_monticore_mcbasics__cocos_MCBasicsCoCoChecker.add(checker);
}

    /* generated by template core.Method*/
 public  void checkAll (de.monticore.mcbasics._ast.ASTMCBasicsNode node)  {
      node.accept(getRealThis());
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.mcbasics._cocos.MCBasicsASTMCBasicsNodeCoCo coco)  {
      de_monticore_mcbasics__cocos_MCBasicsCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.mcbasics._ast.ASTMCBasicsNode node)  {
      de_monticore_mcbasics__cocos_MCBasicsCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  void addChecker (de.monticore.literals.mcliteralsbasis._cocos.MCLiteralsBasisCoCoChecker checker)  {
      this.de_monticore_literals_mcliteralsbasis__cocos_MCLiteralsBasisCoCoChecker.add(checker);
}

    /* generated by template core.Method*/
 public  void checkAll (de.monticore.literals.mcliteralsbasis._ast.ASTMCLiteralsBasisNode node)  {
      node.accept(getRealThis());
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mcliteralsbasis._cocos.MCLiteralsBasisASTLiteralCoCo coco)  {
      de_monticore_literals_mcliteralsbasis__cocos_MCLiteralsBasisCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mcliteralsbasis._ast.ASTLiteral node)  {
      de_monticore_literals_mcliteralsbasis__cocos_MCLiteralsBasisCoCoChecker.stream().forEach(c -> c.visit(node));
}

    /* generated by template core.Method*/
 public  travelcosts._cocos.TravelCostsCoCoChecker addCoCo (de.monticore.literals.mcliteralsbasis._cocos.MCLiteralsBasisASTMCLiteralsBasisNodeCoCo coco)  {
      de_monticore_literals_mcliteralsbasis__cocos_MCLiteralsBasisCoCoChecker.stream().findFirst().get().addCoCo(coco);
return this;
}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mcliteralsbasis._ast.ASTMCLiteralsBasisNode node)  {
      de_monticore_literals_mcliteralsbasis__cocos_MCLiteralsBasisCoCoChecker.stream().forEach(c -> c.visit(node));
}

}
