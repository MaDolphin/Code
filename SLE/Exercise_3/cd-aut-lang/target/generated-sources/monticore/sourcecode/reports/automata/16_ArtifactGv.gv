digraph {
  subgraph cluster_ {
    label = "";
    labeljust = l;
    subgraph cluster_core {
      label = "core";
      labeljust = l;
      node[shape=ellipse];
      Template_core_Constructor [label="core.Constructor.ftl (36)"];
      node[shape=ellipse];
      Template_core_Attribute [label="core.Attribute.ftl (165)"];
      node[shape=ellipse];
      Template_core_Class [label="core.Class.ftl (38)"];
      node[shape=ellipse];
      Template_core_Interface [label="core.Interface.ftl (13)"];
      node[shape=ellipse];
      Template_core_EmptyBody [label="core.EmptyBody.ftl (34)"];
      node[shape=ellipse];
      Template_core_Annotations [label="core.Annotations.ftl (14)"];
      node[shape=ellipse];
      Template_core_Method [label="core.Method.ftl (1442)"];
      node[shape=ellipse];
      Template_core_EmptyConstants [label="core.EmptyConstants.ftl (2)"];
      node[shape=ellipse];
      Template_core_Imports [label="core.Imports.ftl (51)"];
      node[shape=ellipse];
      Template_core_Value [label="core.Value.ftl (95)"];
      node[shape=ellipse];
      Template_core_Enum [label="core.Enum.ftl (1)"];
      node[shape=ellipse];
      Template_core_Constants [label="core.Constants.ftl (2)"];
    }
    subgraph cluster__symboltable_symbol {
      label = "_symboltable.symbol";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_symbol_Build [label="_symboltable.symbol.Build.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symbol_DetermineFullName [label="_symboltable.symbol.DetermineFullName.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symbol_NameSetter [label="_symboltable.symbol.NameSetter.ftl (2)"];
      node[shape=ellipse];
      Template__symboltable_symbol_DeterminePackageName [label="_symboltable.symbol.DeterminePackageName.ftl (1)"];
    }
    subgraph cluster__symboltable_symboltablecreatordelegator {
      label = "_symboltable.symboltablecreatordelegator";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_symboltablecreatordelegator_Constructor [label="_symboltable.symboltablecreatordelegator.Constructor.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symboltablecreatordelegator_Build [label="_symboltable.symboltablecreatordelegator.Build.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symboltablecreatordelegator_CreateFromAST [label="_symboltable.symboltablecreatordelegator.CreateFromAST.ftl (1)"];
    }
    subgraph cluster__symboltable_language {
      label = "_symboltable.language";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_language_Constructor [label="_symboltable.language.Constructor.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_language_CalculateModelNamesFor [label="_symboltable.language.CalculateModelNamesFor.ftl (5)"];
    }
    subgraph cluster__symboltable_iglobalscope {
      label = "_symboltable.iglobalscope";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_iglobalscope_ResolveMany [label="_symboltable.iglobalscope.ResolveMany.ftl (5)"];
      node[shape=ellipse];
      Template__symboltable_iglobalscope_LoadModelsFor [label="_symboltable.iglobalscope.LoadModelsFor.ftl (5)"];
    }
    subgraph cluster__symboltable_serialization_symbolDeSer {
      label = "_symboltable.serialization.symbolDeSer";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_serialization_symbolDeSer_DeserializeJsonObject [label="_symboltable.serialization.symbolDeSer.DeserializeJsonObject.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_symbolDeSer_Serialize [label="_symboltable.serialization.symbolDeSer.Serialize.ftl (2)"];
      node[shape=ellipse];
      Template__symboltable_serialization_symbolDeSer_DeserializeSymbol [label="_symboltable.serialization.symbolDeSer.DeserializeSymbol.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_symbolDeSer_DeserializeString [label="_symboltable.serialization.symbolDeSer.DeserializeString.ftl (2)"];
    }
    subgraph cluster__symboltable_serialization_scopeDeSer {
      label = "_symboltable.serialization.scopeDeSer";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_serialization_scopeDeSer_DeserializeArtifactScope [label="_symboltable.serialization.scopeDeSer.DeserializeArtifactScope.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_scopeDeSer_DeserializeScope [label="_symboltable.serialization.scopeDeSer.DeserializeScope.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_scopeDeSer_AddAndLinkSubScopes [label="_symboltable.serialization.scopeDeSer.AddAndLinkSubScopes.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_scopeDeSer_DeserializeJsonObject [label="_symboltable.serialization.scopeDeSer.DeserializeJsonObject.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_scopeDeSer_DeserializeSymbol [label="_symboltable.serialization.scopeDeSer.DeserializeSymbol.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_scopeDeSer_AddSymbols [label="_symboltable.serialization.scopeDeSer.AddSymbols.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_scopeDeSer_AddAndLinkSpanningSymbol [label="_symboltable.serialization.scopeDeSer.AddAndLinkSpanningSymbol.ftl (1)"];
    }
    subgraph cluster__symboltable_serialization_symbolTablePrinter {
      label = "_symboltable.serialization.symbolTablePrinter";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_serialization_symbolTablePrinter_VisitScope [label="_symboltable.serialization.symbolTablePrinter.VisitScope.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_symbolTablePrinter_HasSymbolsInSubScopes [label="_symboltable.serialization.symbolTablePrinter.HasSymbolsInSubScopes.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_symbolTablePrinter_SerializeRelevantSubScopes [label="_symboltable.serialization.symbolTablePrinter.SerializeRelevantSubScopes.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_symbolTablePrinter_VisitSymbol [label="_symboltable.serialization.symbolTablePrinter.VisitSymbol.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_symbolTablePrinter_SerializeLocalSymbols [label="_symboltable.serialization.symbolTablePrinter.SerializeLocalSymbols.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_symbolTablePrinter_FilterRelevantSubScopes [label="_symboltable.serialization.symbolTablePrinter.FilterRelevantSubScopes.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_symbolTablePrinter_VisitArtifactScope [label="_symboltable.serialization.symbolTablePrinter.VisitArtifactScope.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_symbolTablePrinter_AddScopeSpanningSymbol [label="_symboltable.serialization.symbolTablePrinter.AddScopeSpanningSymbol.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_serialization_symbolTablePrinter_SerializeSymbol [label="_symboltable.serialization.symbolTablePrinter.SerializeSymbol.ftl (2)"];
    }
    subgraph cluster__symboltable_symboltablecreator {
      label = "_symboltable.symboltablecreator";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_symboltablecreator_CreateScope [label="_symboltable.symboltablecreator.CreateScope.ftl (3)"];
      node[shape=ellipse];
      Template__symboltable_symboltablecreator_Visit [label="_symboltable.symboltablecreator.Visit.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symboltablecreator_SetLinkBetweenSpannedScopeAndNode [label="_symboltable.symboltablecreator.SetLinkBetweenSpannedScopeAndNode.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symboltablecreator_SetLinkBetweenSymbolAndNode [label="_symboltable.symboltablecreator.SetLinkBetweenSymbolAndNode.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symboltablecreator_VisitNoSymbol [label="_symboltable.symboltablecreator.VisitNoSymbol.ftl (2)"];
      node[shape=ellipse];
      Template__symboltable_symboltablecreator_PutOnStack [label="_symboltable.symboltablecreator.PutOnStack.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symboltablecreator_AddToScope [label="_symboltable.symboltablecreator.AddToScope.ftl (5)"];
      node[shape=ellipse];
      Template__symboltable_symboltablecreator_CreateFromAST [label="_symboltable.symboltablecreator.CreateFromAST.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symboltablecreator_AddToScopeAndLinkWithNode [label="_symboltable.symboltablecreator.AddToScopeAndLinkWithNode.ftl (1)"];
    }
    subgraph cluster__symboltable_artifactscope {
      label = "_symboltable.artifactscope";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_artifactscope_CheckIfContinueAsSubScope [label="_symboltable.artifactscope.CheckIfContinueAsSubScope.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_artifactscope_GetRemainingNameForResolveDown [label="_symboltable.artifactscope.GetRemainingNameForResolveDown.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_artifactscope_Constructor [label="_symboltable.artifactscope.Constructor.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_artifactscope_Build [label="_symboltable.artifactscope.Build.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_artifactscope_GetTopLevelSymbol [label="_symboltable.artifactscope.GetTopLevelSymbol.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_artifactscope_GetFilePath [label="_symboltable.artifactscope.GetFilePath.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_artifactscope_GetName [label="_symboltable.artifactscope.GetName.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_artifactscope_ContinueWithEnclosingScope [label="_symboltable.artifactscope.ContinueWithEnclosingScope.ftl (5)"];
      node[shape=ellipse];
      Template__symboltable_artifactscope_IsPresentName [label="_symboltable.artifactscope.IsPresentName.ftl (1)"];
    }
    subgraph cluster__symboltable_scope {
      label = "_symboltable.scope";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_scope_Build [label="_symboltable.scope.Build.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_scope_SetSpanningSymbolAbsent [label="_symboltable.scope.SetSpanningSymbolAbsent.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_scope_SetEnclosingScope [label="_symboltable.scope.SetEnclosingScope.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_scope_Accept [label="_symboltable.scope.Accept.ftl (3)"];
      node[shape=ellipse];
      Template__symboltable_scope_SetSubScopes [label="_symboltable.scope.SetSubScopes.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_scope_GetSymbolSize [label="_symboltable.scope.GetSymbolSize.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_scope_SetSpanningSymbol [label="_symboltable.scope.SetSpanningSymbol.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_scope_AddSubScope [label="_symboltable.scope.AddSubScope.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_scope_RemoveSubScope [label="_symboltable.scope.RemoveSubScope.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_scope_GetSubScopes [label="_symboltable.scope.GetSubScopes.ftl (1)"];
    }
    subgraph cluster__symboltable_symTabMill {
      label = "_symboltable.symTabMill";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_symTabMill_GetMill [label="_symboltable.symTabMill.GetMill.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symTabMill_BuilderMethod [label="_symboltable.symTabMill.BuilderMethod.ftl (8)"];
      node[shape=ellipse];
      Template__symboltable_symTabMill_InitMe [label="_symboltable.symTabMill.InitMe.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symTabMill_Reset [label="_symboltable.symTabMill.Reset.ftl (1)"];
    }
    subgraph cluster__symboltable_globalscope {
      label = "_symboltable.globalscope";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_globalscope_Build [label="_symboltable.globalscope.Build.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_globalscope_CacheMethod [label="_symboltable.globalscope.CacheMethod.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_globalscope_ResolveAdapted [label="_symboltable.globalscope.ResolveAdapted.ftl (5)"];
    }
    subgraph cluster__symboltable_iscope {
      label = "_symboltable.iscope";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_iscope_ResolveDownMany [label="_symboltable.iscope.ResolveDownMany.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_iscope_ResolveDelegate [label="_symboltable.iscope.ResolveDelegate.ftl (7)"];
      node[shape=ellipse];
      Template__symboltable_iscope_Filter [label="_symboltable.iscope.Filter.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_iscope_ContinueWithEnclosingScope [label="_symboltable.iscope.ContinueWithEnclosingScope.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_iscope_ResolveMany [label="_symboltable.iscope.ResolveMany.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_iscope_ResolveManyLocally [label="_symboltable.iscope.ResolveManyLocally.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_iscope_ContinueAsSubScope [label="_symboltable.iscope.ContinueAsSubScope.ftl (1)"];
    }
    subgraph cluster__symboltable_modelloader {
      label = "_symboltable.modelloader";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_modelloader_CreateSymbolTableFromAST [label="_symboltable.modelloader.CreateSymbolTableFromAST.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_modelloader_Constructor [label="_symboltable.modelloader.Constructor.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_modelloader_LoadModels [label="_symboltable.modelloader.LoadModels.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_modelloader_Resolve [label="_symboltable.modelloader.Resolve.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_modelloader_Build [label="_symboltable.modelloader.Build.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_modelloader_ResolveSymbol [label="_symboltable.modelloader.ResolveSymbol.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_modelloader_LoadModelsIntoScope [label="_symboltable.modelloader.LoadModelsIntoScope.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_modelloader_ShowWarningIfParsedModels [label="_symboltable.modelloader.ShowWarningIfParsedModels.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_modelloader_LoadSymbolsIntoScope [label="_symboltable.modelloader.LoadSymbolsIntoScope.ftl (1)"];
    }
    subgraph cluster__symboltable_symbolloader {
      label = "_symboltable.symbolloader";
      labeljust = l;
      node[shape=ellipse];
      Template__symboltable_symbolloader_Constructor [label="_symboltable.symbolloader.Constructor.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symbolloader_Build [label="_symboltable.symbolloader.Build.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symbolloader_LoadSymbol [label="_symboltable.symbolloader.LoadSymbol.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symbolloader_GetSymbol [label="_symboltable.symbolloader.GetSymbol.ftl (1)"];
      node[shape=ellipse];
      Template__symboltable_symbolloader_Set [label="_symboltable.symbolloader.Set.ftl (2)"];
      node[shape=ellipse];
      Template__symboltable_symbolloader_IsSymbolLoaded [label="_symboltable.symbolloader.IsSymbolLoaded.ftl (1)"];
    }
    subgraph cluster_parser {
      label = "parser";
      labeljust = l;
      node[shape=ellipse];
      Template_parser_MCParserMethods [label="parser.MCParserMethods.ftl (11)"];
      node[shape=ellipse];
      Template_parser_Parser [label="parser.Parser.ftl (1)"];
      node[shape=ellipse];
      Template_parser_MCParser [label="parser.MCParser.ftl (1)"];
      node[shape=ellipse];
      Template_parser_ParserHeader [label="parser.ParserHeader.ftl (1)"];
      node[shape=ellipse];
      Template_parser_LexerMember [label="parser.LexerMember.ftl (1)"];
    }
    subgraph cluster_data {
      label = "data";
      labeljust = l;
      node[shape=ellipse];
      Template_data_DeepEqualsWithComments [label="data.DeepEqualsWithComments.ftl (3)"];
      node[shape=ellipse];
      Template_data_EqualsWithComments [label="data.EqualsWithComments.ftl (3)"];
      node[shape=ellipse];
      Template_data_DeepCloneWithParameters [label="data.DeepCloneWithParameters.ftl (3)"];
      node[shape=ellipse];
      Template_data_DeepEqualsWithOrder [label="data.DeepEqualsWithOrder.ftl (3)"];
      node[shape=ellipse];
      Template_data_EqualAttributes [label="data.EqualAttributes.ftl (3)"];
    }
    subgraph cluster_od {
      label = "od";
      labeljust = l;
      node[shape=ellipse];
      Template_od_DiagramVisitor [label="od.DiagramVisitor.ftl (1)"];
    }
    subgraph cluster_methods {
      label = "methods";
      labeljust = l;
      subgraph cluster_methods_opt {
        label = "methods.opt";
        labeljust = l;
        node[shape=ellipse];
        Template_methods_opt_IsPresent [label="methods.opt.IsPresent.ftl (10)"];
        node[shape=ellipse];
        Template_methods_opt_Set [label="methods.opt.Set.ftl (5)"];
        node[shape=ellipse];
        Template_methods_opt_Get [label="methods.opt.Get.ftl (10)"];
        node[shape=ellipse];
        Template_methods_opt_SetAbsent [label="methods.opt.SetAbsent.ftl (5)"];
      }
      node[shape=ellipse];
      Template_methods_Set [label="methods.Set.ftl (42)"];
      node[shape=ellipse];
      Template_methods_Get [label="methods.Get.ftl (95)"];
      node[shape=ellipse];
      Template_methods_MethodDelegate [label="methods.MethodDelegate.ftl (468)"];
    }
    subgraph cluster_automata__symboltable {
      label = "automata._symboltable";
      labeljust = l;
      subgraph cluster_automata__symboltable_serialization {
        label = "automata._symboltable.serialization";
        labeljust = l;
        node[shape=note];
        File_automata__symboltable_serialization_AutomatonSymbolDeSer [label="automata._symboltable.serialization.AutomatonSymbolDeSer.java (1)"];
        node[shape=note];
        File_automata__symboltable_serialization_AutomataScopeDeSer [label="automata._symboltable.serialization.AutomataScopeDeSer.java (1)"];
        node[shape=note];
        File_automata__symboltable_serialization_AutomataSymbolTablePrinter [label="automata._symboltable.serialization.AutomataSymbolTablePrinter.java (1)"];
      }
      node[shape=note];
      File_automata__symboltable_AutomataSymbolTableCreatorDelegator [label="automata._symboltable.AutomataSymbolTableCreatorDelegator.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomataGlobalScopeBuilder [label="automata._symboltable.AutomataGlobalScopeBuilder.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomatonSymbolLoader [label="automata._symboltable.AutomatonSymbolLoader.java (1)"];
      node[shape=note];
      File_automata__symboltable_MCBasicTypesSTCForAutomata [label="automata._symboltable.MCBasicTypesSTCForAutomata.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomataScopeBuilder [label="automata._symboltable.AutomataScopeBuilder.java (1)"];
      node[shape=note];
      File_automata__symboltable_TypeSymbolsSTCForAutomata [label="automata._symboltable.TypeSymbolsSTCForAutomata.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomataArtifactScope [label="automata._symboltable.AutomataArtifactScope.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomataGlobalScope [label="automata._symboltable.AutomataGlobalScope.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomataLanguage [label="automata._symboltable.AutomataLanguage.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomataSymbolTableCreatorTOP [label="automata._symboltable.AutomataSymbolTableCreatorTOP.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomatonSymbol [label="automata._symboltable.AutomatonSymbol.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomatonSymbolBuilder [label="automata._symboltable.AutomatonSymbolBuilder.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomataModelLoader [label="automata._symboltable.AutomataModelLoader.java (1)"];
      node[shape=note];
      File_automata__symboltable_IAutomataGlobalScope [label="automata._symboltable.IAutomataGlobalScope.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomatonSymbolLoaderBuilder [label="automata._symboltable.AutomatonSymbolLoaderBuilder.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomataSymbolTableCreatorDelegatorBuilder [label="automata._symboltable.AutomataSymbolTableCreatorDelegatorBuilder.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomataScope [label="automata._symboltable.AutomataScope.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomataSymbolTableCreatorBuilder [label="automata._symboltable.AutomataSymbolTableCreatorBuilder.java (1)"];
      node[shape=note];
      File_automata__symboltable_ICommonAutomataSymbol [label="automata._symboltable.ICommonAutomataSymbol.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomataModelLoaderBuilder [label="automata._symboltable.AutomataModelLoaderBuilder.java (1)"];
      node[shape=note];
      File_automata__symboltable_IAutomataScope [label="automata._symboltable.IAutomataScope.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomataArtifactScopeBuilder [label="automata._symboltable.AutomataArtifactScopeBuilder.java (1)"];
      node[shape=note];
      File_automata__symboltable_IAutomatonSymbolResolvingDelegate [label="automata._symboltable.IAutomatonSymbolResolvingDelegate.java (1)"];
      node[shape=note];
      File_automata__symboltable_AutomataSymTabMill [label="automata._symboltable.AutomataSymTabMill.java (1)"];
    }
    subgraph cluster_automata__parser {
      label = "automata._parser";
      labeljust = l;
      node[shape=note];
      File_automata__parser_AutomataAntlr [label="automata._parser.AutomataAntlr.g4 (1)"];
      node[shape=note];
      File_automata__parser_AutomataParser [label="automata._parser.AutomataParser.java (1)"];
    }
    subgraph cluster_automata__od {
      label = "automata._od";
      labeljust = l;
      node[shape=note];
      File_automata__od_Automata2OD [label="automata._od.Automata2OD.java (1)"];
    }
    subgraph cluster_automata__visitor {
      label = "automata._visitor";
      labeljust = l;
      node[shape=note];
      File_automata__visitor_AutomataDelegatorVisitor [label="automata._visitor.AutomataDelegatorVisitor.java (1)"];
      node[shape=note];
      File_automata__visitor_AutomataVisitor [label="automata._visitor.AutomataVisitor.java (1)"];
      node[shape=note];
      File_automata__visitor_AutomataSymbolVisitor [label="automata._visitor.AutomataSymbolVisitor.java (1)"];
      node[shape=note];
      File_automata__visitor_AutomataParentAwareVisitor [label="automata._visitor.AutomataParentAwareVisitor.java (1)"];
      node[shape=note];
      File_automata__visitor_AutomataScopeVisitor [label="automata._visitor.AutomataScopeVisitor.java (1)"];
      node[shape=note];
      File_automata__visitor_AutomataInheritanceVisitor [label="automata._visitor.AutomataInheritanceVisitor.java (1)"];
    }
    subgraph cluster_automata__cocos {
      label = "automata._cocos";
      labeljust = l;
      node[shape=note];
      File_automata__cocos_AutomataCoCoChecker [label="automata._cocos.AutomataCoCoChecker.java (1)"];
      node[shape=note];
      File_automata__cocos_AutomataASTStateCoCo [label="automata._cocos.AutomataASTStateCoCo.java (1)"];
      node[shape=note];
      File_automata__cocos_AutomataASTAutomataNodeCoCo [label="automata._cocos.AutomataASTAutomataNodeCoCo.java (1)"];
      node[shape=note];
      File_automata__cocos_AutomataASTAutomatonCoCo [label="automata._cocos.AutomataASTAutomatonCoCo.java (1)"];
      node[shape=note];
      File_automata__cocos_AutomataASTTransitionCoCo [label="automata._cocos.AutomataASTTransitionCoCo.java (1)"];
    }
    subgraph cluster_automata__ast {
      label = "automata._ast";
      labeljust = l;
      node[shape=note];
      File_automata__ast_ASTAutomaton [label="automata._ast.ASTAutomaton.java (1)"];
      node[shape=note];
      File_automata__ast_AutomataMill [label="automata._ast.AutomataMill.java (1)"];
      node[shape=note];
      File_automata__ast_MCBasicTypesMillForAutomata [label="automata._ast.MCBasicTypesMillForAutomata.java (1)"];
      node[shape=note];
      File_automata__ast_MCBasicsMillForAutomata [label="automata._ast.MCBasicsMillForAutomata.java (1)"];
      node[shape=note];
      File_automata__ast_ASTConstantsAutomata [label="automata._ast.ASTConstantsAutomata.java (1)"];
      node[shape=note];
      File_automata__ast_ASTTransition [label="automata._ast.ASTTransition.java (1)"];
      node[shape=note];
      File_automata__ast_AutomataNodeFactory [label="automata._ast.AutomataNodeFactory.java (1)"];
      node[shape=note];
      File_automata__ast_AutomataLiterals [label="automata._ast.AutomataLiterals.java (1)"];
      node[shape=note];
      File_automata__ast_TypeSymbolsMillForAutomata [label="automata._ast.TypeSymbolsMillForAutomata.java (1)"];
      node[shape=note];
      File_automata__ast_ASTState [label="automata._ast.ASTState.java (1)"];
      node[shape=note];
      File_automata__ast_ASTAutomatonBuilder [label="automata._ast.ASTAutomatonBuilder.java (1)"];
      node[shape=note];
      File_automata__ast_ASTStateBuilder [label="automata._ast.ASTStateBuilder.java (1)"];
      node[shape=note];
      File_automata__ast_ASTTransitionBuilder [label="automata._ast.ASTTransitionBuilder.java (1)"];
      node[shape=note];
      File_automata__ast_ASTAutomataNode [label="automata._ast.ASTAutomataNode.java (1)"];
    }
    subgraph cluster__visitor {
      label = "_visitor";
      labeljust = l;
      subgraph cluster__visitor_parentaware {
        label = "_visitor.parentaware";
        labeljust = l;
        node[shape=ellipse];
        Template__visitor_parentaware_Travers [label="_visitor.parentaware.Travers.ftl (3)"];
        node[shape=ellipse];
        Template__visitor_parentaware_GetParent [label="_visitor.parentaware.GetParent.ftl (1)"];
      }
      subgraph cluster__visitor_delegator {
        label = "_visitor.delegator";
        labeljust = l;
        node[shape=ellipse];
        Template__visitor_delegator_SetVisitor [label="_visitor.delegator.SetVisitor.ftl (4)"];
        node[shape=ellipse];
        Template__visitor_delegator_VisitorMethods [label="_visitor.delegator.VisitorMethods.ftl (68)"];
        node[shape=ellipse];
        Template__visitor_delegator_SetRealThis [label="_visitor.delegator.SetRealThis.ftl (1)"];
      }
      subgraph cluster__visitor_scope {
        label = "_visitor.scope";
        labeljust = l;
        node[shape=ellipse];
        Template__visitor_scope_Traverse [label="_visitor.scope.Traverse.ftl (2)"];
      }
      subgraph cluster__visitor_inheritance {
        label = "_visitor.inheritance";
        labeljust = l;
        node[shape=ellipse];
        Template__visitor_inheritance_Handle [label="_visitor.inheritance.Handle.ftl (4)"];
      }
      node[shape=ellipse];
      Template__visitor_Traverse [label="_visitor.Traverse.ftl (3)"];
      node[shape=ellipse];
      Template__visitor_Handle [label="_visitor.Handle.ftl (7)"];
    }
    subgraph cluster__ast_ast_class {
      label = "_ast.ast_class";
      labeljust = l;
      subgraph cluster__ast_ast_class_builder {
        label = "_ast.ast_class.builder";
        labeljust = l;
        node[shape=ellipse];
        Template__ast_ast_class_builder_ASTCNodeInit [label="_ast.ast_class.builder.ASTCNodeInit.ftl (3)"];
        node[shape=ellipse];
        Template__ast_ast_class_builder_ASTCNodeMethodDelegate [label="_ast.ast_class.builder.ASTCNodeMethodDelegate.ftl (102)"];
      }
      subgraph cluster__ast_ast_class_symboltable {
        label = "_ast.ast_class.symboltable";
        labeljust = l;
        node[shape=ellipse];
        Template__ast_ast_class_symboltable_InheritedSetEnclosingScope [label="_ast.ast_class.symboltable.InheritedSetEnclosingScope.ftl (9)"];
      }
      node[shape=ellipse];
      Template__ast_ast_class_Accept [label="_ast.ast_class.Accept.ftl (3)"];
      node[shape=ellipse];
      Template__ast_ast_class_AcceptSuper [label="_ast.ast_class.AcceptSuper.ftl (9)"];
      node[shape=ellipse];
      Template__ast_ast_class_GetChildren [label="_ast.ast_class.GetChildren.ftl (3)"];
    }
    subgraph cluster__ast_nodefactory {
      label = "_ast.nodefactory";
      labeljust = l;
      node[shape=ellipse];
      Template__ast_nodefactory_Create [label="_ast.nodefactory.Create.ftl (3)"];
      node[shape=ellipse];
      Template__ast_nodefactory_DoCreate [label="_ast.nodefactory.DoCreate.ftl (3)"];
      node[shape=ellipse];
      Template__ast_nodefactory_CreateDelegateMethod [label="_ast.nodefactory.CreateDelegateMethod.ftl (6)"];
      node[shape=ellipse];
      Template__ast_nodefactory_GetFactory [label="_ast.nodefactory.GetFactory.ftl (1)"];
    }
    subgraph cluster__ast_builder {
      label = "_ast.builder";
      labeljust = l;
      subgraph cluster__ast_builder_opt {
        label = "_ast.builder.opt";
        labeljust = l;
        node[shape=ellipse];
        Template__ast_builder_opt_Set [label="_ast.builder.opt.Set.ftl (5)"];
        node[shape=ellipse];
        Template__ast_builder_opt_SetAbsent [label="_ast.builder.opt.SetAbsent.ftl (5)"];
      }
      node[shape=ellipse];
      Template__ast_builder_BuildMethod [label="_ast.builder.BuildMethod.ftl (3)"];
      node[shape=ellipse];
      Template__ast_builder_Set [label="_ast.builder.Set.ftl (45)"];
      node[shape=ellipse];
      Template__ast_builder_IsValidMethod [label="_ast.builder.IsValidMethod.ftl (9)"];
      node[shape=ellipse];
      Template__ast_builder_MethodDelegate [label="_ast.builder.MethodDelegate.ftl (140)"];
    }
    subgraph cluster__ast_ast_constants {
      label = "_ast.ast_constants";
      labeljust = l;
      node[shape=ellipse];
      Template__ast_ast_constants_GetAllLanguages [label="_ast.ast_constants.GetAllLanguages.ftl (1)"];
    }
    subgraph cluster__ast_mill {
      label = "_ast.mill";
      labeljust = l;
      node[shape=ellipse];
      Template__ast_mill_InitMethod [label="_ast.mill.InitMethod.ftl (1)"];
      node[shape=ellipse];
      Template__ast_mill_InitMeMethod [label="_ast.mill.InitMeMethod.ftl (1)"];
      node[shape=ellipse];
      Template__ast_mill_ResetMethod [label="_ast.mill.ResetMethod.ftl (1)"];
      node[shape=ellipse];
      Template__ast_mill_BuilderMethod [label="_ast.mill.BuilderMethod.ftl (3)"];
      node[shape=ellipse];
      Template__ast_mill_BuilderDelegatorMethod [label="_ast.mill.BuilderDelegatorMethod.ftl (6)"];
      node[shape=ellipse];
      Template__ast_mill_GetMillMethod [label="_ast.mill.GetMillMethod.ftl (1)"];
      node[shape=ellipse];
      Template__ast_mill_ProtectedBuilderMethod [label="_ast.mill.ProtectedBuilderMethod.ftl (3)"];
    }
    node[shape=box3d];
    Model_Automata [label="Automata (1)"];
  }
  Model_Automata -> Template_parser_Parser;
  Model_Automata -> Template_core_Class;
  Model_Automata -> Template_parser_MCParser;
  Model_Automata -> Template_od_DiagramVisitor;
  Model_Automata -> Template_core_Interface;
  Model_Automata -> Template_core_Enum;
  Template_core_Constructor -> Template__symboltable_symboltablecreatordelegator_Constructor;
  Template_core_Constructor -> Template_core_EmptyBody;
  Template_core_Constructor -> Template__symboltable_artifactscope_Constructor;
  Template_core_Constructor -> Template__symboltable_language_Constructor;
  Template_core_Constructor -> Template__symboltable_symbolloader_Constructor;
  Template_core_Constructor -> Template__symboltable_modelloader_Constructor;
  Template_core_Attribute -> Template_core_Value;
  Template_core_Class -> File_automata__symboltable_AutomataGlobalScopeBuilder;
  Template_core_Class -> File_automata__symboltable_AutomataScopeBuilder;
  Template_core_Class -> File_automata__ast_ASTConstantsAutomata;
  Template_core_Class -> File_automata__symboltable_AutomataSymbolTableCreatorTOP;
  Template_core_Class -> File_automata__cocos_AutomataCoCoChecker;
  Template_core_Class -> File_automata__symboltable_AutomataLanguage;
  Template_core_Class -> File_automata__ast_MCBasicsMillForAutomata;
  Template_core_Class -> File_automata__symboltable_AutomatonSymbol;
  Template_core_Class -> File_automata__symboltable_serialization_AutomataScopeDeSer;
  Template_core_Class -> File_automata__symboltable_AutomataSymbolTableCreatorDelegatorBuilder;
  Template_core_Class -> File_automata__ast_ASTAutomatonBuilder;
  Template_core_Class -> File_automata__symboltable_AutomataArtifactScopeBuilder;
  Template_core_Class -> File_automata__symboltable_AutomataGlobalScope;
  Template_core_Class -> Template_core_Method;
  Template_core_Class -> File_automata__ast_TypeSymbolsMillForAutomata;
  Template_core_Class -> File_automata__ast_ASTState;
  Template_core_Class -> Template_core_Constructor;
  Template_core_Class -> File_automata__symboltable_serialization_AutomataSymbolTablePrinter;
  Template_core_Class -> File_automata__symboltable_AutomataSymbolTableCreatorBuilder;
  Template_core_Class -> File_automata__symboltable_serialization_AutomatonSymbolDeSer;
  Template_core_Class -> File_automata__ast_AutomataNodeFactory;
  Template_core_Class -> File_automata__ast_ASTAutomaton;
  Template_core_Class -> File_automata__symboltable_AutomatonSymbolLoader;
  Template_core_Class -> File_automata__symboltable_AutomatonSymbolBuilder;
  Template_core_Class -> File_automata__ast_ASTTransitionBuilder;
  Template_core_Class -> File_automata__symboltable_AutomataSymTabMill;
  Template_core_Class -> File_automata__symboltable_AutomataArtifactScope;
  Template_core_Class -> File_automata__ast_ASTTransition;
  Template_core_Class -> Template_core_Annotations;
  Template_core_Class -> File_automata__symboltable_MCBasicTypesSTCForAutomata;
  Template_core_Class -> File_automata__ast_MCBasicTypesMillForAutomata;
  Template_core_Class -> File_automata__visitor_AutomataDelegatorVisitor;
  Template_core_Class -> File_automata__visitor_AutomataParentAwareVisitor;
  Template_core_Class -> File_automata__symboltable_AutomataModelLoaderBuilder;
  Template_core_Class -> File_automata__symboltable_AutomataSymbolTableCreatorDelegator;
  Template_core_Class -> Template_core_Imports;
  Template_core_Class -> File_automata__symboltable_AutomatonSymbolLoaderBuilder;
  Template_core_Class -> File_automata__symboltable_TypeSymbolsSTCForAutomata;
  Template_core_Class -> File_automata__ast_ASTStateBuilder;
  Template_core_Class -> File_automata__ast_AutomataMill;
  Template_core_Class -> Template_core_Attribute;
  Template_core_Class -> File_automata__symboltable_AutomataScope;
  Template_core_Class -> File_automata__symboltable_AutomataModelLoader;
  Template_core_Interface -> File_automata__cocos_AutomataASTAutomataNodeCoCo;
  Template_core_Interface -> File_automata__visitor_AutomataScopeVisitor;
  Template_core_Interface -> File_automata__cocos_AutomataASTTransitionCoCo;
  Template_core_Interface -> File_automata__visitor_AutomataVisitor;
  Template_core_Interface -> File_automata__symboltable_ICommonAutomataSymbol;
  Template_core_Interface -> Template_core_Annotations;
  Template_core_Interface -> File_automata__visitor_AutomataInheritanceVisitor;
  Template_core_Interface -> File_automata__cocos_AutomataASTStateCoCo;
  Template_core_Interface -> File_automata__symboltable_IAutomataGlobalScope;
  Template_core_Interface -> Template_core_Imports;
  Template_core_Interface -> Template_core_Method;
  Template_core_Interface -> File_automata__visitor_AutomataSymbolVisitor;
  Template_core_Interface -> File_automata__cocos_AutomataASTAutomatonCoCo;
  Template_core_Interface -> File_automata__symboltable_IAutomatonSymbolResolvingDelegate;
  Template_core_Interface -> File_automata__symboltable_IAutomataScope;
  Template_core_Interface -> File_automata__ast_ASTAutomataNode;
  Template_core_Method -> Template__ast_mill_InitMethod;
  Template_core_Method -> Template__ast_ast_class_AcceptSuper;
  Template_core_Method -> Template__symboltable_scope_SetSpanningSymbolAbsent;
  Template_core_Method -> Template__symboltable_serialization_symbolDeSer_DeserializeJsonObject;
  Template_core_Method -> Template_core_EmptyBody;
  Template_core_Method -> Template__symboltable_iglobalscope_LoadModelsFor;
  Template_core_Method -> Template__symboltable_symbol_DetermineFullName;
  Template_core_Method -> Template__symboltable_symboltablecreatordelegator_CreateFromAST;
  Template_core_Method -> Template__ast_nodefactory_DoCreate;
  Template_core_Method -> Template__symboltable_scope_SetSubScopes;
  Template_core_Method -> Template__symboltable_artifactscope_GetFilePath;
  Template_core_Method -> Template__symboltable_iscope_ResolveDelegate;
  Template_core_Method -> Template__ast_ast_constants_GetAllLanguages;
  Template_core_Method -> Template__symboltable_artifactscope_GetName;
  Template_core_Method -> Template__symboltable_modelloader_CreateSymbolTableFromAST;
  Template_core_Method -> Template__visitor_delegator_VisitorMethods;
  Template_core_Method -> Template__symboltable_modelloader_ResolveSymbol;
  Template_core_Method -> Template_data_EqualAttributes;
  Template_core_Method -> Template_methods_MethodDelegate;
  Template_core_Method -> Template__symboltable_artifactscope_ContinueWithEnclosingScope;
  Template_core_Method -> Template__ast_builder_Set;
  Template_core_Method -> Template__symboltable_artifactscope_GetRemainingNameForResolveDown;
  Template_core_Method -> Template__ast_ast_class_GetChildren;
  Template_core_Method -> Template__symboltable_globalscope_ResolveAdapted;
  Template_core_Method -> Template__symboltable_symbol_Build;
  Template_core_Method -> Template_methods_opt_Set;
  Template_core_Method -> Template__symboltable_symbolloader_IsSymbolLoaded;
  Template_core_Method -> Template__ast_nodefactory_GetFactory;
  Template_core_Method -> Template__symboltable_symbolloader_LoadSymbol;
  Template_core_Method -> Template__symboltable_serialization_symbolDeSer_DeserializeSymbol;
  Template_core_Method -> Template__symboltable_symboltablecreator_VisitNoSymbol;
  Template_core_Method -> Template__symboltable_serialization_symbolTablePrinter_SerializeRelevantSubScopes;
  Template_core_Method -> Template__symboltable_serialization_scopeDeSer_AddAndLinkSpanningSymbol;
  Template_core_Method -> Template__symboltable_symbolloader_Build;
  Template_core_Method -> Template__symboltable_serialization_symbolDeSer_Serialize;
  Template_core_Method -> Template__visitor_parentaware_GetParent;
  Template_core_Method -> Template__ast_builder_MethodDelegate;
  Template_core_Method -> Template__symboltable_symboltablecreator_AddToScope;
  Template_core_Method -> Template__symboltable_symbolloader_GetSymbol;
  Template_core_Method -> Template__symboltable_symboltablecreatordelegator_Build;
  Template_core_Method -> Template__symboltable_serialization_scopeDeSer_AddSymbols;
  Template_core_Method -> Template__symboltable_scope_SetSpanningSymbol;
  Template_core_Method -> Template__symboltable_serialization_symbolTablePrinter_VisitScope;
  Template_core_Method -> Template__symboltable_serialization_symbolTablePrinter_SerializeSymbol;
  Template_core_Method -> Template__visitor_inheritance_Handle;
  Template_core_Method -> Template__symboltable_artifactscope_CheckIfContinueAsSubScope;
  Template_core_Method -> Template_methods_opt_IsPresent;
  Template_core_Method -> Template__symboltable_iscope_ResolveDownMany;
  Template_core_Method -> Template__symboltable_globalscope_CacheMethod;
  Template_core_Method -> Template__symboltable_symbolloader_Set;
  Template_core_Method -> Template__symboltable_symboltablecreator_SetLinkBetweenSpannedScopeAndNode;
  Template_core_Method -> Template_methods_Get;
  Template_core_Method -> Template__symboltable_modelloader_LoadSymbolsIntoScope;
  Template_core_Method -> Template__ast_mill_BuilderDelegatorMethod;
  Template_core_Method -> Template__ast_builder_opt_Set;
  Template_core_Method -> Template__symboltable_scope_RemoveSubScope;
  Template_core_Method -> Template__symboltable_serialization_symbolTablePrinter_HasSymbolsInSubScopes;
  Template_core_Method -> Template__symboltable_serialization_symbolTablePrinter_FilterRelevantSubScopes;
  Template_core_Method -> Template__symboltable_symboltablecreator_AddToScopeAndLinkWithNode;
  Template_core_Method -> Template__symboltable_symTabMill_BuilderMethod;
  Template_core_Method -> Template__symboltable_symboltablecreator_PutOnStack;
  Template_core_Method -> Template__ast_mill_BuilderMethod;
  Template_core_Method -> Template__ast_ast_class_Accept;
  Template_core_Method -> Template__ast_mill_GetMillMethod;
  Template_core_Method -> Template__symboltable_serialization_scopeDeSer_AddAndLinkSubScopes;
  Template_core_Method -> Template__symboltable_symTabMill_Reset;
  Template_core_Method -> Template__symboltable_serialization_symbolTablePrinter_SerializeLocalSymbols;
  Template_core_Method -> Template_methods_opt_Get;
  Template_core_Method -> Template__ast_ast_class_builder_ASTCNodeMethodDelegate;
  Template_core_Method -> Template__visitor_scope_Traverse;
  Template_core_Method -> Template__symboltable_scope_AddSubScope;
  Template_core_Method -> Template__ast_builder_BuildMethod;
  Template_core_Method -> Template__symboltable_serialization_symbolDeSer_DeserializeString;
  Template_core_Method -> Template_methods_Set;
  Template_core_Method -> Template__symboltable_symTabMill_InitMe;
  Template_core_Method -> Template__visitor_delegator_SetRealThis;
  Template_core_Method -> Template__symboltable_globalscope_Build;
  Template_core_Method -> Template__symboltable_iscope_ContinueAsSubScope;
  Template_core_Method -> Template__symboltable_scope_Accept;
  Template_core_Method -> Template__symboltable_artifactscope_Build;
  Template_core_Method -> Template__visitor_parentaware_Travers;
  Template_core_Method -> Template__symboltable_scope_GetSubScopes;
  Template_core_Method -> Template__symboltable_serialization_symbolTablePrinter_VisitSymbol;
  Template_core_Method -> Template__symboltable_modelloader_LoadModels;
  Template_core_Method -> Template__ast_mill_InitMeMethod;
  Template_core_Method -> Template__symboltable_symTabMill_GetMill;
  Template_core_Method -> Template__symboltable_symbol_DeterminePackageName;
  Template_core_Method -> Template__ast_builder_opt_SetAbsent;
  Template_core_Method -> Template__symboltable_symboltablecreator_Visit;
  Template_core_Method -> Template__visitor_Handle;
  Template_core_Method -> Template__symboltable_language_CalculateModelNamesFor;
  Template_core_Method -> Template__symboltable_artifactscope_IsPresentName;
  Template_core_Method -> Template__symboltable_scope_Build;
  Template_core_Method -> Template__ast_mill_ProtectedBuilderMethod;
  Template_core_Method -> Template__symboltable_iglobalscope_ResolveMany;
  Template_core_Method -> Template__symboltable_modelloader_Build;
  Template_core_Method -> Template__symboltable_serialization_scopeDeSer_DeserializeArtifactScope;
  Template_core_Method -> Template__symboltable_iscope_ResolveMany;
  Template_core_Method -> Template_data_DeepEqualsWithComments;
  Template_core_Method -> Template__ast_builder_IsValidMethod;
  Template_core_Method -> Template__ast_mill_ResetMethod;
  Template_core_Method -> Template__symboltable_symboltablecreator_CreateScope;
  Template_core_Method -> Template__ast_nodefactory_Create;
  Template_core_Method -> Template__visitor_delegator_SetVisitor;
  Template_core_Method -> Template__symboltable_serialization_scopeDeSer_DeserializeScope;
  Template_core_Method -> Template__ast_nodefactory_CreateDelegateMethod;
  Template_core_Method -> Template__symboltable_symboltablecreator_CreateFromAST;
  Template_core_Method -> Template__symboltable_symbol_NameSetter;
  Template_core_Method -> Template__symboltable_iscope_ResolveManyLocally;
  Template_core_Method -> Template__symboltable_symboltablecreator_SetLinkBetweenSymbolAndNode;
  Template_core_Method -> Template__symboltable_serialization_scopeDeSer_DeserializeSymbol;
  Template_core_Method -> Template__visitor_Traverse;
  Template_core_Method -> Template_data_EqualsWithComments;
  Template_core_Method -> Template__symboltable_scope_GetSymbolSize;
  Template_core_Method -> Template__symboltable_artifactscope_GetTopLevelSymbol;
  Template_core_Method -> Template_data_DeepCloneWithParameters;
  Template_core_Method -> Template__symboltable_scope_SetEnclosingScope;
  Template_core_Method -> Template__symboltable_serialization_scopeDeSer_DeserializeJsonObject;
  Template_core_Method -> Template__symboltable_modelloader_LoadModelsIntoScope;
  Template_core_Method -> Template_methods_opt_SetAbsent;
  Template_core_Method -> Template__symboltable_serialization_symbolTablePrinter_VisitArtifactScope;
  Template_core_Method -> Template__symboltable_iscope_ContinueWithEnclosingScope;
  Template_core_Method -> Template__symboltable_iscope_Filter;
  Template_core_Method -> Template__symboltable_modelloader_ShowWarningIfParsedModels;
  Template_core_Method -> Template__ast_ast_class_symboltable_InheritedSetEnclosingScope;
  Template_core_Method -> Template_data_DeepEqualsWithOrder;
  Template_core_Method -> Template__symboltable_serialization_symbolTablePrinter_AddScopeSpanningSymbol;
  Template_core_Method -> Template__symboltable_modelloader_Resolve;
  Template_core_EmptyConstants -> Template_core_Constants;
  Template_core_Enum -> File_automata__ast_AutomataLiterals;
  Template_core_Enum -> Template_core_Method;
  Template_core_Enum -> Template_core_EmptyConstants;
  Template_core_Enum -> Template_core_Constructor;
  Template_core_Enum -> Template_core_Attribute;
  Template__symboltable_scope_SetSpanningSymbolAbsent -> Template_methods_opt_SetAbsent;
  Template__symboltable_scope_SetSpanningSymbol -> Template_methods_opt_Set;
  Template__symboltable_symbolloader_Set -> Template_methods_Set;
  Template_parser_Parser -> Template_parser_LexerMember;
  Template_parser_Parser -> Template_parser_ParserHeader;
  Template_parser_Parser -> File_automata__parser_AutomataAntlr;
  Template_parser_MCParser -> Template_parser_MCParserMethods;
  Template_parser_MCParser -> File_automata__parser_AutomataParser;
  Template_od_DiagramVisitor -> File_automata__od_Automata2OD;
  Template__ast_builder_BuildMethod -> Template__ast_ast_class_builder_ASTCNodeInit;
}
