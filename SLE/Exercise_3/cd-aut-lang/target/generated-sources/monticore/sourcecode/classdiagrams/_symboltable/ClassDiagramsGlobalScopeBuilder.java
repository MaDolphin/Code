/* generated from model ClassDiagrams */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package classdiagrams._symboltable;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class ClassDiagramsGlobalScopeBuilder  {

    /* generated by template core.Attribute*/
 protected  ClassDiagramsGlobalScopeBuilder realBuilder ;

    /* generated by template core.Attribute*/
 protected  de.monticore.io.paths.ModelPath modelPath ;

    /* generated by template core.Attribute*/
 protected  ClassDiagramsLanguage classDiagramsLanguage ;

    /* generated by template core.Attribute*/
 protected  List<de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> adaptedTypeVarSymbolResolvingDelegate = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  List<de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> adaptedFieldSymbolResolvingDelegate = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  List<de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> adaptedMethodSymbolResolvingDelegate = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  List<de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> adaptedTypeSymbolResolvingDelegate = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  List<classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> adaptedCDDefinitionSymbolResolvingDelegate = new java.util.ArrayList<>();


    /* generated by template core.Constructor*/
 protected  ClassDiagramsGlobalScopeBuilder()  {
    this.realBuilder = (ClassDiagramsGlobalScopeBuilder) this;
}


    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScope build ()  {
      /* generated by template _symboltable.globalscope.Build*/

  ClassDiagramsGlobalScope scope = new ClassDiagramsGlobalScope(modelPath, classDiagramsLanguage);
  return scope;
}

    /* generated by template core.Method*/
 public  boolean isValid ()  {
      /* generated by template _ast.builder.IsValidMethod*/

        if (modelPath == null) {
            return false;
        }
        if (classDiagramsLanguage == null) {
            return false;
        }
        return true;

}

    /* generated by template core.Method*/
 public  de.monticore.io.paths.ModelPath getModelPath ()  {
      /* generated by template methods.Get*/

return this.modelPath;

}

    /* generated by template core.Method*/
 public  ClassDiagramsLanguage getClassDiagramsLanguage ()  {
      /* generated by template methods.Get*/

return this.classDiagramsLanguage;

}

    /* generated by template core.Method*/
 public  boolean containsAdaptedTypeVarSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllAdaptedTypeVarSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyAdaptedTypeVarSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> iteratorAdaptedTypeVarSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeAdaptedTypeVarSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().size();

}

    /* generated by template core.Method*/
 public  de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate[] toArrayAdaptedTypeVarSymbolResolvingDelegate (de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayAdaptedTypeVarSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> spliteratorAdaptedTypeVarSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> streamAdaptedTypeVarSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().stream();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> parallelStreamAdaptedTypeVarSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().parallelStream();

}

    /* generated by template core.Method*/
 public  de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate getAdaptedTypeVarSymbolResolvingDelegate (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfAdaptedTypeVarSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfAdaptedTypeVarSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsAdaptedTypeVarSymbolResolvingDelegate (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeAdaptedTypeVarSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> listIteratorAdaptedTypeVarSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> listIteratorAdaptedTypeVarSymbolResolvingDelegate (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> subListAdaptedTypeVarSymbolResolvingDelegate (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeVarSymbolResolvingDelegateList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> getAdaptedTypeVarSymbolResolvingDelegateList ()  {
      /* generated by template methods.Get*/

return this.adaptedTypeVarSymbolResolvingDelegate;

}

    /* generated by template core.Method*/
 public  boolean containsAdaptedFieldSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllAdaptedFieldSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyAdaptedFieldSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> iteratorAdaptedFieldSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeAdaptedFieldSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().size();

}

    /* generated by template core.Method*/
 public  de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate[] toArrayAdaptedFieldSymbolResolvingDelegate (de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayAdaptedFieldSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> spliteratorAdaptedFieldSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> streamAdaptedFieldSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().stream();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> parallelStreamAdaptedFieldSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().parallelStream();

}

    /* generated by template core.Method*/
 public  de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate getAdaptedFieldSymbolResolvingDelegate (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfAdaptedFieldSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfAdaptedFieldSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsAdaptedFieldSymbolResolvingDelegate (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeAdaptedFieldSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> listIteratorAdaptedFieldSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> listIteratorAdaptedFieldSymbolResolvingDelegate (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> subListAdaptedFieldSymbolResolvingDelegate (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedFieldSymbolResolvingDelegateList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> getAdaptedFieldSymbolResolvingDelegateList ()  {
      /* generated by template methods.Get*/

return this.adaptedFieldSymbolResolvingDelegate;

}

    /* generated by template core.Method*/
 public  boolean containsAdaptedMethodSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllAdaptedMethodSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyAdaptedMethodSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> iteratorAdaptedMethodSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeAdaptedMethodSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().size();

}

    /* generated by template core.Method*/
 public  de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate[] toArrayAdaptedMethodSymbolResolvingDelegate (de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayAdaptedMethodSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> spliteratorAdaptedMethodSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> streamAdaptedMethodSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().stream();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> parallelStreamAdaptedMethodSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().parallelStream();

}

    /* generated by template core.Method*/
 public  de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate getAdaptedMethodSymbolResolvingDelegate (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfAdaptedMethodSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfAdaptedMethodSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsAdaptedMethodSymbolResolvingDelegate (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeAdaptedMethodSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> listIteratorAdaptedMethodSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> listIteratorAdaptedMethodSymbolResolvingDelegate (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> subListAdaptedMethodSymbolResolvingDelegate (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedMethodSymbolResolvingDelegateList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> getAdaptedMethodSymbolResolvingDelegateList ()  {
      /* generated by template methods.Get*/

return this.adaptedMethodSymbolResolvingDelegate;

}

    /* generated by template core.Method*/
 public  boolean containsAdaptedTypeSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllAdaptedTypeSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyAdaptedTypeSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> iteratorAdaptedTypeSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeAdaptedTypeSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().size();

}

    /* generated by template core.Method*/
 public  de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate[] toArrayAdaptedTypeSymbolResolvingDelegate (de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayAdaptedTypeSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> spliteratorAdaptedTypeSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> streamAdaptedTypeSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().stream();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> parallelStreamAdaptedTypeSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().parallelStream();

}

    /* generated by template core.Method*/
 public  de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate getAdaptedTypeSymbolResolvingDelegate (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfAdaptedTypeSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfAdaptedTypeSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsAdaptedTypeSymbolResolvingDelegate (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeAdaptedTypeSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> listIteratorAdaptedTypeSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> listIteratorAdaptedTypeSymbolResolvingDelegate (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> subListAdaptedTypeSymbolResolvingDelegate (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedTypeSymbolResolvingDelegateList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> getAdaptedTypeSymbolResolvingDelegateList ()  {
      /* generated by template methods.Get*/

return this.adaptedTypeSymbolResolvingDelegate;

}

    /* generated by template core.Method*/
 public  boolean containsAdaptedCDDefinitionSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllAdaptedCDDefinitionSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyAdaptedCDDefinitionSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> iteratorAdaptedCDDefinitionSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeAdaptedCDDefinitionSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().size();

}

    /* generated by template core.Method*/
 public  classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate[] toArrayAdaptedCDDefinitionSymbolResolvingDelegate (classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayAdaptedCDDefinitionSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> spliteratorAdaptedCDDefinitionSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> streamAdaptedCDDefinitionSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().stream();

}

    /* generated by template core.Method*/
 public  Stream<classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> parallelStreamAdaptedCDDefinitionSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().parallelStream();

}

    /* generated by template core.Method*/
 public  classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate getAdaptedCDDefinitionSymbolResolvingDelegate (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfAdaptedCDDefinitionSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfAdaptedCDDefinitionSymbolResolvingDelegate (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsAdaptedCDDefinitionSymbolResolvingDelegate (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeAdaptedCDDefinitionSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> listIteratorAdaptedCDDefinitionSymbolResolvingDelegate ()  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> listIteratorAdaptedCDDefinitionSymbolResolvingDelegate (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> subListAdaptedCDDefinitionSymbolResolvingDelegate (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getAdaptedCDDefinitionSymbolResolvingDelegateList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> getAdaptedCDDefinitionSymbolResolvingDelegateList ()  {
      /* generated by template methods.Get*/

return this.adaptedCDDefinitionSymbolResolvingDelegate;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder setModelPath (de.monticore.io.paths.ModelPath modelPath)  {
      /* generated by template _ast.builder.Set*/

    this.modelPath = modelPath;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder setClassDiagramsLanguage (ClassDiagramsLanguage classDiagramsLanguage)  {
      /* generated by template _ast.builder.Set*/

    this.classDiagramsLanguage = classDiagramsLanguage;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder clearAdaptedTypeVarSymbolResolvingDelegate ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeVarSymbolResolvingDelegateList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAdaptedTypeVarSymbolResolvingDelegate (de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeVarSymbolResolvingDelegateList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAllAdaptedTypeVarSymbolResolvingDelegate (Collection<? extends de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeVarSymbolResolvingDelegateList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAdaptedTypeVarSymbolResolvingDelegate (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeVarSymbolResolvingDelegateList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAllAdaptedTypeVarSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeVarSymbolResolvingDelegateList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder retainAllAdaptedTypeVarSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeVarSymbolResolvingDelegateList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeIfAdaptedTypeVarSymbolResolvingDelegate (Predicate<? super de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeVarSymbolResolvingDelegateList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder forEachAdaptedTypeVarSymbolResolvingDelegate (Consumer<? super de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeVarSymbolResolvingDelegateList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAdaptedTypeVarSymbolResolvingDelegate (int index,de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeVarSymbolResolvingDelegateList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAllAdaptedTypeVarSymbolResolvingDelegate (int index,Collection<? extends de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeVarSymbolResolvingDelegateList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAdaptedTypeVarSymbolResolvingDelegate (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeVarSymbolResolvingDelegateList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder setAdaptedTypeVarSymbolResolvingDelegate (int index,de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeVarSymbolResolvingDelegateList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder replaceAllAdaptedTypeVarSymbolResolvingDelegate (UnaryOperator<de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeVarSymbolResolvingDelegateList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder sortAdaptedTypeVarSymbolResolvingDelegate (Comparator<? super de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeVarSymbolResolvingDelegateList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder setAdaptedTypeVarSymbolResolvingDelegateList (List<de.monticore.types.typesymbols._symboltable.ITypeVarSymbolResolvingDelegate> adaptedTypeVarSymbolResolvingDelegate)  {
      /* generated by template _ast.builder.Set*/

    this.adaptedTypeVarSymbolResolvingDelegate = adaptedTypeVarSymbolResolvingDelegate;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder clearAdaptedFieldSymbolResolvingDelegate ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedFieldSymbolResolvingDelegateList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAdaptedFieldSymbolResolvingDelegate (de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedFieldSymbolResolvingDelegateList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAllAdaptedFieldSymbolResolvingDelegate (Collection<? extends de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedFieldSymbolResolvingDelegateList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAdaptedFieldSymbolResolvingDelegate (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedFieldSymbolResolvingDelegateList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAllAdaptedFieldSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedFieldSymbolResolvingDelegateList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder retainAllAdaptedFieldSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedFieldSymbolResolvingDelegateList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeIfAdaptedFieldSymbolResolvingDelegate (Predicate<? super de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedFieldSymbolResolvingDelegateList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder forEachAdaptedFieldSymbolResolvingDelegate (Consumer<? super de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedFieldSymbolResolvingDelegateList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAdaptedFieldSymbolResolvingDelegate (int index,de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedFieldSymbolResolvingDelegateList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAllAdaptedFieldSymbolResolvingDelegate (int index,Collection<? extends de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedFieldSymbolResolvingDelegateList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAdaptedFieldSymbolResolvingDelegate (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedFieldSymbolResolvingDelegateList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder setAdaptedFieldSymbolResolvingDelegate (int index,de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedFieldSymbolResolvingDelegateList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder replaceAllAdaptedFieldSymbolResolvingDelegate (UnaryOperator<de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedFieldSymbolResolvingDelegateList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder sortAdaptedFieldSymbolResolvingDelegate (Comparator<? super de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedFieldSymbolResolvingDelegateList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder setAdaptedFieldSymbolResolvingDelegateList (List<de.monticore.types.typesymbols._symboltable.IFieldSymbolResolvingDelegate> adaptedFieldSymbolResolvingDelegate)  {
      /* generated by template _ast.builder.Set*/

    this.adaptedFieldSymbolResolvingDelegate = adaptedFieldSymbolResolvingDelegate;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder clearAdaptedMethodSymbolResolvingDelegate ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedMethodSymbolResolvingDelegateList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAdaptedMethodSymbolResolvingDelegate (de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedMethodSymbolResolvingDelegateList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAllAdaptedMethodSymbolResolvingDelegate (Collection<? extends de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedMethodSymbolResolvingDelegateList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAdaptedMethodSymbolResolvingDelegate (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedMethodSymbolResolvingDelegateList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAllAdaptedMethodSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedMethodSymbolResolvingDelegateList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder retainAllAdaptedMethodSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedMethodSymbolResolvingDelegateList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeIfAdaptedMethodSymbolResolvingDelegate (Predicate<? super de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedMethodSymbolResolvingDelegateList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder forEachAdaptedMethodSymbolResolvingDelegate (Consumer<? super de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedMethodSymbolResolvingDelegateList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAdaptedMethodSymbolResolvingDelegate (int index,de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedMethodSymbolResolvingDelegateList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAllAdaptedMethodSymbolResolvingDelegate (int index,Collection<? extends de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedMethodSymbolResolvingDelegateList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAdaptedMethodSymbolResolvingDelegate (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedMethodSymbolResolvingDelegateList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder setAdaptedMethodSymbolResolvingDelegate (int index,de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedMethodSymbolResolvingDelegateList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder replaceAllAdaptedMethodSymbolResolvingDelegate (UnaryOperator<de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedMethodSymbolResolvingDelegateList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder sortAdaptedMethodSymbolResolvingDelegate (Comparator<? super de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedMethodSymbolResolvingDelegateList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder setAdaptedMethodSymbolResolvingDelegateList (List<de.monticore.types.typesymbols._symboltable.IMethodSymbolResolvingDelegate> adaptedMethodSymbolResolvingDelegate)  {
      /* generated by template _ast.builder.Set*/

    this.adaptedMethodSymbolResolvingDelegate = adaptedMethodSymbolResolvingDelegate;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder clearAdaptedTypeSymbolResolvingDelegate ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeSymbolResolvingDelegateList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAdaptedTypeSymbolResolvingDelegate (de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeSymbolResolvingDelegateList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAllAdaptedTypeSymbolResolvingDelegate (Collection<? extends de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeSymbolResolvingDelegateList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAdaptedTypeSymbolResolvingDelegate (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeSymbolResolvingDelegateList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAllAdaptedTypeSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeSymbolResolvingDelegateList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder retainAllAdaptedTypeSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeSymbolResolvingDelegateList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeIfAdaptedTypeSymbolResolvingDelegate (Predicate<? super de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeSymbolResolvingDelegateList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder forEachAdaptedTypeSymbolResolvingDelegate (Consumer<? super de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeSymbolResolvingDelegateList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAdaptedTypeSymbolResolvingDelegate (int index,de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeSymbolResolvingDelegateList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAllAdaptedTypeSymbolResolvingDelegate (int index,Collection<? extends de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeSymbolResolvingDelegateList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAdaptedTypeSymbolResolvingDelegate (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeSymbolResolvingDelegateList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder setAdaptedTypeSymbolResolvingDelegate (int index,de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeSymbolResolvingDelegateList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder replaceAllAdaptedTypeSymbolResolvingDelegate (UnaryOperator<de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeSymbolResolvingDelegateList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder sortAdaptedTypeSymbolResolvingDelegate (Comparator<? super de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedTypeSymbolResolvingDelegateList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder setAdaptedTypeSymbolResolvingDelegateList (List<de.monticore.types.typesymbols._symboltable.ITypeSymbolResolvingDelegate> adaptedTypeSymbolResolvingDelegate)  {
      /* generated by template _ast.builder.Set*/

    this.adaptedTypeSymbolResolvingDelegate = adaptedTypeSymbolResolvingDelegate;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder clearAdaptedCDDefinitionSymbolResolvingDelegate ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedCDDefinitionSymbolResolvingDelegateList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAdaptedCDDefinitionSymbolResolvingDelegate (classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedCDDefinitionSymbolResolvingDelegateList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAllAdaptedCDDefinitionSymbolResolvingDelegate (Collection<? extends classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedCDDefinitionSymbolResolvingDelegateList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAdaptedCDDefinitionSymbolResolvingDelegate (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedCDDefinitionSymbolResolvingDelegateList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAllAdaptedCDDefinitionSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedCDDefinitionSymbolResolvingDelegateList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder retainAllAdaptedCDDefinitionSymbolResolvingDelegate (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedCDDefinitionSymbolResolvingDelegateList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeIfAdaptedCDDefinitionSymbolResolvingDelegate (Predicate<? super classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedCDDefinitionSymbolResolvingDelegateList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder forEachAdaptedCDDefinitionSymbolResolvingDelegate (Consumer<? super classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedCDDefinitionSymbolResolvingDelegateList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAdaptedCDDefinitionSymbolResolvingDelegate (int index,classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedCDDefinitionSymbolResolvingDelegateList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder addAllAdaptedCDDefinitionSymbolResolvingDelegate (int index,Collection<? extends classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedCDDefinitionSymbolResolvingDelegateList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder removeAdaptedCDDefinitionSymbolResolvingDelegate (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedCDDefinitionSymbolResolvingDelegateList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder setAdaptedCDDefinitionSymbolResolvingDelegate (int index,classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedCDDefinitionSymbolResolvingDelegateList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder replaceAllAdaptedCDDefinitionSymbolResolvingDelegate (UnaryOperator<classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedCDDefinitionSymbolResolvingDelegateList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder sortAdaptedCDDefinitionSymbolResolvingDelegate (Comparator<? super classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getAdaptedCDDefinitionSymbolResolvingDelegateList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ClassDiagramsGlobalScopeBuilder setAdaptedCDDefinitionSymbolResolvingDelegateList (List<classdiagrams._symboltable.ICDDefinitionSymbolResolvingDelegate> adaptedCDDefinitionSymbolResolvingDelegate)  {
      /* generated by template _ast.builder.Set*/

    this.adaptedCDDefinitionSymbolResolvingDelegate = adaptedCDDefinitionSymbolResolvingDelegate;
    return this.realBuilder;

}

}
