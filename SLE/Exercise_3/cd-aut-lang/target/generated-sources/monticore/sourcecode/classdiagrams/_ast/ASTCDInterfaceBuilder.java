/* generated from model ClassDiagrams */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package classdiagrams._ast;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class ASTCDInterfaceBuilder extends de.monticore.ast.ASTNodeBuilder<ASTCDInterfaceBuilder>  {

    /* generated by template core.Attribute*/
 protected  ASTCDInterfaceBuilder realBuilder ;

    /* generated by template core.Attribute*/
 protected  Optional<classdiagrams._ast.ASTModifier> modifier = Optional.empty();

    /* generated by template core.Attribute*/
 protected  java.util.List<de.monticore.types.mcbasictypes._ast.ASTMCObjectType> r__interfaces = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  java.util.List<classdiagrams._ast.ASTCDAttribute> cDAttributes = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  java.util.List<classdiagrams._ast.ASTCDMethod> cDMethods = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  String name ;


    /* generated by template core.Constructor*/
 protected  ASTCDInterfaceBuilder()  {
    this.realBuilder = (ASTCDInterfaceBuilder) this;
}


    /* generated by template core.Method*/
 public  ASTCDInterface build ()  {
      /* generated by template _ast.builder.BuildMethod*/

        if (!isValid()) {
            if (name == null) {
                Log.error("0xA7222 name of type String must not be null");
            }
          throw new IllegalStateException();
        }
        ASTCDInterface value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTCDInterface();
    if (this.modifier.isPresent()) {
      value.setModifier(this.modifier.get());
    } else {
      value.setModifierAbsent();
    }
    value.setInterfaceList(this.r__interfaces);
    value.setCDAttributeList(this.cDAttributes);
    value.setCDMethodList(this.cDMethods);
    value.setName(this.name);
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;
}

    /* generated by template core.Method*/
 public  boolean isValid ()  {
      /* generated by template _ast.builder.IsValidMethod*/

        if (name == null) {
            return false;
        }
        return true;

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTModifier getModifier ()  {
      /* generated by template methods.opt.Get*/

if (isPresentModifier()) {
return this.modifier.get();
}
Log.error("0xA7003x733 Modifier can't return a value. It is empty.");
// Normally this statement is not reachable
throw new IllegalStateException();

}

    /* generated by template core.Method*/
 public  boolean isPresentModifier ()  {
      /* generated by template methods.opt.IsPresent*/

return this.modifier.isPresent();

}

    /* generated by template core.Method*/
 public  boolean containsInterface (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllInterfaces (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<de.monticore.types.mcbasictypes._ast.ASTMCObjectType> iteratorInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().size();

}

    /* generated by template core.Method*/
 public  de.monticore.types.mcbasictypes._ast.ASTMCObjectType[] toArrayInterfaces (de.monticore.types.mcbasictypes._ast.ASTMCObjectType[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<de.monticore.types.mcbasictypes._ast.ASTMCObjectType> spliteratorInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.mcbasictypes._ast.ASTMCObjectType> streamInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().stream();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.mcbasictypes._ast.ASTMCObjectType> parallelStreamInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().parallelStream();

}

    /* generated by template core.Method*/
 public  de.monticore.types.mcbasictypes._ast.ASTMCObjectType getInterface (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfInterface (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfInterface (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsInterfaces (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.mcbasictypes._ast.ASTMCObjectType> listIteratorInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.mcbasictypes._ast.ASTMCObjectType> listIteratorInterfaces (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.mcbasictypes._ast.ASTMCObjectType> subListInterfaces (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getInterfaceList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.mcbasictypes._ast.ASTMCObjectType> getInterfaceList ()  {
      /* generated by template methods.Get*/

return this.r__interfaces;

}

    /* generated by template core.Method*/
 public  boolean containsCDAttribute (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllCDAttributes (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyCDAttributes ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<classdiagrams._ast.ASTCDAttribute> iteratorCDAttributes ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeCDAttributes ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().size();

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTCDAttribute[] toArrayCDAttributes (classdiagrams._ast.ASTCDAttribute[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayCDAttributes ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<classdiagrams._ast.ASTCDAttribute> spliteratorCDAttributes ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<classdiagrams._ast.ASTCDAttribute> streamCDAttributes ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().stream();

}

    /* generated by template core.Method*/
 public  Stream<classdiagrams._ast.ASTCDAttribute> parallelStreamCDAttributes ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().parallelStream();

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTCDAttribute getCDAttribute (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfCDAttribute (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfCDAttribute (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsCDAttributes (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeCDAttributes ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<classdiagrams._ast.ASTCDAttribute> listIteratorCDAttributes ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<classdiagrams._ast.ASTCDAttribute> listIteratorCDAttributes (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<classdiagrams._ast.ASTCDAttribute> subListCDAttributes (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDAttributeList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<classdiagrams._ast.ASTCDAttribute> getCDAttributeList ()  {
      /* generated by template methods.Get*/

return this.cDAttributes;

}

    /* generated by template core.Method*/
 public  boolean containsCDMethod (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllCDMethods (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyCDMethods ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<classdiagrams._ast.ASTCDMethod> iteratorCDMethods ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeCDMethods ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().size();

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTCDMethod[] toArrayCDMethods (classdiagrams._ast.ASTCDMethod[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayCDMethods ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<classdiagrams._ast.ASTCDMethod> spliteratorCDMethods ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<classdiagrams._ast.ASTCDMethod> streamCDMethods ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().stream();

}

    /* generated by template core.Method*/
 public  Stream<classdiagrams._ast.ASTCDMethod> parallelStreamCDMethods ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().parallelStream();

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTCDMethod getCDMethod (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfCDMethod (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfCDMethod (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsCDMethods (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeCDMethods ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<classdiagrams._ast.ASTCDMethod> listIteratorCDMethods ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<classdiagrams._ast.ASTCDMethod> listIteratorCDMethods (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<classdiagrams._ast.ASTCDMethod> subListCDMethods (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDMethodList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<classdiagrams._ast.ASTCDMethod> getCDMethodList ()  {
      /* generated by template methods.Get*/

return this.cDMethods;

}

    /* generated by template core.Method*/
 public  String getName ()  {
      /* generated by template methods.Get*/

return this.name;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder setModifier (classdiagrams._ast.ASTModifier modifier)  {
      /* generated by template _ast.builder.opt.Set*/

    this.modifier = Optional.ofNullable(modifier);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder setModifierAbsent ()  {
      /* generated by template _ast.builder.opt.SetAbsent*/

    this.modifier = Optional.empty();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder clearInterfaces ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getInterfaceList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addInterface (de.monticore.types.mcbasictypes._ast.ASTMCObjectType element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getInterfaceList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addAllInterfaces (Collection<? extends de.monticore.types.mcbasictypes._ast.ASTMCObjectType> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getInterfaceList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeInterface (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getInterfaceList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeAllInterfaces (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getInterfaceList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder retainAllInterfaces (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getInterfaceList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeIfInterface (Predicate<? super de.monticore.types.mcbasictypes._ast.ASTMCObjectType> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getInterfaceList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder forEachInterfaces (Consumer<? super de.monticore.types.mcbasictypes._ast.ASTMCObjectType> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getInterfaceList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addInterface (int index,de.monticore.types.mcbasictypes._ast.ASTMCObjectType element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getInterfaceList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addAllInterfaces (int index,Collection<? extends de.monticore.types.mcbasictypes._ast.ASTMCObjectType> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getInterfaceList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeInterface (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getInterfaceList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder setInterface (int index,de.monticore.types.mcbasictypes._ast.ASTMCObjectType element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getInterfaceList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder replaceAllInterfaces (UnaryOperator<de.monticore.types.mcbasictypes._ast.ASTMCObjectType> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getInterfaceList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder sortInterfaces (Comparator<? super de.monticore.types.mcbasictypes._ast.ASTMCObjectType> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getInterfaceList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder setInterfaceList (List<de.monticore.types.mcbasictypes._ast.ASTMCObjectType> r__interfaces)  {
      /* generated by template _ast.builder.Set*/

    this.r__interfaces = r__interfaces;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder clearCDAttributes ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDAttributeList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addCDAttribute (classdiagrams._ast.ASTCDAttribute element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDAttributeList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addAllCDAttributes (Collection<? extends classdiagrams._ast.ASTCDAttribute> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDAttributeList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeCDAttribute (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDAttributeList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeAllCDAttributes (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDAttributeList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder retainAllCDAttributes (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDAttributeList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeIfCDAttribute (Predicate<? super classdiagrams._ast.ASTCDAttribute> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDAttributeList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder forEachCDAttributes (Consumer<? super classdiagrams._ast.ASTCDAttribute> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDAttributeList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addCDAttribute (int index,classdiagrams._ast.ASTCDAttribute element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDAttributeList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addAllCDAttributes (int index,Collection<? extends classdiagrams._ast.ASTCDAttribute> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDAttributeList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeCDAttribute (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDAttributeList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder setCDAttribute (int index,classdiagrams._ast.ASTCDAttribute element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDAttributeList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder replaceAllCDAttributes (UnaryOperator<classdiagrams._ast.ASTCDAttribute> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDAttributeList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder sortCDAttributes (Comparator<? super classdiagrams._ast.ASTCDAttribute> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDAttributeList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder setCDAttributeList (List<classdiagrams._ast.ASTCDAttribute> cDAttributes)  {
      /* generated by template _ast.builder.Set*/

    this.cDAttributes = cDAttributes;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder clearCDMethods ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDMethodList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addCDMethod (classdiagrams._ast.ASTCDMethod element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDMethodList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addAllCDMethods (Collection<? extends classdiagrams._ast.ASTCDMethod> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDMethodList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeCDMethod (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDMethodList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeAllCDMethods (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDMethodList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder retainAllCDMethods (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDMethodList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeIfCDMethod (Predicate<? super classdiagrams._ast.ASTCDMethod> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDMethodList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder forEachCDMethods (Consumer<? super classdiagrams._ast.ASTCDMethod> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDMethodList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addCDMethod (int index,classdiagrams._ast.ASTCDMethod element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDMethodList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addAllCDMethods (int index,Collection<? extends classdiagrams._ast.ASTCDMethod> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDMethodList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeCDMethod (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDMethodList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder setCDMethod (int index,classdiagrams._ast.ASTCDMethod element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDMethodList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder replaceAllCDMethods (UnaryOperator<classdiagrams._ast.ASTCDMethod> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDMethodList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder sortCDMethods (Comparator<? super classdiagrams._ast.ASTCDMethod> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDMethodList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder setCDMethodList (List<classdiagrams._ast.ASTCDMethod> cDMethods)  {
      /* generated by template _ast.builder.Set*/

    this.cDMethods = cDMethods;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder setName (String name)  {
      /* generated by template _ast.builder.Set*/

    this.name = name;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder set_SourcePositionEnd (SourcePosition end)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEnd(end);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder set_SourcePositionEndAbsent ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEndAbsent();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder set_SourcePositionStart (SourcePosition start)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStart(start);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder set_SourcePositionStartAbsent ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStartAbsent();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder clear_PreComments ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PreComments();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder add_PreComment (Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder add_PreComment (int index,Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addAll_PreComments (Collection<Comment> precomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(precomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addAll_PreComments (int index,Collection<Comment> precomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(index, precomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder remove_PreComment (Object element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder remove_PreComment (int index)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeAll_PreComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder retainAll_PreComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeIf_PreComment (Predicate<? super Comment> filter)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PreComment(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder forEach_PreComments (Consumer<? super Comment> action)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PreComments(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder replaceAll_PreComments (UnaryOperator<Comment> operator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PreComments(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder sort_PreComments (Comparator<? super Comment> comparator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PreComments(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder set_PreCommentList (List<Comment> preComments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreCommentList(preComments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder set_PreComment (int index,Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder clear_PostComments ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PostComments();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder add_PostComment (Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(postcomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder add_PostComment (int index,Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addAll_PostComments (Collection<Comment> postcomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(postcomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder addAll_PostComments (int index,Collection<Comment> postcomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(index, postcomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder remove_PostComment (Object element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder remove_PostComment (int index)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeAll_PostComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder retainAll_PostComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder removeIf_PostComment (Predicate<? super Comment> filter)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PostComment(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder forEach_PostComments (Consumer<? super Comment> action)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PostComments(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder replaceAll_PostComments (UnaryOperator<Comment> operator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PostComments(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder sort_PostComments (Comparator<? super Comment> comparator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PostComments(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder set_PostCommentList (List<Comment> postComments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostCommentList(postComments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDInterfaceBuilder set_PostComment (int index,Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostComment(index, postcomment);
    return this.realBuilder;

}

}
