/* generated from model ClassDiagrams */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package classdiagrams._visitor;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;

/* generated by template core.Annotations*/
// empty template

 public  class ClassDiagramsDelegatorVisitor  implements ClassDiagramsInheritanceVisitor {

    /* generated by template core.Attribute*/
 private  ClassDiagramsDelegatorVisitor realThis = (ClassDiagramsDelegatorVisitor) this;;

    /* generated by template core.Attribute*/
 private  Optional<de.monticore.types.mcsimplegenerictypes._visitor.MCSimpleGenericTypesVisitor> mCSimpleGenericTypesVisitor = Optional.empty();;

    /* generated by template core.Attribute*/
 private  Optional<de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor> mCCommonLiteralsVisitor = Optional.empty();;

    /* generated by template core.Attribute*/
 private  Optional<de.monticore.types.mccollectiontypes._visitor.MCCollectionTypesVisitor> mCCollectionTypesVisitor = Optional.empty();;

    /* generated by template core.Attribute*/
 private  Optional<de.monticore.types.mcbasictypes._visitor.MCBasicTypesVisitor> mCBasicTypesVisitor = Optional.empty();;

    /* generated by template core.Attribute*/
 private  Optional<de.monticore.mcbasics._visitor.MCBasicsVisitor> mCBasicsVisitor = Optional.empty();;

    /* generated by template core.Attribute*/
 private  Optional<de.monticore.types.typesymbols._visitor.TypeSymbolsVisitor> typeSymbolsVisitor = Optional.empty();;

    /* generated by template core.Attribute*/
 private  Optional<de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor> mCLiteralsBasisVisitor = Optional.empty();;

    /* generated by template core.Attribute*/
 private  Optional<classdiagrams._visitor.ClassDiagramsVisitor> classDiagramsVisitor = Optional.empty();;



    /* generated by template core.Method*/
 public  ClassDiagramsDelegatorVisitor getRealThis ()  {
      return realThis;
}

    /* generated by template core.Method*/
 public  void setRealThis (classdiagrams._visitor.ClassDiagramsVisitor realThis)  {
      /* generated by template _visitor.delegator.SetRealThis*/

if (this.realThis != realThis) {
  if (!(realThis instanceof ClassDiagramsDelegatorVisitor)) {
  Log.error("0xA7111x046 realThis of ClassDiagramsDelegatorVisitor must be ClassDiagramsDelegatorVisitor itself.");
  }
  this.realThis = (ClassDiagramsDelegatorVisitor) realThis;
  // register the known delegates to the realThis (and therby also set their new realThis)
  if (this.classDiagramsVisitor.isPresent()) {
    this.setClassDiagramsVisitor(classDiagramsVisitor.get());
  }
  if (this.mCSimpleGenericTypesVisitor.isPresent()) {
    this.setMCSimpleGenericTypesVisitor(mCSimpleGenericTypesVisitor.get());
  }
  if (this.mCCommonLiteralsVisitor.isPresent()) {
    this.setMCCommonLiteralsVisitor(mCCommonLiteralsVisitor.get());
  }

}
}

    /* generated by template core.Method*/
 public  void setMCSimpleGenericTypesVisitor (de.monticore.types.mcsimplegenerictypes._visitor.MCSimpleGenericTypesVisitor mCSimpleGenericTypesVisitor)  {
      /* generated by template _visitor.delegator.SetVisitor*/

  this.mCSimpleGenericTypesVisitor = Optional.ofNullable(mCSimpleGenericTypesVisitor);
  if (this.mCSimpleGenericTypesVisitor.isPresent()) {
    this.mCSimpleGenericTypesVisitor.get().setRealThis(getRealThis());
  }
  // register the MCSimpleGenericTypesVisitor also to realThis if not this
  if (getRealThis() != this) {
    // to prevent recursion we must differentiate between realThis being
    // the current this or another instance.
    getRealThis().setMCSimpleGenericTypesVisitor(mCSimpleGenericTypesVisitor);
  }
}

    /* generated by template core.Method*/
 public  Optional<de.monticore.types.mcsimplegenerictypes._visitor.MCSimpleGenericTypesVisitor> getMCSimpleGenericTypesVisitor ()  {
      return mCSimpleGenericTypesVisitor;
}

    /* generated by template core.Method*/
 public  void setMCCommonLiteralsVisitor (de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor mCCommonLiteralsVisitor)  {
      /* generated by template _visitor.delegator.SetVisitor*/

  this.mCCommonLiteralsVisitor = Optional.ofNullable(mCCommonLiteralsVisitor);
  if (this.mCCommonLiteralsVisitor.isPresent()) {
    this.mCCommonLiteralsVisitor.get().setRealThis(getRealThis());
  }
  // register the MCCommonLiteralsVisitor also to realThis if not this
  if (getRealThis() != this) {
    // to prevent recursion we must differentiate between realThis being
    // the current this or another instance.
    getRealThis().setMCCommonLiteralsVisitor(mCCommonLiteralsVisitor);
  }
}

    /* generated by template core.Method*/
 public  Optional<de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor> getMCCommonLiteralsVisitor ()  {
      return mCCommonLiteralsVisitor;
}

    /* generated by template core.Method*/
 public  void setMCCollectionTypesVisitor (de.monticore.types.mccollectiontypes._visitor.MCCollectionTypesVisitor mCCollectionTypesVisitor)  {
      /* generated by template _visitor.delegator.SetVisitor*/

  this.mCCollectionTypesVisitor = Optional.ofNullable(mCCollectionTypesVisitor);
  if (this.mCCollectionTypesVisitor.isPresent()) {
    this.mCCollectionTypesVisitor.get().setRealThis(getRealThis());
  }
  // register the MCCollectionTypesVisitor also to realThis if not this
  if (getRealThis() != this) {
    // to prevent recursion we must differentiate between realThis being
    // the current this or another instance.
    getRealThis().setMCCollectionTypesVisitor(mCCollectionTypesVisitor);
  }
}

    /* generated by template core.Method*/
 public  Optional<de.monticore.types.mccollectiontypes._visitor.MCCollectionTypesVisitor> getMCCollectionTypesVisitor ()  {
      return mCCollectionTypesVisitor;
}

    /* generated by template core.Method*/
 public  void setMCBasicTypesVisitor (de.monticore.types.mcbasictypes._visitor.MCBasicTypesVisitor mCBasicTypesVisitor)  {
      /* generated by template _visitor.delegator.SetVisitor*/

  this.mCBasicTypesVisitor = Optional.ofNullable(mCBasicTypesVisitor);
  if (this.mCBasicTypesVisitor.isPresent()) {
    this.mCBasicTypesVisitor.get().setRealThis(getRealThis());
  }
  // register the MCBasicTypesVisitor also to realThis if not this
  if (getRealThis() != this) {
    // to prevent recursion we must differentiate between realThis being
    // the current this or another instance.
    getRealThis().setMCBasicTypesVisitor(mCBasicTypesVisitor);
  }
}

    /* generated by template core.Method*/
 public  Optional<de.monticore.types.mcbasictypes._visitor.MCBasicTypesVisitor> getMCBasicTypesVisitor ()  {
      return mCBasicTypesVisitor;
}

    /* generated by template core.Method*/
 public  void setMCBasicsVisitor (de.monticore.mcbasics._visitor.MCBasicsVisitor mCBasicsVisitor)  {
      /* generated by template _visitor.delegator.SetVisitor*/

  this.mCBasicsVisitor = Optional.ofNullable(mCBasicsVisitor);
  if (this.mCBasicsVisitor.isPresent()) {
    this.mCBasicsVisitor.get().setRealThis(getRealThis());
  }
  // register the MCBasicsVisitor also to realThis if not this
  if (getRealThis() != this) {
    // to prevent recursion we must differentiate between realThis being
    // the current this or another instance.
    getRealThis().setMCBasicsVisitor(mCBasicsVisitor);
  }
}

    /* generated by template core.Method*/
 public  Optional<de.monticore.mcbasics._visitor.MCBasicsVisitor> getMCBasicsVisitor ()  {
      return mCBasicsVisitor;
}

    /* generated by template core.Method*/
 public  void setTypeSymbolsVisitor (de.monticore.types.typesymbols._visitor.TypeSymbolsVisitor typeSymbolsVisitor)  {
      /* generated by template _visitor.delegator.SetVisitor*/

  this.typeSymbolsVisitor = Optional.ofNullable(typeSymbolsVisitor);
  if (this.typeSymbolsVisitor.isPresent()) {
    this.typeSymbolsVisitor.get().setRealThis(getRealThis());
  }
  // register the TypeSymbolsVisitor also to realThis if not this
  if (getRealThis() != this) {
    // to prevent recursion we must differentiate between realThis being
    // the current this or another instance.
    getRealThis().setTypeSymbolsVisitor(typeSymbolsVisitor);
  }
}

    /* generated by template core.Method*/
 public  Optional<de.monticore.types.typesymbols._visitor.TypeSymbolsVisitor> getTypeSymbolsVisitor ()  {
      return typeSymbolsVisitor;
}

    /* generated by template core.Method*/
 public  void setMCLiteralsBasisVisitor (de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor mCLiteralsBasisVisitor)  {
      /* generated by template _visitor.delegator.SetVisitor*/

  this.mCLiteralsBasisVisitor = Optional.ofNullable(mCLiteralsBasisVisitor);
  if (this.mCLiteralsBasisVisitor.isPresent()) {
    this.mCLiteralsBasisVisitor.get().setRealThis(getRealThis());
  }
  // register the MCLiteralsBasisVisitor also to realThis if not this
  if (getRealThis() != this) {
    // to prevent recursion we must differentiate between realThis being
    // the current this or another instance.
    getRealThis().setMCLiteralsBasisVisitor(mCLiteralsBasisVisitor);
  }
}

    /* generated by template core.Method*/
 public  Optional<de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor> getMCLiteralsBasisVisitor ()  {
      return mCLiteralsBasisVisitor;
}

    /* generated by template core.Method*/
 public  void setClassDiagramsVisitor (classdiagrams._visitor.ClassDiagramsVisitor classDiagramsVisitor)  {
      /* generated by template _visitor.delegator.SetVisitor*/

  this.classDiagramsVisitor = Optional.ofNullable(classDiagramsVisitor);
  if (this.classDiagramsVisitor.isPresent()) {
    this.classDiagramsVisitor.get().setRealThis(getRealThis());
  }
  // register the ClassDiagramsVisitor also to realThis if not this
  if (getRealThis() != this) {
    // to prevent recursion we must differentiate between realThis being
    // the current this or another instance.
    getRealThis().setClassDiagramsVisitor(classDiagramsVisitor);
  }
}

    /* generated by template core.Method*/
 public  Optional<classdiagrams._visitor.ClassDiagramsVisitor> getClassDiagramsVisitor ()  {
      return classDiagramsVisitor;
}

    /* generated by template core.Method*/
 public  void visit (classdiagrams._ast.ASTCDCompilationUnit node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (classdiagrams._ast.ASTCDCompilationUnit node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (classdiagrams._ast.ASTCDCompilationUnit node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (classdiagrams._ast.ASTCDCompilationUnit node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (classdiagrams._ast.ASTCDDefinition node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (classdiagrams._ast.ASTCDDefinition node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (classdiagrams._ast.ASTCDDefinition node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (classdiagrams._ast.ASTCDDefinition node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (classdiagrams._ast.ASTCDClass node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (classdiagrams._ast.ASTCDClass node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (classdiagrams._ast.ASTCDClass node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (classdiagrams._ast.ASTCDClass node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (classdiagrams._ast.ASTTImplements node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (classdiagrams._ast.ASTTImplements node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (classdiagrams._ast.ASTTImplements node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (classdiagrams._ast.ASTTImplements node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (classdiagrams._ast.ASTCDInterface node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (classdiagrams._ast.ASTCDInterface node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (classdiagrams._ast.ASTCDInterface node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (classdiagrams._ast.ASTCDInterface node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (classdiagrams._ast.ASTCDAttribute node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (classdiagrams._ast.ASTCDAttribute node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (classdiagrams._ast.ASTCDAttribute node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (classdiagrams._ast.ASTCDAttribute node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (classdiagrams._ast.ASTCDConstructor node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (classdiagrams._ast.ASTCDConstructor node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (classdiagrams._ast.ASTCDConstructor node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (classdiagrams._ast.ASTCDConstructor node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (classdiagrams._ast.ASTCDMethod node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (classdiagrams._ast.ASTCDMethod node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (classdiagrams._ast.ASTCDMethod node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (classdiagrams._ast.ASTCDMethod node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (classdiagrams._ast.ASTCDParameter node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (classdiagrams._ast.ASTCDParameter node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (classdiagrams._ast.ASTCDParameter node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (classdiagrams._ast.ASTCDParameter node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (classdiagrams._ast.ASTModifier node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (classdiagrams._ast.ASTModifier node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (classdiagrams._ast.ASTModifier node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (classdiagrams._ast.ASTModifier node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (classdiagrams._ast.ASTCDType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (classdiagrams._ast.ASTCDType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (classdiagrams._ast.ASTCDType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (classdiagrams._ast.ASTCDField node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (classdiagrams._ast.ASTCDField node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (classdiagrams._ast.ASTCDField node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (classdiagrams._ast.ASTCDMethOrConstr node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (classdiagrams._ast.ASTCDMethOrConstr node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (classdiagrams._ast.ASTCDMethOrConstr node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (classdiagrams._ast.ASTClassDiagramsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (classdiagrams._ast.ASTClassDiagramsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (classdiagrams._ast.ASTClassDiagramsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mcsimplegenerictypes._ast.ASTMCBasicGenericType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCSimpleGenericTypesVisitor().isPresent()) {
    getRealThis().getMCSimpleGenericTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mcsimplegenerictypes._ast.ASTMCBasicGenericType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCSimpleGenericTypesVisitor().isPresent()) {
    getRealThis().getMCSimpleGenericTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mcsimplegenerictypes._ast.ASTMCBasicGenericType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCSimpleGenericTypesVisitor().isPresent()) {
    getRealThis().getMCSimpleGenericTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.types.mcsimplegenerictypes._ast.ASTMCBasicGenericType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCSimpleGenericTypesVisitor().isPresent()) {
    getRealThis().getMCSimpleGenericTypesVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mcsimplegenerictypes._ast.ASTMCCustomTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCSimpleGenericTypesVisitor().isPresent()) {
    getRealThis().getMCSimpleGenericTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mcsimplegenerictypes._ast.ASTMCCustomTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCSimpleGenericTypesVisitor().isPresent()) {
    getRealThis().getMCSimpleGenericTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mcsimplegenerictypes._ast.ASTMCCustomTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCSimpleGenericTypesVisitor().isPresent()) {
    getRealThis().getMCSimpleGenericTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.types.mcsimplegenerictypes._ast.ASTMCCustomTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCSimpleGenericTypesVisitor().isPresent()) {
    getRealThis().getMCSimpleGenericTypesVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mcsimplegenerictypes._ast.ASTMCSimpleGenericTypesNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCSimpleGenericTypesVisitor().isPresent()) {
    getRealThis().getMCSimpleGenericTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mcsimplegenerictypes._ast.ASTMCSimpleGenericTypesNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCSimpleGenericTypesVisitor().isPresent()) {
    getRealThis().getMCSimpleGenericTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mcsimplegenerictypes._ast.ASTMCSimpleGenericTypesNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCSimpleGenericTypesVisitor().isPresent()) {
    getRealThis().getMCSimpleGenericTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTNullLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTNullLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTNullLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTNullLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTBooleanLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTBooleanLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTBooleanLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTBooleanLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTCharLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTCharLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTCharLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTCharLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTSignedNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTSignedNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTSignedNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTSignedLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTSignedLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTNumericLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTNumericLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTNumericLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedNumericLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTSignedNumericLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTSignedNumericLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTMCCommonLiteralsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTMCCommonLiteralsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTMCCommonLiteralsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mccollectiontypes._ast.ASTMCListType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mccollectiontypes._ast.ASTMCListType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mccollectiontypes._ast.ASTMCListType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.types.mccollectiontypes._ast.ASTMCListType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mccollectiontypes._ast.ASTMCOptionalType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mccollectiontypes._ast.ASTMCOptionalType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mccollectiontypes._ast.ASTMCOptionalType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.types.mccollectiontypes._ast.ASTMCOptionalType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mccollectiontypes._ast.ASTMCMapType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mccollectiontypes._ast.ASTMCMapType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mccollectiontypes._ast.ASTMCMapType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.types.mccollectiontypes._ast.ASTMCMapType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mccollectiontypes._ast.ASTMCSetType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mccollectiontypes._ast.ASTMCSetType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mccollectiontypes._ast.ASTMCSetType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.types.mccollectiontypes._ast.ASTMCSetType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mccollectiontypes._ast.ASTMCBasicTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mccollectiontypes._ast.ASTMCBasicTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mccollectiontypes._ast.ASTMCBasicTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.types.mccollectiontypes._ast.ASTMCBasicTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mccollectiontypes._ast.ASTMCPrimitiveTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mccollectiontypes._ast.ASTMCPrimitiveTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mccollectiontypes._ast.ASTMCPrimitiveTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.types.mccollectiontypes._ast.ASTMCPrimitiveTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mccollectiontypes._ast.ASTMCGenericType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mccollectiontypes._ast.ASTMCGenericType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mccollectiontypes._ast.ASTMCGenericType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mccollectiontypes._ast.ASTMCTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mccollectiontypes._ast.ASTMCTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mccollectiontypes._ast.ASTMCTypeArgument node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mccollectiontypes._ast.ASTMCCollectionTypesNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mccollectiontypes._ast.ASTMCCollectionTypesNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mccollectiontypes._ast.ASTMCCollectionTypesNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mcbasictypes._ast.ASTMCImportStatement node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mcbasictypes._ast.ASTMCImportStatement node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mcbasictypes._ast.ASTMCImportStatement node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.types.mcbasictypes._ast.ASTMCImportStatement node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mcbasictypes._ast.ASTMCPrimitiveType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mcbasictypes._ast.ASTMCPrimitiveType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mcbasictypes._ast.ASTMCPrimitiveType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.types.mcbasictypes._ast.ASTMCPrimitiveType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mcbasictypes._ast.ASTMCQualifiedType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mcbasictypes._ast.ASTMCQualifiedType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mcbasictypes._ast.ASTMCQualifiedType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.types.mcbasictypes._ast.ASTMCQualifiedType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mcbasictypes._ast.ASTMCReturnType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mcbasictypes._ast.ASTMCReturnType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mcbasictypes._ast.ASTMCReturnType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.types.mcbasictypes._ast.ASTMCReturnType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mcbasictypes._ast.ASTMCVoidType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mcbasictypes._ast.ASTMCVoidType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mcbasictypes._ast.ASTMCVoidType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.types.mcbasictypes._ast.ASTMCVoidType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mcbasictypes._ast.ASTMCType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mcbasictypes._ast.ASTMCType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mcbasictypes._ast.ASTMCType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mcbasictypes._ast.ASTMCObjectType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mcbasictypes._ast.ASTMCObjectType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mcbasictypes._ast.ASTMCObjectType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.mcbasictypes._ast.ASTMCBasicTypesNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.mcbasictypes._ast.ASTMCBasicTypesNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.mcbasictypes._ast.ASTMCBasicTypesNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.mcbasics._ast.ASTMCBasicsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicsVisitor().isPresent()) {
    getRealThis().getMCBasicsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.mcbasics._ast.ASTMCBasicsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicsVisitor().isPresent()) {
    getRealThis().getMCBasicsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.mcbasics._ast.ASTMCBasicsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicsVisitor().isPresent()) {
    getRealThis().getMCBasicsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.typesymbols._ast.ASTType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.typesymbols._ast.ASTType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.typesymbols._ast.ASTType node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.typesymbols._ast.ASTTypeVar node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.typesymbols._ast.ASTTypeVar node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.typesymbols._ast.ASTTypeVar node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.typesymbols._ast.ASTField node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.typesymbols._ast.ASTField node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.typesymbols._ast.ASTField node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.typesymbols._ast.ASTMethod node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.typesymbols._ast.ASTMethod node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.typesymbols._ast.ASTMethod node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.types.typesymbols._ast.ASTTypeSymbolsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.types.typesymbols._ast.ASTTypeSymbolsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.types.typesymbols._ast.ASTTypeSymbolsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mcliteralsbasis._ast.ASTLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mcliteralsbasis._ast.ASTLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mcliteralsbasis._ast.ASTLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mcliteralsbasis._ast.ASTMCLiteralsBasisNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mcliteralsbasis._ast.ASTMCLiteralsBasisNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mcliteralsbasis._ast.ASTMCLiteralsBasisNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.ast.ASTNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().visit(node);
  }
  if (getRealThis().getMCSimpleGenericTypesVisitor().isPresent()) {
    getRealThis().getMCSimpleGenericTypesVisitor().get().visit(node);
  }
  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }
  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().visit(node);
  }
  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().visit(node);
  }
  if (getRealThis().getMCBasicsVisitor().isPresent()) {
    getRealThis().getMCBasicsVisitor().get().visit(node);
  }
  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().visit(node);
  }
  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.ast.ASTNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().endVisit(node);
  }
  if (getRealThis().getTypeSymbolsVisitor().isPresent()) {
    getRealThis().getTypeSymbolsVisitor().get().endVisit(node);
  }
  if (getRealThis().getMCBasicsVisitor().isPresent()) {
    getRealThis().getMCBasicsVisitor().get().endVisit(node);
  }
  if (getRealThis().getMCBasicTypesVisitor().isPresent()) {
    getRealThis().getMCBasicTypesVisitor().get().endVisit(node);
  }
  if (getRealThis().getMCCollectionTypesVisitor().isPresent()) {
    getRealThis().getMCCollectionTypesVisitor().get().endVisit(node);
  }
  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }
  if (getRealThis().getMCSimpleGenericTypesVisitor().isPresent()) {
    getRealThis().getMCSimpleGenericTypesVisitor().get().endVisit(node);
  }
  if (getRealThis().getClassDiagramsVisitor().isPresent()) {
    getRealThis().getClassDiagramsVisitor().get().endVisit(node);
  }

}

}
