/* generated from model ClassDiagrams */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package classdiagrams._ast;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class ASTCDCompilationUnitBuilder extends de.monticore.ast.ASTNodeBuilder<ASTCDCompilationUnitBuilder>  {

    /* generated by template core.Attribute*/
 protected  ASTCDCompilationUnitBuilder realBuilder ;

    /* generated by template core.Attribute*/
 protected  java.util.List<String> r__packages = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  java.util.List<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> mCImportStatements = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  classdiagrams._ast.ASTCDDefinition cDDefinition ;


    /* generated by template core.Constructor*/
 protected  ASTCDCompilationUnitBuilder()  {
    this.realBuilder = (ASTCDCompilationUnitBuilder) this;
}


    /* generated by template core.Method*/
 public  ASTCDCompilationUnit build ()  {
      /* generated by template _ast.builder.BuildMethod*/

        if (!isValid()) {
            if (cDDefinition == null) {
                Log.error("0xA7222 cDDefinition of type classdiagrams._ast.ASTCDDefinition must not be null");
            }
          throw new IllegalStateException();
        }
        ASTCDCompilationUnit value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTCDCompilationUnit();
    value.setPackageList(this.r__packages);
    value.setMCImportStatementList(this.mCImportStatements);
    value.setCDDefinition(this.cDDefinition);
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;
}

    /* generated by template core.Method*/
 public  boolean isValid ()  {
      /* generated by template _ast.builder.IsValidMethod*/

        if (cDDefinition == null) {
            return false;
        }
        return true;

}

    /* generated by template core.Method*/
 public  boolean containsPackage (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllPackages (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyPackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<String> iteratorPackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().iterator();

}

    /* generated by template core.Method*/
 public  int sizePackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().size();

}

    /* generated by template core.Method*/
 public  String[] toArrayPackages (String[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayPackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<String> spliteratorPackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<String> streamPackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().stream();

}

    /* generated by template core.Method*/
 public  Stream<String> parallelStreamPackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().parallelStream();

}

    /* generated by template core.Method*/
 public  String getPackage (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfPackage (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfPackage (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsPackages (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodePackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<String> listIteratorPackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<String> listIteratorPackages (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<String> subListPackages (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<String> getPackageList ()  {
      /* generated by template methods.Get*/

return this.r__packages;

}

    /* generated by template core.Method*/
 public  boolean containsMCImportStatement (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllMCImportStatements (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> iteratorMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().size();

}

    /* generated by template core.Method*/
 public  de.monticore.types.mcbasictypes._ast.ASTMCImportStatement[] toArrayMCImportStatements (de.monticore.types.mcbasictypes._ast.ASTMCImportStatement[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> spliteratorMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> streamMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().stream();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> parallelStreamMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().parallelStream();

}

    /* generated by template core.Method*/
 public  de.monticore.types.mcbasictypes._ast.ASTMCImportStatement getMCImportStatement (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfMCImportStatement (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfMCImportStatement (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsMCImportStatements (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> listIteratorMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> listIteratorMCImportStatements (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> subListMCImportStatements (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> getMCImportStatementList ()  {
      /* generated by template methods.Get*/

return this.mCImportStatements;

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTCDDefinition getCDDefinition ()  {
      /* generated by template methods.Get*/

return this.cDDefinition;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder clearPackages ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getPackageList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder addPackage (String element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getPackageList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder addAllPackages (Collection<? extends String> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getPackageList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder removePackage (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getPackageList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder removeAllPackages (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getPackageList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder retainAllPackages (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getPackageList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder removeIfPackage (Predicate<? super String> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getPackageList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder forEachPackages (Consumer<? super String> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getPackageList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder addPackage (int index,String element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getPackageList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder addAllPackages (int index,Collection<? extends String> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getPackageList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder removePackage (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getPackageList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder setPackage (int index,String element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getPackageList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder replaceAllPackages (UnaryOperator<String> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getPackageList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder sortPackages (Comparator<? super String> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getPackageList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder setPackageList (List<String> r__packages)  {
      /* generated by template _ast.builder.Set*/

    this.r__packages = r__packages;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder clearMCImportStatements ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getMCImportStatementList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder addMCImportStatement (de.monticore.types.mcbasictypes._ast.ASTMCImportStatement element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getMCImportStatementList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder addAllMCImportStatements (Collection<? extends de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getMCImportStatementList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder removeMCImportStatement (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getMCImportStatementList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder removeAllMCImportStatements (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getMCImportStatementList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder retainAllMCImportStatements (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getMCImportStatementList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder removeIfMCImportStatement (Predicate<? super de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getMCImportStatementList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder forEachMCImportStatements (Consumer<? super de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getMCImportStatementList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder addMCImportStatement (int index,de.monticore.types.mcbasictypes._ast.ASTMCImportStatement element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getMCImportStatementList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder addAllMCImportStatements (int index,Collection<? extends de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getMCImportStatementList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder removeMCImportStatement (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getMCImportStatementList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder setMCImportStatement (int index,de.monticore.types.mcbasictypes._ast.ASTMCImportStatement element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getMCImportStatementList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder replaceAllMCImportStatements (UnaryOperator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getMCImportStatementList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder sortMCImportStatements (Comparator<? super de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getMCImportStatementList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder setMCImportStatementList (List<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> mCImportStatements)  {
      /* generated by template _ast.builder.Set*/

    this.mCImportStatements = mCImportStatements;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder setCDDefinition (classdiagrams._ast.ASTCDDefinition cDDefinition)  {
      /* generated by template _ast.builder.Set*/

    this.cDDefinition = cDDefinition;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder set_SourcePositionEnd (SourcePosition end)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEnd(end);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder set_SourcePositionEndAbsent ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEndAbsent();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder set_SourcePositionStart (SourcePosition start)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStart(start);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder set_SourcePositionStartAbsent ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStartAbsent();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder clear_PreComments ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PreComments();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder add_PreComment (Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder add_PreComment (int index,Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder addAll_PreComments (Collection<Comment> precomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(precomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder addAll_PreComments (int index,Collection<Comment> precomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(index, precomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder remove_PreComment (Object element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder remove_PreComment (int index)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder removeAll_PreComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder retainAll_PreComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder removeIf_PreComment (Predicate<? super Comment> filter)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PreComment(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder forEach_PreComments (Consumer<? super Comment> action)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PreComments(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder replaceAll_PreComments (UnaryOperator<Comment> operator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PreComments(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder sort_PreComments (Comparator<? super Comment> comparator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PreComments(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder set_PreCommentList (List<Comment> preComments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreCommentList(preComments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder set_PreComment (int index,Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder clear_PostComments ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PostComments();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder add_PostComment (Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(postcomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder add_PostComment (int index,Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder addAll_PostComments (Collection<Comment> postcomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(postcomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder addAll_PostComments (int index,Collection<Comment> postcomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(index, postcomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder remove_PostComment (Object element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder remove_PostComment (int index)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder removeAll_PostComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder retainAll_PostComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder removeIf_PostComment (Predicate<? super Comment> filter)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PostComment(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder forEach_PostComments (Consumer<? super Comment> action)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PostComments(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder replaceAll_PostComments (UnaryOperator<Comment> operator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PostComments(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder sort_PostComments (Comparator<? super Comment> comparator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PostComments(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder set_PostCommentList (List<Comment> postComments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostCommentList(postComments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnitBuilder set_PostComment (int index,Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostComment(index, postcomment);
    return this.realBuilder;

}

}
