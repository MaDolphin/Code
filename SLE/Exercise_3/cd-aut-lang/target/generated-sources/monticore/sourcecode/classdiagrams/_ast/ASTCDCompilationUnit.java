/* generated from model ClassDiagrams */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package classdiagrams._ast;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class ASTCDCompilationUnit extends ASTCNode  implements classdiagrams._ast.ASTClassDiagramsNode {

    /* generated by template core.Attribute*/
 protected  java.util.List<String> r__packages = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  java.util.List<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> mCImportStatements = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  classdiagrams._ast.ASTCDDefinition cDDefinition ;

    /* generated by template core.Attribute*/
 protected  classdiagrams._symboltable.IClassDiagramsScope enclosingScope ;


    /* generated by template core.Constructor*/
 protected  ASTCDCompilationUnit()  {
    /* generated by template core.EmptyBody*/
// empty body

}


    /* generated by template core.Method*/
 public  boolean deepEquals (Object o)  {
           return deepEquals(o, true);
}

    /* generated by template core.Method*/
 public  boolean deepEquals (Object o,boolean forceSameOrder)  {
      /* generated by template data.DeepEqualsWithOrder*/

      ASTCDCompilationUnit comp;
    if ((o instanceof ASTCDCompilationUnit)) {
      comp = (ASTCDCompilationUnit) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing mCImportStatements
    if (this.mCImportStatements.size() != comp.mCImportStatements.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> it1 = this.mCImportStatements.iterator();
        Iterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> it2 = comp.mCImportStatements.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEquals(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> it1 = this.mCImportStatements.iterator();
        while (it1.hasNext()) {
          de.monticore.types.mcbasictypes._ast.ASTMCImportStatement oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> it2 = comp.mCImportStatements.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEquals(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
     // comparing cDDefinition
     if ( (this.cDDefinition == null && comp.cDDefinition != null) ||
        (this.cDDefinition != null && !this.cDDefinition.deepEquals(comp.cDDefinition, forceSameOrder)) ) {
        return false;
     }
    return true;     


}

    /* generated by template core.Method*/
 public  boolean deepEqualsWithComments (Object o)  {
           return deepEqualsWithComments(o, true);
}

    /* generated by template core.Method*/
 public  boolean deepEqualsWithComments (Object o,boolean forceSameOrder)  {
      /* generated by template data.DeepEqualsWithComments*/

      ASTCDCompilationUnit comp;
    if ((o instanceof ASTCDCompilationUnit)) {
      comp = (ASTCDCompilationUnit) o;
    } else {
      return false;
    }
    if (!equalsWithComments(comp)) {
      return false;
    }
    // comparing mCImportStatements
    if (this.mCImportStatements.size() != comp.mCImportStatements.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> it1 = this.mCImportStatements.iterator();
        Iterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> it2 = comp.mCImportStatements.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEqualsWithComments(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> it1 = this.mCImportStatements.iterator();
        while (it1.hasNext()) {
          de.monticore.types.mcbasictypes._ast.ASTMCImportStatement oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> it2 = comp.mCImportStatements.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEqualsWithComments(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
      // comparing cDDefinition
      if ( (this.cDDefinition == null && comp.cDDefinition != null) ||
        (this.cDDefinition != null && !this.cDDefinition.deepEqualsWithComments(comp.cDDefinition, forceSameOrder)) ) {
        return false;
      }
    return true;     

}

    /* generated by template core.Method*/
 public  boolean equalAttributes (Object o)  {
      /* generated by template data.EqualAttributes*/

      ASTCDCompilationUnit comp;
    if ((o instanceof ASTCDCompilationUnit)) {
      comp = (ASTCDCompilationUnit) o;
    } else {
      return false;
    }
	// comparing r__packages 
    if ( (this.r__packages == null && comp.r__packages != null) 
      || (this.r__packages != null && !this.r__packages.equals(comp.r__packages)) ) {
      return false;
    }
    return true;


}

    /* generated by template core.Method*/
 public  boolean equalsWithComments (Object o)  {
      /* generated by template data.EqualsWithComments*/

      ASTCDCompilationUnit comp;
    if ((o instanceof ASTCDCompilationUnit)) {
      comp = (ASTCDCompilationUnit) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing comments
    if (get_PreCommentList().size() == comp.get_PreCommentList().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PreCommentList().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PreCommentList().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    
    if (get_PostCommentList().size() == comp.get_PostCommentList().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PostCommentList().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PostCommentList().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    return true;

}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnit deepClone ()  {
          return deepClone(_construct());
}

    /* generated by template core.Method*/
 public  ASTCDCompilationUnit deepClone (ASTCDCompilationUnit result)  {
      /* generated by template data.DeepCloneWithParameters*/

    super.deepClone(result);

      for ( int i = 0; i < this.getPackageList().size() ; i++ ) {
      result.addPackage(getPackage(i));
      }
      getMCImportStatementList().forEach(s -> result.mCImportStatements.add(s.deepClone()));
    result.setCDDefinition(getCDDefinition().deepClone());
      result.setEnclosingScope(getEnclosingScope());
    
    return result;

}

    /* generated by template core.Method*/
 public  boolean containsPackage (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllPackages (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyPackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<String> iteratorPackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().iterator();

}

    /* generated by template core.Method*/
 public  int sizePackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().size();

}

    /* generated by template core.Method*/
 public  String[] toArrayPackages (String[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayPackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<String> spliteratorPackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<String> streamPackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().stream();

}

    /* generated by template core.Method*/
 public  Stream<String> parallelStreamPackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().parallelStream();

}

    /* generated by template core.Method*/
 public  String getPackage (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfPackage (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfPackage (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsPackages (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodePackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<String> listIteratorPackages ()  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<String> listIteratorPackages (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<String> subListPackages (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<String> getPackageList ()  {
      /* generated by template methods.Get*/

return this.r__packages;

}

    /* generated by template core.Method*/
 public  boolean containsMCImportStatement (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllMCImportStatements (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> iteratorMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().size();

}

    /* generated by template core.Method*/
 public  de.monticore.types.mcbasictypes._ast.ASTMCImportStatement[] toArrayMCImportStatements (de.monticore.types.mcbasictypes._ast.ASTMCImportStatement[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> spliteratorMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> streamMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().stream();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> parallelStreamMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().parallelStream();

}

    /* generated by template core.Method*/
 public  de.monticore.types.mcbasictypes._ast.ASTMCImportStatement getMCImportStatement (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfMCImportStatement (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfMCImportStatement (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsMCImportStatements (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> listIteratorMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> listIteratorMCImportStatements (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> subListMCImportStatements (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> getMCImportStatementList ()  {
      /* generated by template methods.Get*/

return this.mCImportStatements;

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTCDDefinition getCDDefinition ()  {
      /* generated by template methods.Get*/

return this.cDDefinition;

}

    /* generated by template core.Method*/
 public  void clearPackages ()  {
      /* generated by template methods.MethodDelegate*/

this.getPackageList().clear();

}

    /* generated by template core.Method*/
 public  boolean addPackage (String element)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().add(element);

}

    /* generated by template core.Method*/
 public  boolean addAllPackages (Collection<? extends String> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().addAll(collection);

}

    /* generated by template core.Method*/
 public  boolean removePackage (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().remove(element);

}

    /* generated by template core.Method*/
 public  boolean removeAllPackages (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().removeAll(collection);

}

    /* generated by template core.Method*/
 public  boolean retainAllPackages (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().retainAll(collection);

}

    /* generated by template core.Method*/
 public  boolean removeIfPackage (Predicate<? super String> filter)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().removeIf(filter);

}

    /* generated by template core.Method*/
 public  void forEachPackages (Consumer<? super String> action)  {
      /* generated by template methods.MethodDelegate*/

this.getPackageList().forEach(action);

}

    /* generated by template core.Method*/
 public  void addPackage (int index,String element)  {
      /* generated by template methods.MethodDelegate*/

this.getPackageList().add(index, element);

}

    /* generated by template core.Method*/
 public  boolean addAllPackages (int index,Collection<? extends String> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().addAll(index, collection);

}

    /* generated by template core.Method*/
 public  String removePackage (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().remove(index);

}

    /* generated by template core.Method*/
 public  String setPackage (int index,String element)  {
      /* generated by template methods.MethodDelegate*/

return this.getPackageList().set(index, element);

}

    /* generated by template core.Method*/
 public  void replaceAllPackages (UnaryOperator<String> operator)  {
      /* generated by template methods.MethodDelegate*/

this.getPackageList().replaceAll(operator);

}

    /* generated by template core.Method*/
 public  void sortPackages (Comparator<? super String> comparator)  {
      /* generated by template methods.MethodDelegate*/

this.getPackageList().sort(comparator);

}

    /* generated by template core.Method*/
 public  void setPackageList (List<String> r__packages)  {
      /* generated by template methods.Set*/

this.r__packages = r__packages;

}

    /* generated by template core.Method*/
 public  void clearMCImportStatements ()  {
      /* generated by template methods.MethodDelegate*/

this.getMCImportStatementList().clear();

}

    /* generated by template core.Method*/
 public  boolean addMCImportStatement (de.monticore.types.mcbasictypes._ast.ASTMCImportStatement element)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().add(element);

}

    /* generated by template core.Method*/
 public  boolean addAllMCImportStatements (Collection<? extends de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().addAll(collection);

}

    /* generated by template core.Method*/
 public  boolean removeMCImportStatement (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().remove(element);

}

    /* generated by template core.Method*/
 public  boolean removeAllMCImportStatements (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().removeAll(collection);

}

    /* generated by template core.Method*/
 public  boolean retainAllMCImportStatements (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().retainAll(collection);

}

    /* generated by template core.Method*/
 public  boolean removeIfMCImportStatement (Predicate<? super de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> filter)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().removeIf(filter);

}

    /* generated by template core.Method*/
 public  void forEachMCImportStatements (Consumer<? super de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> action)  {
      /* generated by template methods.MethodDelegate*/

this.getMCImportStatementList().forEach(action);

}

    /* generated by template core.Method*/
 public  void addMCImportStatement (int index,de.monticore.types.mcbasictypes._ast.ASTMCImportStatement element)  {
      /* generated by template methods.MethodDelegate*/

this.getMCImportStatementList().add(index, element);

}

    /* generated by template core.Method*/
 public  boolean addAllMCImportStatements (int index,Collection<? extends de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().addAll(index, collection);

}

    /* generated by template core.Method*/
 public  de.monticore.types.mcbasictypes._ast.ASTMCImportStatement removeMCImportStatement (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().remove(index);

}

    /* generated by template core.Method*/
 public  de.monticore.types.mcbasictypes._ast.ASTMCImportStatement setMCImportStatement (int index,de.monticore.types.mcbasictypes._ast.ASTMCImportStatement element)  {
      /* generated by template methods.MethodDelegate*/

return this.getMCImportStatementList().set(index, element);

}

    /* generated by template core.Method*/
 public  void replaceAllMCImportStatements (UnaryOperator<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> operator)  {
      /* generated by template methods.MethodDelegate*/

this.getMCImportStatementList().replaceAll(operator);

}

    /* generated by template core.Method*/
 public  void sortMCImportStatements (Comparator<? super de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> comparator)  {
      /* generated by template methods.MethodDelegate*/

this.getMCImportStatementList().sort(comparator);

}

    /* generated by template core.Method*/
 public  void setMCImportStatementList (List<de.monticore.types.mcbasictypes._ast.ASTMCImportStatement> mCImportStatements)  {
      /* generated by template methods.Set*/

this.mCImportStatements = mCImportStatements;

}

    /* generated by template core.Method*/
 public  void setCDDefinition (classdiagrams._ast.ASTCDDefinition cDDefinition)  {
      /* generated by template methods.Set*/

this.cDDefinition = cDDefinition;

}

    /* generated by template core.Method*/
 public  void accept (classdiagrams._visitor.ClassDiagramsVisitor visitor)  {
      /* generated by template _ast.ast_class.Accept*/

      visitor.handle(this);

}

    /* generated by template core.Method*/
 public  void accept (de.monticore.types.mcsimplegenerictypes._visitor.MCSimpleGenericTypesVisitor visitor)  {
      /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof classdiagrams._visitor.ClassDiagramsVisitor) {
    accept((classdiagrams._visitor.ClassDiagramsVisitor) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x139 AST node type ASTCDCompilationUnit expected a visitor of type classdiagrams._visitor.ClassDiagramsVisitor, but got de.monticore.types.mcsimplegenerictypes._visitor.MCSimpleGenericTypesVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template core.Method*/
 public  void accept (de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor visitor)  {
      /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof classdiagrams._visitor.ClassDiagramsVisitor) {
    accept((classdiagrams._visitor.ClassDiagramsVisitor) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x139 AST node type ASTCDCompilationUnit expected a visitor of type classdiagrams._visitor.ClassDiagramsVisitor, but got de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template core.Method*/
 public  void accept (de.monticore.types.mccollectiontypes._visitor.MCCollectionTypesVisitor visitor)  {
      /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof classdiagrams._visitor.ClassDiagramsVisitor) {
    accept((classdiagrams._visitor.ClassDiagramsVisitor) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x139 AST node type ASTCDCompilationUnit expected a visitor of type classdiagrams._visitor.ClassDiagramsVisitor, but got de.monticore.types.mccollectiontypes._visitor.MCCollectionTypesVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template core.Method*/
 public  void accept (de.monticore.types.mcbasictypes._visitor.MCBasicTypesVisitor visitor)  {
      /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof classdiagrams._visitor.ClassDiagramsVisitor) {
    accept((classdiagrams._visitor.ClassDiagramsVisitor) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x139 AST node type ASTCDCompilationUnit expected a visitor of type classdiagrams._visitor.ClassDiagramsVisitor, but got de.monticore.types.mcbasictypes._visitor.MCBasicTypesVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template core.Method*/
 public  void accept (de.monticore.mcbasics._visitor.MCBasicsVisitor visitor)  {
      /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof classdiagrams._visitor.ClassDiagramsVisitor) {
    accept((classdiagrams._visitor.ClassDiagramsVisitor) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x139 AST node type ASTCDCompilationUnit expected a visitor of type classdiagrams._visitor.ClassDiagramsVisitor, but got de.monticore.mcbasics._visitor.MCBasicsVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template core.Method*/
 public  void accept (de.monticore.types.typesymbols._visitor.TypeSymbolsVisitor visitor)  {
      /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof classdiagrams._visitor.ClassDiagramsVisitor) {
    accept((classdiagrams._visitor.ClassDiagramsVisitor) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x139 AST node type ASTCDCompilationUnit expected a visitor of type classdiagrams._visitor.ClassDiagramsVisitor, but got de.monticore.types.typesymbols._visitor.TypeSymbolsVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template core.Method*/
 public  void accept (de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor visitor)  {
      /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof classdiagrams._visitor.ClassDiagramsVisitor) {
    accept((classdiagrams._visitor.ClassDiagramsVisitor) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x139 AST node type ASTCDCompilationUnit expected a visitor of type classdiagrams._visitor.ClassDiagramsVisitor, but got de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template core.Method*/
 protected  ASTCDCompilationUnit _construct ()  {
      return classdiagrams._ast.ClassDiagramsNodeFactory.createASTCDCompilationUnit();
}

    /* generated by template core.Method*/
 public  Collection<de.monticore.ast.ASTNode> get_Children ()  {
      /* generated by template _ast.ast_class.GetChildren*/

    java.util.LinkedList<de.monticore.ast.ASTNode> result = new java.util.LinkedList<de.monticore.ast.ASTNode>();
        result.addAll(getMCImportStatementList());
        if ( getCDDefinition() != null ) {
          result.add(getCDDefinition());
        }
    return result;

}

    /* generated by template core.Method*/
 public  classdiagrams._symboltable.IClassDiagramsScope getEnclosingScope ()  {
      /* generated by template methods.Get*/

return this.enclosingScope;

}

    /* generated by template core.Method*/
 public  void setEnclosingScope (classdiagrams._symboltable.IClassDiagramsScope enclosingScope)  {
      /* generated by template methods.Set*/

this.enclosingScope = enclosingScope;

}

    /* generated by template core.Method*/
 public  void setEnclosingScope (de.monticore.types.mcsimplegenerictypes._symboltable.IMCSimpleGenericTypesScope enclosingScope)  {
      /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof classdiagrams._symboltable.IClassDiagramsScope){
    this.enclosingScope = (classdiagrams._symboltable.IClassDiagramsScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x483The EnclosingScope form type de.monticore.types.mcsimplegenerictypes._symboltable.IMCSimpleGenericTypesScope could not be casted to the type classdiagrams._symboltable.IClassDiagramsScope. Please call the Method setEnclosingScope with a parameter form type classdiagrams._symboltable.IClassDiagramsScope");
  }
}

    /* generated by template core.Method*/
 public  void setEnclosingScope (de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope enclosingScope)  {
      /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof classdiagrams._symboltable.IClassDiagramsScope){
    this.enclosingScope = (classdiagrams._symboltable.IClassDiagramsScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x521The EnclosingScope form type de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope could not be casted to the type classdiagrams._symboltable.IClassDiagramsScope. Please call the Method setEnclosingScope with a parameter form type classdiagrams._symboltable.IClassDiagramsScope");
  }
}

    /* generated by template core.Method*/
 public  void setEnclosingScope (de.monticore.types.mccollectiontypes._symboltable.IMCCollectionTypesScope enclosingScope)  {
      /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof classdiagrams._symboltable.IClassDiagramsScope){
    this.enclosingScope = (classdiagrams._symboltable.IClassDiagramsScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x375The EnclosingScope form type de.monticore.types.mccollectiontypes._symboltable.IMCCollectionTypesScope could not be casted to the type classdiagrams._symboltable.IClassDiagramsScope. Please call the Method setEnclosingScope with a parameter form type classdiagrams._symboltable.IClassDiagramsScope");
  }
}

    /* generated by template core.Method*/
 public  void setEnclosingScope (de.monticore.types.mcbasictypes._symboltable.IMCBasicTypesScope enclosingScope)  {
      /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof classdiagrams._symboltable.IClassDiagramsScope){
    this.enclosingScope = (classdiagrams._symboltable.IClassDiagramsScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x540The EnclosingScope form type de.monticore.types.mcbasictypes._symboltable.IMCBasicTypesScope could not be casted to the type classdiagrams._symboltable.IClassDiagramsScope. Please call the Method setEnclosingScope with a parameter form type classdiagrams._symboltable.IClassDiagramsScope");
  }
}

    /* generated by template core.Method*/
 public  void setEnclosingScope (de.monticore.mcbasics._symboltable.IMCBasicsScope enclosingScope)  {
      /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof classdiagrams._symboltable.IClassDiagramsScope){
    this.enclosingScope = (classdiagrams._symboltable.IClassDiagramsScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x580The EnclosingScope form type de.monticore.mcbasics._symboltable.IMCBasicsScope could not be casted to the type classdiagrams._symboltable.IClassDiagramsScope. Please call the Method setEnclosingScope with a parameter form type classdiagrams._symboltable.IClassDiagramsScope");
  }
}

    /* generated by template core.Method*/
 public  void setEnclosingScope (de.monticore.types.typesymbols._symboltable.ITypeSymbolsScope enclosingScope)  {
      /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof classdiagrams._symboltable.IClassDiagramsScope){
    this.enclosingScope = (classdiagrams._symboltable.IClassDiagramsScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x766The EnclosingScope form type de.monticore.types.typesymbols._symboltable.ITypeSymbolsScope could not be casted to the type classdiagrams._symboltable.IClassDiagramsScope. Please call the Method setEnclosingScope with a parameter form type classdiagrams._symboltable.IClassDiagramsScope");
  }
}

    /* generated by template core.Method*/
 public  void setEnclosingScope (de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope enclosingScope)  {
      /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof classdiagrams._symboltable.IClassDiagramsScope){
    this.enclosingScope = (classdiagrams._symboltable.IClassDiagramsScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x097The EnclosingScope form type de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope could not be casted to the type classdiagrams._symboltable.IClassDiagramsScope. Please call the Method setEnclosingScope with a parameter form type classdiagrams._symboltable.IClassDiagramsScope");
  }
}

}
