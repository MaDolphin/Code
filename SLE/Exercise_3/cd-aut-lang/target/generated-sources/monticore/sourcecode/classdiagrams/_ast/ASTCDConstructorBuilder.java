/* generated from model ClassDiagrams */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package classdiagrams._ast;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class ASTCDConstructorBuilder extends de.monticore.ast.ASTNodeBuilder<ASTCDConstructorBuilder>  {

    /* generated by template core.Attribute*/
 protected  ASTCDConstructorBuilder realBuilder ;

    /* generated by template core.Attribute*/
 protected  classdiagrams._ast.ASTModifier modifier ;

    /* generated by template core.Attribute*/
 protected  java.util.List<classdiagrams._ast.ASTCDParameter> cDParameters = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  java.util.List<de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> exceptions = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  String name ;


    /* generated by template core.Constructor*/
 protected  ASTCDConstructorBuilder()  {
    this.realBuilder = (ASTCDConstructorBuilder) this;
}


    /* generated by template core.Method*/
 public  ASTCDConstructor build ()  {
      /* generated by template _ast.builder.BuildMethod*/

        if (!isValid()) {
            if (modifier == null) {
                Log.error("0xA7222 modifier of type classdiagrams._ast.ASTModifier must not be null");
            }
            if (name == null) {
                Log.error("0xA7222 name of type String must not be null");
            }
          throw new IllegalStateException();
        }
        ASTCDConstructor value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTCDConstructor();
    value.setModifier(this.modifier);
    value.setCDParameterList(this.cDParameters);
    value.setExceptionList(this.exceptions);
    value.setName(this.name);
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;
}

    /* generated by template core.Method*/
 public  boolean isValid ()  {
      /* generated by template _ast.builder.IsValidMethod*/

        if (modifier == null) {
            return false;
        }
        if (name == null) {
            return false;
        }
        return true;

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTModifier getModifier ()  {
      /* generated by template methods.Get*/

return this.modifier;

}

    /* generated by template core.Method*/
 public  boolean containsCDParameter (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllCDParameters (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyCDParameters ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<classdiagrams._ast.ASTCDParameter> iteratorCDParameters ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeCDParameters ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().size();

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTCDParameter[] toArrayCDParameters (classdiagrams._ast.ASTCDParameter[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayCDParameters ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<classdiagrams._ast.ASTCDParameter> spliteratorCDParameters ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<classdiagrams._ast.ASTCDParameter> streamCDParameters ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().stream();

}

    /* generated by template core.Method*/
 public  Stream<classdiagrams._ast.ASTCDParameter> parallelStreamCDParameters ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().parallelStream();

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTCDParameter getCDParameter (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfCDParameter (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfCDParameter (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsCDParameters (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeCDParameters ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<classdiagrams._ast.ASTCDParameter> listIteratorCDParameters ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<classdiagrams._ast.ASTCDParameter> listIteratorCDParameters (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<classdiagrams._ast.ASTCDParameter> subListCDParameters (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDParameterList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<classdiagrams._ast.ASTCDParameter> getCDParameterList ()  {
      /* generated by template methods.Get*/

return this.cDParameters;

}

    /* generated by template core.Method*/
 public  boolean containsException (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllExceptions (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyExceptions ()  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> iteratorExceptions ()  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeExceptions ()  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().size();

}

    /* generated by template core.Method*/
 public  de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName[] toArrayExceptions (de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayExceptions ()  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> spliteratorExceptions ()  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> streamExceptions ()  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().stream();

}

    /* generated by template core.Method*/
 public  Stream<de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> parallelStreamExceptions ()  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().parallelStream();

}

    /* generated by template core.Method*/
 public  de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName getException (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfException (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfException (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsExceptions (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeExceptions ()  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> listIteratorExceptions ()  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> listIteratorExceptions (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> subListExceptions (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getExceptionList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> getExceptionList ()  {
      /* generated by template methods.Get*/

return this.exceptions;

}

    /* generated by template core.Method*/
 public  String getName ()  {
      /* generated by template methods.Get*/

return this.name;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder setModifier (classdiagrams._ast.ASTModifier modifier)  {
      /* generated by template _ast.builder.Set*/

    this.modifier = modifier;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder clearCDParameters ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDParameterList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder addCDParameter (classdiagrams._ast.ASTCDParameter element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDParameterList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder addAllCDParameters (Collection<? extends classdiagrams._ast.ASTCDParameter> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDParameterList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder removeCDParameter (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDParameterList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder removeAllCDParameters (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDParameterList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder retainAllCDParameters (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDParameterList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder removeIfCDParameter (Predicate<? super classdiagrams._ast.ASTCDParameter> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDParameterList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder forEachCDParameters (Consumer<? super classdiagrams._ast.ASTCDParameter> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDParameterList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder addCDParameter (int index,classdiagrams._ast.ASTCDParameter element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDParameterList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder addAllCDParameters (int index,Collection<? extends classdiagrams._ast.ASTCDParameter> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDParameterList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder removeCDParameter (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDParameterList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder setCDParameter (int index,classdiagrams._ast.ASTCDParameter element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDParameterList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder replaceAllCDParameters (UnaryOperator<classdiagrams._ast.ASTCDParameter> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDParameterList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder sortCDParameters (Comparator<? super classdiagrams._ast.ASTCDParameter> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDParameterList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder setCDParameterList (List<classdiagrams._ast.ASTCDParameter> cDParameters)  {
      /* generated by template _ast.builder.Set*/

    this.cDParameters = cDParameters;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder clearExceptions ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getExceptionList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder addException (de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getExceptionList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder addAllExceptions (Collection<? extends de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getExceptionList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder removeException (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getExceptionList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder removeAllExceptions (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getExceptionList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder retainAllExceptions (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getExceptionList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder removeIfException (Predicate<? super de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getExceptionList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder forEachExceptions (Consumer<? super de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getExceptionList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder addException (int index,de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getExceptionList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder addAllExceptions (int index,Collection<? extends de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getExceptionList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder removeException (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getExceptionList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder setException (int index,de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getExceptionList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder replaceAllExceptions (UnaryOperator<de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getExceptionList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder sortExceptions (Comparator<? super de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getExceptionList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder setExceptionList (List<de.monticore.types.mcbasictypes._ast.ASTMCQualifiedName> exceptions)  {
      /* generated by template _ast.builder.Set*/

    this.exceptions = exceptions;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder setName (String name)  {
      /* generated by template _ast.builder.Set*/

    this.name = name;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder set_SourcePositionEnd (SourcePosition end)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEnd(end);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder set_SourcePositionEndAbsent ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEndAbsent();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder set_SourcePositionStart (SourcePosition start)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStart(start);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder set_SourcePositionStartAbsent ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStartAbsent();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder clear_PreComments ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PreComments();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder add_PreComment (Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder add_PreComment (int index,Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder addAll_PreComments (Collection<Comment> precomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(precomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder addAll_PreComments (int index,Collection<Comment> precomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(index, precomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder remove_PreComment (Object element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder remove_PreComment (int index)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder removeAll_PreComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder retainAll_PreComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder removeIf_PreComment (Predicate<? super Comment> filter)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PreComment(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder forEach_PreComments (Consumer<? super Comment> action)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PreComments(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder replaceAll_PreComments (UnaryOperator<Comment> operator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PreComments(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder sort_PreComments (Comparator<? super Comment> comparator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PreComments(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder set_PreCommentList (List<Comment> preComments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreCommentList(preComments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder set_PreComment (int index,Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder clear_PostComments ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PostComments();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder add_PostComment (Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(postcomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder add_PostComment (int index,Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder addAll_PostComments (Collection<Comment> postcomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(postcomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder addAll_PostComments (int index,Collection<Comment> postcomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(index, postcomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder remove_PostComment (Object element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder remove_PostComment (int index)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder removeAll_PostComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder retainAll_PostComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder removeIf_PostComment (Predicate<? super Comment> filter)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PostComment(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder forEach_PostComments (Consumer<? super Comment> action)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PostComments(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder replaceAll_PostComments (UnaryOperator<Comment> operator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PostComments(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder sort_PostComments (Comparator<? super Comment> comparator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PostComments(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder set_PostCommentList (List<Comment> postComments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostCommentList(postComments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDConstructorBuilder set_PostComment (int index,Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostComment(index, postcomment);
    return this.realBuilder;

}

}
