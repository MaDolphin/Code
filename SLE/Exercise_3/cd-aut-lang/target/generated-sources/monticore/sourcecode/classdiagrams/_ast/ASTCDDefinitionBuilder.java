/* generated from model ClassDiagrams */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package classdiagrams._ast;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class ASTCDDefinitionBuilder extends de.monticore.ast.ASTNodeBuilder<ASTCDDefinitionBuilder>  {

    /* generated by template core.Attribute*/
 protected  ASTCDDefinitionBuilder realBuilder ;

    /* generated by template core.Attribute*/
 protected  Optional<classdiagrams._ast.ASTModifier> modifier = Optional.empty();

    /* generated by template core.Attribute*/
 protected  String name ;

    /* generated by template core.Attribute*/
 protected  java.util.List<classdiagrams._ast.ASTCDClass> cDClasss = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  java.util.List<classdiagrams._ast.ASTCDInterface> cDInterfaces = new java.util.ArrayList<>();


    /* generated by template core.Constructor*/
 protected  ASTCDDefinitionBuilder()  {
    this.realBuilder = (ASTCDDefinitionBuilder) this;
}


    /* generated by template core.Method*/
 public  ASTCDDefinition build ()  {
      /* generated by template _ast.builder.BuildMethod*/

        if (!isValid()) {
            if (name == null) {
                Log.error("0xA7222 name of type String must not be null");
            }
          throw new IllegalStateException();
        }
        ASTCDDefinition value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTCDDefinition();
    if (this.modifier.isPresent()) {
      value.setModifier(this.modifier.get());
    } else {
      value.setModifierAbsent();
    }
    value.setName(this.name);
    value.setCDClassList(this.cDClasss);
    value.setCDInterfaceList(this.cDInterfaces);
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;
}

    /* generated by template core.Method*/
 public  boolean isValid ()  {
      /* generated by template _ast.builder.IsValidMethod*/

        if (name == null) {
            return false;
        }
        return true;

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTModifier getModifier ()  {
      /* generated by template methods.opt.Get*/

if (isPresentModifier()) {
return this.modifier.get();
}
Log.error("0xA7003x973 Modifier can't return a value. It is empty.");
// Normally this statement is not reachable
throw new IllegalStateException();

}

    /* generated by template core.Method*/
 public  boolean isPresentModifier ()  {
      /* generated by template methods.opt.IsPresent*/

return this.modifier.isPresent();

}

    /* generated by template core.Method*/
 public  String getName ()  {
      /* generated by template methods.Get*/

return this.name;

}

    /* generated by template core.Method*/
 public  boolean containsCDClass (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllCDClasss (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyCDClasss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<classdiagrams._ast.ASTCDClass> iteratorCDClasss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeCDClasss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().size();

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTCDClass[] toArrayCDClasss (classdiagrams._ast.ASTCDClass[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayCDClasss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<classdiagrams._ast.ASTCDClass> spliteratorCDClasss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<classdiagrams._ast.ASTCDClass> streamCDClasss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().stream();

}

    /* generated by template core.Method*/
 public  Stream<classdiagrams._ast.ASTCDClass> parallelStreamCDClasss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().parallelStream();

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTCDClass getCDClass (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfCDClass (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfCDClass (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsCDClasss (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeCDClasss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<classdiagrams._ast.ASTCDClass> listIteratorCDClasss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<classdiagrams._ast.ASTCDClass> listIteratorCDClasss (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<classdiagrams._ast.ASTCDClass> subListCDClasss (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDClassList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<classdiagrams._ast.ASTCDClass> getCDClassList ()  {
      /* generated by template methods.Get*/

return this.cDClasss;

}

    /* generated by template core.Method*/
 public  boolean containsCDInterface (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllCDInterfaces (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyCDInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<classdiagrams._ast.ASTCDInterface> iteratorCDInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeCDInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().size();

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTCDInterface[] toArrayCDInterfaces (classdiagrams._ast.ASTCDInterface[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayCDInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<classdiagrams._ast.ASTCDInterface> spliteratorCDInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<classdiagrams._ast.ASTCDInterface> streamCDInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().stream();

}

    /* generated by template core.Method*/
 public  Stream<classdiagrams._ast.ASTCDInterface> parallelStreamCDInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().parallelStream();

}

    /* generated by template core.Method*/
 public  classdiagrams._ast.ASTCDInterface getCDInterface (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfCDInterface (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfCDInterface (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsCDInterfaces (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeCDInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<classdiagrams._ast.ASTCDInterface> listIteratorCDInterfaces ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<classdiagrams._ast.ASTCDInterface> listIteratorCDInterfaces (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<classdiagrams._ast.ASTCDInterface> subListCDInterfaces (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getCDInterfaceList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<classdiagrams._ast.ASTCDInterface> getCDInterfaceList ()  {
      /* generated by template methods.Get*/

return this.cDInterfaces;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder setModifier (classdiagrams._ast.ASTModifier modifier)  {
      /* generated by template _ast.builder.opt.Set*/

    this.modifier = Optional.ofNullable(modifier);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder setModifierAbsent ()  {
      /* generated by template _ast.builder.opt.SetAbsent*/

    this.modifier = Optional.empty();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder setName (String name)  {
      /* generated by template _ast.builder.Set*/

    this.name = name;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder clearCDClasss ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDClassList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder addCDClass (classdiagrams._ast.ASTCDClass element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDClassList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder addAllCDClasss (Collection<? extends classdiagrams._ast.ASTCDClass> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDClassList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder removeCDClass (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDClassList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder removeAllCDClasss (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDClassList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder retainAllCDClasss (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDClassList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder removeIfCDClass (Predicate<? super classdiagrams._ast.ASTCDClass> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDClassList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder forEachCDClasss (Consumer<? super classdiagrams._ast.ASTCDClass> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDClassList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder addCDClass (int index,classdiagrams._ast.ASTCDClass element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDClassList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder addAllCDClasss (int index,Collection<? extends classdiagrams._ast.ASTCDClass> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDClassList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder removeCDClass (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDClassList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder setCDClass (int index,classdiagrams._ast.ASTCDClass element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDClassList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder replaceAllCDClasss (UnaryOperator<classdiagrams._ast.ASTCDClass> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDClassList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder sortCDClasss (Comparator<? super classdiagrams._ast.ASTCDClass> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDClassList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder setCDClassList (List<classdiagrams._ast.ASTCDClass> cDClasss)  {
      /* generated by template _ast.builder.Set*/

    this.cDClasss = cDClasss;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder clearCDInterfaces ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDInterfaceList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder addCDInterface (classdiagrams._ast.ASTCDInterface element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDInterfaceList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder addAllCDInterfaces (Collection<? extends classdiagrams._ast.ASTCDInterface> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDInterfaceList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder removeCDInterface (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDInterfaceList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder removeAllCDInterfaces (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDInterfaceList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder retainAllCDInterfaces (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDInterfaceList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder removeIfCDInterface (Predicate<? super classdiagrams._ast.ASTCDInterface> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDInterfaceList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder forEachCDInterfaces (Consumer<? super classdiagrams._ast.ASTCDInterface> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDInterfaceList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder addCDInterface (int index,classdiagrams._ast.ASTCDInterface element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDInterfaceList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder addAllCDInterfaces (int index,Collection<? extends classdiagrams._ast.ASTCDInterface> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDInterfaceList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder removeCDInterface (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDInterfaceList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder setCDInterface (int index,classdiagrams._ast.ASTCDInterface element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDInterfaceList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder replaceAllCDInterfaces (UnaryOperator<classdiagrams._ast.ASTCDInterface> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDInterfaceList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder sortCDInterfaces (Comparator<? super classdiagrams._ast.ASTCDInterface> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCDInterfaceList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder setCDInterfaceList (List<classdiagrams._ast.ASTCDInterface> cDInterfaces)  {
      /* generated by template _ast.builder.Set*/

    this.cDInterfaces = cDInterfaces;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder set_SourcePositionEnd (SourcePosition end)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEnd(end);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder set_SourcePositionEndAbsent ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEndAbsent();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder set_SourcePositionStart (SourcePosition start)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStart(start);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder set_SourcePositionStartAbsent ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStartAbsent();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder clear_PreComments ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PreComments();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder add_PreComment (Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder add_PreComment (int index,Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder addAll_PreComments (Collection<Comment> precomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(precomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder addAll_PreComments (int index,Collection<Comment> precomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(index, precomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder remove_PreComment (Object element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder remove_PreComment (int index)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder removeAll_PreComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder retainAll_PreComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder removeIf_PreComment (Predicate<? super Comment> filter)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PreComment(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder forEach_PreComments (Consumer<? super Comment> action)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PreComments(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder replaceAll_PreComments (UnaryOperator<Comment> operator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PreComments(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder sort_PreComments (Comparator<? super Comment> comparator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PreComments(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder set_PreCommentList (List<Comment> preComments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreCommentList(preComments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder set_PreComment (int index,Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder clear_PostComments ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PostComments();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder add_PostComment (Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(postcomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder add_PostComment (int index,Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder addAll_PostComments (Collection<Comment> postcomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(postcomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder addAll_PostComments (int index,Collection<Comment> postcomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(index, postcomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder remove_PostComment (Object element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder remove_PostComment (int index)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder removeAll_PostComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder retainAll_PostComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder removeIf_PostComment (Predicate<? super Comment> filter)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PostComment(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder forEach_PostComments (Consumer<? super Comment> action)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PostComments(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder replaceAll_PostComments (UnaryOperator<Comment> operator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PostComments(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder sort_PostComments (Comparator<? super Comment> comparator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PostComments(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder set_PostCommentList (List<Comment> postComments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostCommentList(postComments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCDDefinitionBuilder set_PostComment (int index,Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostComment(index, postcomment);
    return this.realBuilder;

}

}
