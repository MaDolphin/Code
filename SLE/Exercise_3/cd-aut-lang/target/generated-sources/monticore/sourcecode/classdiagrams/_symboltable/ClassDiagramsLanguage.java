/* generated from model ClassDiagrams */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package classdiagrams._symboltable;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 abstract  public  class ClassDiagramsLanguage  implements de.monticore.IModelingLanguage<ClassDiagramsModelLoader> {

    /* generated by template core.Attribute*/
 private  ClassDiagramsModelLoader modelLoader ;

    /* generated by template core.Attribute*/
 private  String name ;

    /* generated by template core.Attribute*/
 private  String fileExtension ;


    /* generated by template core.Constructor*/
 public  ClassDiagramsLanguage(String langName,String fileEnding)  {
    /* generated by template _symboltable.language.Constructor*/
  this.name = langName;
  this.fileExtension = fileEnding;
  this.modelLoader = provideModelLoader();
}


    /* generated by template core.Method*/
 public  ClassDiagramsModelLoader getModelLoader ()  {
      /* generated by template methods.Get*/

return this.modelLoader;

}

    /* generated by template core.Method*/
 public  String getName ()  {
      /* generated by template methods.Get*/

return this.name;

}

    /* generated by template core.Method*/
 public  String getFileExtension ()  {
      /* generated by template methods.Get*/

return this.fileExtension;

}

    /* generated by template core.Method*/
 public  classdiagrams._symboltable.ClassDiagramsSymbolTableCreatorDelegator getSymbolTableCreator (classdiagrams._symboltable.IClassDiagramsGlobalScope enclosingScope)  {
       return new classdiagrams._symboltable.ClassDiagramsSymbolTableCreatorDelegator(enclosingScope);
}

    /* generated by template core.Method*/
 protected  ClassDiagramsModelLoader provideModelLoader ()  {
      return new ClassDiagramsModelLoader(this);
}

    /* generated by template core.Method*/
 protected  Set<String> calculateModelNamesForCDDefinition (String name)  {
      /* generated by template _symboltable.language.CalculateModelNamesFor*/
  final Set<String> modelNames = new LinkedHashSet<>();
  modelNames.add(name);
  return modelNames;
}

    /* generated by template core.Method*/
 protected  Set<String> calculateModelNamesForType (String name)  {
      /* generated by template _symboltable.language.CalculateModelNamesFor*/
  final Set<String> modelNames = new LinkedHashSet<>();
  modelNames.add(name);
  return modelNames;
}

    /* generated by template core.Method*/
 protected  Set<String> calculateModelNamesForTypeVar (String name)  {
      /* generated by template _symboltable.language.CalculateModelNamesFor*/
  final Set<String> modelNames = new LinkedHashSet<>();
  modelNames.add(name);
  return modelNames;
}

    /* generated by template core.Method*/
 protected  Set<String> calculateModelNamesForField (String name)  {
      /* generated by template _symboltable.language.CalculateModelNamesFor*/
  final Set<String> modelNames = new LinkedHashSet<>();
  modelNames.add(name);
  return modelNames;
}

    /* generated by template core.Method*/
 protected  Set<String> calculateModelNamesForMethod (String name)  {
      /* generated by template _symboltable.language.CalculateModelNamesFor*/
  final Set<String> modelNames = new LinkedHashSet<>();
  modelNames.add(name);
  return modelNames;
}

    /* generated by template core.Method*/
 public  classdiagrams._parser.ClassDiagramsParser getParser ()  {
      return new classdiagrams._parser.ClassDiagramsParser();
}

}
