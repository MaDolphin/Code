/* generated from model GuitarTab */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package guitartab._ast;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class ASTCommentBuilder extends de.monticore.ast.ASTNodeBuilder<ASTCommentBuilder>  {

    /* generated by template core.Attribute*/
 protected  ASTCommentBuilder realBuilder ;

    /* generated by template core.Attribute*/
 protected  java.util.List<String> names = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  java.util.List<String> wSs = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  String linebreak ;


    /* generated by template core.Constructor*/
 protected  ASTCommentBuilder()  {
    this.realBuilder = (ASTCommentBuilder) this;
}


    /* generated by template core.Method*/
 public  ASTComment build ()  {
      /* generated by template _ast.builder.BuildMethod*/

        if (!isValid()) {
            if (linebreak == null) {
                Log.error("0xA7222 linebreak of type String must not be null");
            }
          throw new IllegalStateException();
        }
        ASTComment value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTComment();
    value.setNameList(this.names);
    value.setWSList(this.wSs);
    value.setLinebreak(this.linebreak);
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;
}

    /* generated by template core.Method*/
 public  boolean isValid ()  {
      /* generated by template _ast.builder.IsValidMethod*/

        if (linebreak == null) {
            return false;
        }
        return true;

}

    /* generated by template core.Method*/
 public  boolean containsName (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllNames (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyNames ()  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<String> iteratorNames ()  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeNames ()  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().size();

}

    /* generated by template core.Method*/
 public  String[] toArrayNames (String[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayNames ()  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<String> spliteratorNames ()  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<String> streamNames ()  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().stream();

}

    /* generated by template core.Method*/
 public  Stream<String> parallelStreamNames ()  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().parallelStream();

}

    /* generated by template core.Method*/
 public  String getName (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfName (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfName (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsNames (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeNames ()  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<String> listIteratorNames ()  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<String> listIteratorNames (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<String> subListNames (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getNameList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<String> getNameList ()  {
      /* generated by template methods.Get*/

return this.names;

}

    /* generated by template core.Method*/
 public  boolean containsWS (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllWSs (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyWSs ()  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<String> iteratorWSs ()  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeWSs ()  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().size();

}

    /* generated by template core.Method*/
 public  String[] toArrayWSs (String[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayWSs ()  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<String> spliteratorWSs ()  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<String> streamWSs ()  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().stream();

}

    /* generated by template core.Method*/
 public  Stream<String> parallelStreamWSs ()  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().parallelStream();

}

    /* generated by template core.Method*/
 public  String getWS (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfWS (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfWS (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsWSs (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeWSs ()  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<String> listIteratorWSs ()  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<String> listIteratorWSs (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<String> subListWSs (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getWSList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<String> getWSList ()  {
      /* generated by template methods.Get*/

return this.wSs;

}

    /* generated by template core.Method*/
 public  String getLinebreak ()  {
      /* generated by template methods.Get*/

return this.linebreak;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder clearNames ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getNameList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder addName (String element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getNameList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder addAllNames (Collection<? extends String> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getNameList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder removeName (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getNameList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder removeAllNames (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getNameList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder retainAllNames (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getNameList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder removeIfName (Predicate<? super String> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getNameList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder forEachNames (Consumer<? super String> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getNameList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder addName (int index,String element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getNameList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder addAllNames (int index,Collection<? extends String> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getNameList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder removeName (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getNameList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder setName (int index,String element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getNameList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder replaceAllNames (UnaryOperator<String> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getNameList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder sortNames (Comparator<? super String> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getNameList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder setNameList (List<String> names)  {
      /* generated by template _ast.builder.Set*/

    this.names = names;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder clearWSs ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getWSList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder addWS (String element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getWSList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder addAllWSs (Collection<? extends String> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getWSList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder removeWS (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getWSList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder removeAllWSs (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getWSList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder retainAllWSs (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getWSList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder removeIfWS (Predicate<? super String> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getWSList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder forEachWSs (Consumer<? super String> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getWSList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder addWS (int index,String element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getWSList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder addAllWSs (int index,Collection<? extends String> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getWSList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder removeWS (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getWSList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder setWS (int index,String element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getWSList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder replaceAllWSs (UnaryOperator<String> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getWSList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder sortWSs (Comparator<? super String> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getWSList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder setWSList (List<String> wSs)  {
      /* generated by template _ast.builder.Set*/

    this.wSs = wSs;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder setLinebreak (String linebreak)  {
      /* generated by template _ast.builder.Set*/

    this.linebreak = linebreak;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder set_SourcePositionEnd (SourcePosition end)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEnd(end);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder set_SourcePositionEndAbsent ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEndAbsent();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder set_SourcePositionStart (SourcePosition start)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStart(start);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder set_SourcePositionStartAbsent ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStartAbsent();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder clear_PreComments ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PreComments();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder add_PreComment (Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder add_PreComment (int index,Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder addAll_PreComments (Collection<Comment> precomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(precomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder addAll_PreComments (int index,Collection<Comment> precomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(index, precomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder remove_PreComment (Object element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder remove_PreComment (int index)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder removeAll_PreComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder retainAll_PreComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder removeIf_PreComment (Predicate<? super Comment> filter)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PreComment(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder forEach_PreComments (Consumer<? super Comment> action)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PreComments(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder replaceAll_PreComments (UnaryOperator<Comment> operator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PreComments(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder sort_PreComments (Comparator<? super Comment> comparator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PreComments(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder set_PreCommentList (List<Comment> preComments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreCommentList(preComments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder set_PreComment (int index,Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder clear_PostComments ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PostComments();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder add_PostComment (Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(postcomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder add_PostComment (int index,Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder addAll_PostComments (Collection<Comment> postcomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(postcomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder addAll_PostComments (int index,Collection<Comment> postcomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(index, postcomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder remove_PostComment (Object element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder remove_PostComment (int index)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder removeAll_PostComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder retainAll_PostComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder removeIf_PostComment (Predicate<? super Comment> filter)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PostComment(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder forEach_PostComments (Consumer<? super Comment> action)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PostComments(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder replaceAll_PostComments (UnaryOperator<Comment> operator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PostComments(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder sort_PostComments (Comparator<? super Comment> comparator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PostComments(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder set_PostCommentList (List<Comment> postComments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostCommentList(postComments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTCommentBuilder set_PostComment (int index,Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostComment(index, postcomment);
    return this.realBuilder;

}

}
