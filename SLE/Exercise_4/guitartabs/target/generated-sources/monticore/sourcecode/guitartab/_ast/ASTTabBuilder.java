/* generated from model GuitarTab */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package guitartab._ast;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class ASTTabBuilder extends de.monticore.ast.ASTNodeBuilder<ASTTabBuilder>  {

    /* generated by template core.Attribute*/
 protected  ASTTabBuilder realBuilder ;

    /* generated by template core.Attribute*/
 protected  java.util.List<guitartab._ast.ASTComment> comments = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  java.util.List<guitartab._ast.ASTSixStrings> sixStringss = new java.util.ArrayList<>();

    /* generated by template core.Attribute*/
 protected  java.util.List<String> linebreaks = new java.util.ArrayList<>();


    /* generated by template core.Constructor*/
 protected  ASTTabBuilder()  {
    this.realBuilder = (ASTTabBuilder) this;
}


    /* generated by template core.Method*/
 public  ASTTab build ()  {
      /* generated by template _ast.builder.BuildMethod*/

        if (!isValid()) {
          throw new IllegalStateException();
        }
        ASTTab value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTTab();
    value.setCommentList(this.comments);
    value.setSixStringsList(this.sixStringss);
    value.setLinebreakList(this.linebreaks);
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;
}

    /* generated by template core.Method*/
 public  boolean isValid ()  {
      /* generated by template _ast.builder.IsValidMethod*/

        return true;

}

    /* generated by template core.Method*/
 public  boolean containsComment (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllComments (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyComments ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<guitartab._ast.ASTComment> iteratorComments ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeComments ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().size();

}

    /* generated by template core.Method*/
 public  guitartab._ast.ASTComment[] toArrayComments (guitartab._ast.ASTComment[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayComments ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<guitartab._ast.ASTComment> spliteratorComments ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<guitartab._ast.ASTComment> streamComments ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().stream();

}

    /* generated by template core.Method*/
 public  Stream<guitartab._ast.ASTComment> parallelStreamComments ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().parallelStream();

}

    /* generated by template core.Method*/
 public  guitartab._ast.ASTComment getComment (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfComment (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfComment (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsComments (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeComments ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<guitartab._ast.ASTComment> listIteratorComments ()  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<guitartab._ast.ASTComment> listIteratorComments (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<guitartab._ast.ASTComment> subListComments (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getCommentList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<guitartab._ast.ASTComment> getCommentList ()  {
      /* generated by template methods.Get*/

return this.comments;

}

    /* generated by template core.Method*/
 public  boolean containsSixStrings (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllSixStringss (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptySixStringss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<guitartab._ast.ASTSixStrings> iteratorSixStringss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeSixStringss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().size();

}

    /* generated by template core.Method*/
 public  guitartab._ast.ASTSixStrings[] toArraySixStringss (guitartab._ast.ASTSixStrings[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArraySixStringss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<guitartab._ast.ASTSixStrings> spliteratorSixStringss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<guitartab._ast.ASTSixStrings> streamSixStringss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().stream();

}

    /* generated by template core.Method*/
 public  Stream<guitartab._ast.ASTSixStrings> parallelStreamSixStringss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().parallelStream();

}

    /* generated by template core.Method*/
 public  guitartab._ast.ASTSixStrings getSixStrings (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfSixStrings (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfSixStrings (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsSixStringss (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeSixStringss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<guitartab._ast.ASTSixStrings> listIteratorSixStringss ()  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<guitartab._ast.ASTSixStrings> listIteratorSixStringss (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<guitartab._ast.ASTSixStrings> subListSixStringss (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getSixStringsList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<guitartab._ast.ASTSixStrings> getSixStringsList ()  {
      /* generated by template methods.Get*/

return this.sixStringss;

}

    /* generated by template core.Method*/
 public  boolean containsLinebreak (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().contains(element);

}

    /* generated by template core.Method*/
 public  boolean containsAllLinebreaks (Collection<?> collection)  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().containsAll(collection);

}

    /* generated by template core.Method*/
 public  boolean isEmptyLinebreaks ()  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().isEmpty();

}

    /* generated by template core.Method*/
 public  Iterator<String> iteratorLinebreaks ()  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().iterator();

}

    /* generated by template core.Method*/
 public  int sizeLinebreaks ()  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().size();

}

    /* generated by template core.Method*/
 public  String[] toArrayLinebreaks (String[] array)  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().toArray(array);

}

    /* generated by template core.Method*/
 public  Object[] toArrayLinebreaks ()  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().toArray();

}

    /* generated by template core.Method*/
 public  Spliterator<String> spliteratorLinebreaks ()  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().spliterator();

}

    /* generated by template core.Method*/
 public  Stream<String> streamLinebreaks ()  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().stream();

}

    /* generated by template core.Method*/
 public  Stream<String> parallelStreamLinebreaks ()  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().parallelStream();

}

    /* generated by template core.Method*/
 public  String getLinebreak (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().get(index);

}

    /* generated by template core.Method*/
 public  int indexOfLinebreak (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().indexOf(element);

}

    /* generated by template core.Method*/
 public  int lastIndexOfLinebreak (Object element)  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().lastIndexOf(element);

}

    /* generated by template core.Method*/
 public  boolean equalsLinebreaks (Object o)  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().equals(o);

}

    /* generated by template core.Method*/
 public  int hashCodeLinebreaks ()  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().hashCode();

}

    /* generated by template core.Method*/
 public  ListIterator<String> listIteratorLinebreaks ()  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().listIterator();

}

    /* generated by template core.Method*/
 public  ListIterator<String> listIteratorLinebreaks (int index)  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().listIterator(index);

}

    /* generated by template core.Method*/
 public  List<String> subListLinebreaks (int start,int end)  {
      /* generated by template methods.MethodDelegate*/

return this.getLinebreakList().subList(start, end);

}

    /* generated by template core.Method*/
 public  List<String> getLinebreakList ()  {
      /* generated by template methods.Get*/

return this.linebreaks;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder clearComments ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCommentList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addComment (guitartab._ast.ASTComment element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCommentList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addAllComments (Collection<? extends guitartab._ast.ASTComment> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCommentList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeComment (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCommentList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeAllComments (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCommentList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder retainAllComments (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCommentList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeIfComment (Predicate<? super guitartab._ast.ASTComment> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCommentList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder forEachComments (Consumer<? super guitartab._ast.ASTComment> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCommentList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addComment (int index,guitartab._ast.ASTComment element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCommentList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addAllComments (int index,Collection<? extends guitartab._ast.ASTComment> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCommentList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeComment (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCommentList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder setComment (int index,guitartab._ast.ASTComment element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCommentList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder replaceAllComments (UnaryOperator<guitartab._ast.ASTComment> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCommentList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder sortComments (Comparator<? super guitartab._ast.ASTComment> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getCommentList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder setCommentList (List<guitartab._ast.ASTComment> comments)  {
      /* generated by template _ast.builder.Set*/

    this.comments = comments;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder clearSixStringss ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getSixStringsList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addSixStrings (guitartab._ast.ASTSixStrings element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getSixStringsList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addAllSixStringss (Collection<? extends guitartab._ast.ASTSixStrings> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getSixStringsList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeSixStrings (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getSixStringsList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeAllSixStringss (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getSixStringsList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder retainAllSixStringss (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getSixStringsList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeIfSixStrings (Predicate<? super guitartab._ast.ASTSixStrings> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getSixStringsList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder forEachSixStringss (Consumer<? super guitartab._ast.ASTSixStrings> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getSixStringsList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addSixStrings (int index,guitartab._ast.ASTSixStrings element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getSixStringsList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addAllSixStringss (int index,Collection<? extends guitartab._ast.ASTSixStrings> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getSixStringsList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeSixStrings (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getSixStringsList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder setSixStrings (int index,guitartab._ast.ASTSixStrings element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getSixStringsList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder replaceAllSixStringss (UnaryOperator<guitartab._ast.ASTSixStrings> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getSixStringsList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder sortSixStringss (Comparator<? super guitartab._ast.ASTSixStrings> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getSixStringsList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder setSixStringsList (List<guitartab._ast.ASTSixStrings> sixStringss)  {
      /* generated by template _ast.builder.Set*/

    this.sixStringss = sixStringss;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder clearLinebreaks ()  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getLinebreakList().clear();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addLinebreak (String element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getLinebreakList().add(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addAllLinebreaks (Collection<? extends String> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getLinebreakList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeLinebreak (Object element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getLinebreakList().remove(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeAllLinebreaks (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getLinebreakList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder retainAllLinebreaks (Collection<?> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getLinebreakList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeIfLinebreak (Predicate<? super String> filter)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getLinebreakList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder forEachLinebreaks (Consumer<? super String> action)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getLinebreakList().forEach(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addLinebreak (int index,String element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getLinebreakList().add(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addAllLinebreaks (int index,Collection<? extends String> collection)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getLinebreakList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeLinebreak (int index)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getLinebreakList().remove(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder setLinebreak (int index,String element)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getLinebreakList().set(index, element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder replaceAllLinebreaks (UnaryOperator<String> operator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getLinebreakList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder sortLinebreaks (Comparator<? super String> comparator)  {
      /* generated by template _ast.builder.MethodDelegate*/

    this.getLinebreakList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder setLinebreakList (List<String> linebreaks)  {
      /* generated by template _ast.builder.Set*/

    this.linebreaks = linebreaks;
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder set_SourcePositionEnd (SourcePosition end)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEnd(end);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder set_SourcePositionEndAbsent ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEndAbsent();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder set_SourcePositionStart (SourcePosition start)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStart(start);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder set_SourcePositionStartAbsent ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStartAbsent();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder clear_PreComments ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PreComments();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder add_PreComment (Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder add_PreComment (int index,Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addAll_PreComments (Collection<Comment> precomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(precomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addAll_PreComments (int index,Collection<Comment> precomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(index, precomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder remove_PreComment (Object element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder remove_PreComment (int index)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeAll_PreComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder retainAll_PreComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeIf_PreComment (Predicate<? super Comment> filter)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PreComment(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder forEach_PreComments (Consumer<? super Comment> action)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PreComments(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder replaceAll_PreComments (UnaryOperator<Comment> operator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PreComments(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder sort_PreComments (Comparator<? super Comment> comparator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PreComments(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder set_PreCommentList (List<Comment> preComments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreCommentList(preComments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder set_PreComment (int index,Comment precomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder clear_PostComments ()  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PostComments();
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder add_PostComment (Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(postcomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder add_PostComment (int index,Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addAll_PostComments (Collection<Comment> postcomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(postcomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder addAll_PostComments (int index,Collection<Comment> postcomments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(index, postcomments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder remove_PostComment (Object element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder remove_PostComment (int index)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(index);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeAll_PostComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder retainAll_PostComments (Collection<?> element)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder removeIf_PostComment (Predicate<? super Comment> filter)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PostComment(filter);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder forEach_PostComments (Consumer<? super Comment> action)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PostComments(action);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder replaceAll_PostComments (UnaryOperator<Comment> operator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PostComments(operator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder sort_PostComments (Comparator<? super Comment> comparator)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PostComments(comparator);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder set_PostCommentList (List<Comment> postComments)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostCommentList(postComments);
    return this.realBuilder;

}

    /* generated by template core.Method*/
 public  ASTTabBuilder set_PostComment (int index,Comment postcomment)  {
      /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostComment(index, postcomment);
    return this.realBuilder;

}

}
