========================================================== Node Tree + Extra Infos
+--@CalendarsWithAppointments!MCGrammar(2,0)                 (32x)
   +--@!StartRule(4,2)
   +--@Calendars!GrammarReference(2,42)
   +--@Appointments!GrammarReference(2,53)
   +--@CalendarsWithAppointments!ClassProd(6,2)
   |  +--@!Alt(6,30)
   |  |  +--@Name!NonTerminal(6,30)
   |  |  +--@_s_calendar_!Terminal(6,35)
   |  |  +--@I!NonTerminal(7,4)
   +--@I!ClassProd(9,3)
   |  +--@Appointments!RuleReference(9,16)
   |  +--@!Alt(9,31)
   |  |  +--@Appointment!NonTerminal(9,31)
========================================================== Explanation
Node Tree: this is the extended form: one with extra infos
as sublines. The tree itself lists all AST nodes using their identifiers.
Vertical line: list all the direct children of a node.
Each node knows about:
- #Visits through templates (in the raw version) looks like: (2x)
- files generated originating from this node
- templates called on this node
Remark: a "null" as value in the tree means that the tree has been altered
after parsing. --> this is not yet reflected in the protocol
(EOF)
