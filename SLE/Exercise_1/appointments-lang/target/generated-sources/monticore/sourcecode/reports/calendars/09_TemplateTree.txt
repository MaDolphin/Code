========================================================== Protocol
OP set value (key, value): 
OP set value (key, value): 
+--Parser.ftl
|  +--ParserHeader.ftl
|  +--LexerMember.ftl
OP set value (key, value): 
+--MCParser.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
|  +--MCParserMethods.ftl
OP set value (key, value): 
OP set value (key, value): 
OP set value (key, value): 
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--ASHP: "= Optional.empty()"
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--ASHP: "= true"
|  +--Attribute.ftl
|  |  +--ASHP: "= Optional.empty()"
|  +--Attribute.ftl
|  |  +--ASHP: "= Optional.empty()"
|  +--Attribute.ftl
|  |  +--ASHP: "= new java.util.ArrayList<>()"
|  +--Constructor.ftl
|  |  +--ASHP: "super(); this.name = Optional.empty();"
|  +--Constructor.ftl
|  |  +--ASHP: "this.shadowing = shadowing; this.name = Optional.empty();"
|  +--Constructor.ftl
|  |  +--ASHP: "this(enclosingScope, false);"
|  +--Constructor.ftl
|  |  +--ASHP: "this.setEnclosingScope(enclosingScope); this.shadowing = shadowi[...]"
|  +--Method.ftl
|  |  +--ASHP: "return 0;"
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: SetEnclosingScope.ftl
|  |  +--SetEnclosingScope.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: IsPresent.ftl
|  |  +--IsPresent.ftl
|  +--Method.ftl
|  |  +--ATHP: SetSpanningSymbol.ftl
|  |  +--SetSpanningSymbol.ftl
|  |  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: SetSpanningSymbolAbsent.ftl
|  |  +--SetSpanningSymbolAbsent.ftl
|  |  |  +--SetAbsent.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: IsPresent.ftl
|  |  +--IsPresent.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: SetAbsent.ftl
|  |  +--SetAbsent.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: IsPresent.ftl
|  |  +--IsPresent.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: SetAbsent.ftl
|  |  +--SetAbsent.ftl
|  +--Method.ftl
|  |  +--ATHP: AddSubScope.ftl
|  |  +--AddSubScope.ftl
|  +--Method.ftl
|  |  +--ATHP: RemoveSubScope.ftl
|  |  +--RemoveSubScope.ftl
|  +--Method.ftl
|  |  +--ATHP: GetSubScopes.ftl
|  |  +--GetSubScopes.ftl
|  +--Method.ftl
|  |  +--ATHP: SetSubScopes.ftl
|  |  +--SetSubScopes.ftl
|  +--Method.ftl
|  |  +--ASHP: "visitor.handle(this);"
|  +--Method.ftl
|  |  +--ATHP: Accept.ftl
|  |  +--Accept.ftl
|  +--Method.ftl
|  |  +--ATHP: Accept.ftl
|  |  +--Accept.ftl
|  +--Method.ftl
|  |  +--ATHP: Accept.ftl
|  |  +--Accept.ftl
|  +--Method.ftl
|  |  +--ASHP: "this.addSubScope((calendars._symboltable.ICalendarsScope) subScope);"
|  +--Method.ftl
|  |  +--ASHP: "this.removeSubScope((calendars._symboltable.ICalendarsScope) sub[...]"
|  +--Method.ftl
|  |  +--ASHP: "this.setEnclosingScope((calendars._symboltable.ICalendarsScope) [...]"
|  +--Method.ftl
|  |  +--ASHP: "this.addSubScope((calendars._symboltable.ICalendarsScope) subScope);"
|  +--Method.ftl
|  |  +--ASHP: "this.removeSubScope((calendars._symboltable.ICalendarsScope) sub[...]"
|  +--Method.ftl
|  |  +--ASHP: "this.setEnclosingScope((calendars._symboltable.ICalendarsScope) [...]"
|  +--Method.ftl
|  |  +--ASHP: "this.addSubScope((calendars._symboltable.ICalendarsScope) subScope);"
|  +--Method.ftl
|  |  +--ASHP: "this.removeSubScope((calendars._symboltable.ICalendarsScope) sub[...]"
|  +--Method.ftl
|  |  +--ASHP: "this.setEnclosingScope((calendars._symboltable.ICalendarsScope) [...]"
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--ASHP: "= Optional.empty()"
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--ASHP: "= true"
|  +--Attribute.ftl
|  |  +--ASHP: "= Optional.empty()"
|  +--Attribute.ftl
|  |  +--ASHP: "= Optional.empty()"
|  +--Attribute.ftl
|  |  +--ASHP: "= new java.util.ArrayList<>()"
|  +--Constructor.ftl
|  |  +--ASHP: "this.realBuilder = (CalendarsScopeBuilder) this;"
|  +--Method.ftl
|  |  +--ATHP: Build.ftl
|  |  +--Build.ftl
|  +--Method.ftl
|  |  +--ATHP: IsValidMethod.ftl
|  |  +--IsValidMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: IsPresent.ftl
|  |  +--IsPresent.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: IsPresent.ftl
|  |  +--IsPresent.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: IsPresent.ftl
|  |  +--IsPresent.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: SetAbsent.ftl
|  |  +--SetAbsent.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: SetAbsent.ftl
|  |  +--SetAbsent.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: SetAbsent.ftl
|  |  +--SetAbsent.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Constructor.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ATHP: GetMill.ftl
|  |  +--GetMill.ftl
|  +--Method.ftl
|  |  +--ATHP: InitMe.ftl
|  |  +--InitMe.ftl
|  +--Method.ftl
|  |  +--ASHP: "mill = new CalendarsSymTabMill();"
|  +--Method.ftl
|  |  +--ATHP: Reset.ftl
|  |  +--Reset.ftl
|  +--Method.ftl
|  |  +--ASHP: "return new CalendarsModelLoaderBuilder();"
|  +--Method.ftl
|  |  +--ATHP: BuilderMethod.ftl
|  |  +--BuilderMethod.ftl
|  +--Method.ftl
|  |  +--ASHP: "return new CalendarsSymbolTableCreatorBuilder();"
|  +--Method.ftl
|  |  +--ATHP: BuilderMethod.ftl
|  |  +--BuilderMethod.ftl
|  +--Method.ftl
|  |  +--ASHP: "return new CalendarsSymbolTableCreatorDelegatorBuilder();"
|  +--Method.ftl
|  |  +--ATHP: BuilderMethod.ftl
|  |  +--BuilderMethod.ftl
|  +--Method.ftl
|  |  +--ASHP: "return new CalendarsGlobalScopeBuilder();"
|  +--Method.ftl
|  |  +--ATHP: BuilderMethod.ftl
|  |  +--BuilderMethod.ftl
|  +--Method.ftl
|  |  +--ASHP: "return new CalendarsArtifactScopeBuilder();"
|  +--Method.ftl
|  |  +--ATHP: BuilderMethod.ftl
|  |  +--BuilderMethod.ftl
|  +--Method.ftl
|  |  +--ASHP: "return new CalendarsScopeBuilder();"
|  +--Method.ftl
|  |  +--ATHP: BuilderMethod.ftl
|  |  +--BuilderMethod.ftl
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--ASHP: " = new HashMap<>()"
|  +--Constructor.ftl
|  |  +--ASHP: "this.modelPath = Log.errorIfNull(modelPath); this.calendarsLangu[...]"
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ASHP: "Log.error("0xA6101x608 Global scopes do not have names."); retur[...]"
|  +--Method.ftl
|  |  +--ASHP: "return false;"
|  +--Method.ftl
|  |  +--ATHP: CacheMethod.ftl
|  |  +--CacheMethod.ftl
|  +--Method.ftl
|  |  +--ASHP: " return !modelName2ModelLoaderCache.containsKey(calculatedModelN[...]"
|  +--Method.ftl
|  |  +--ASHP: "Log.error("0xA6100x797 GlobalScope CalendarsGlobalScope has no E[...]"
|  +--Method.ftl
|  |  +--ASHP: "Log.error("0xA6100x745 GlobalScope CalendarsGlobalScope has no E[...]"
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Constructor.ftl
|  |  +--ASHP: "this.realBuilder = (CalendarsGlobalScopeBuilder) this;"
|  +--Method.ftl
|  |  +--ATHP: Build.ftl
|  |  +--Build.ftl
|  +--Method.ftl
|  |  +--ATHP: IsValidMethod.ftl
|  |  +--IsValidMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Constructor.ftl
|  |  +--ASHP: "this(Optional.empty(), packageName, imports);"
|  +--Constructor.ftl
|  |  +--ATHP: Constructor.ftl
|  |  +--Constructor.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: GetName.ftl
|  |  +--GetName.ftl
|  +--Method.ftl
|  |  +--ATHP: IsPresentName.ftl
|  |  +--IsPresentName.ftl
|  +--Method.ftl
|  |  +--ATHP: GetTopLevelSymbol.ftl
|  |  +--GetTopLevelSymbol.ftl
|  +--Method.ftl
|  |  +--ATHP: CheckIfContinueAsSubScope.ftl
|  |  +--CheckIfContinueAsSubScope.ftl
|  +--Method.ftl
|  |  +--ATHP: GetFilePath.ftl
|  |  +--GetFilePath.ftl
|  +--Method.ftl
|  |  +--ATHP: GetRemainingNameForResolveDown.ftl
|  |  +--GetRemainingNameForResolveDown.ftl
|  +--Method.ftl
|  |  +--ASHP: "visitor.handle(this);"
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--ASHP: "= new java.util.ArrayList<>()"
|  +--Attribute.ftl
|  |  +--ASHP: "= Optional.empty()"
|  +--Constructor.ftl
|  |  +--ASHP: "this.realBuilder = (CalendarsArtifactScopeBuilder) this;"
|  +--Method.ftl
|  |  +--ATHP: Build.ftl
|  |  +--Build.ftl
|  +--Method.ftl
|  |  +--ATHP: IsValidMethod.ftl
|  |  +--IsValidMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: MethodDelegate.ftl
|  |  +--MethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: SetAbsent.ftl
|  |  +--SetAbsent.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: IsPresent.ftl
|  |  +--IsPresent.ftl
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Constructor.ftl
|  |  +--ATHP: Constructor.ftl
|  |  +--Constructor.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ASHP: " return new calendars._symboltable.CalendarsSymbolTableCreatorDe[...]"
|  +--Method.ftl
|  |  +--ASHP: "return new CalendarsModelLoader(this);"
|  +--Method.ftl
|  |  +--ASHP: "return new calendars._parser.CalendarsParser();"
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Constructor.ftl
|  |  +--ATHP: Constructor.ftl
|  |  +--Constructor.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateSymbolTableFromAST.ftl
|  |  +--CreateSymbolTableFromAST.ftl
|  +--Method.ftl
|  |  +--ATHP: LoadModelsIntoScope.ftl
|  |  +--LoadModelsIntoScope.ftl
|  +--Method.ftl
|  |  +--ATHP: LoadModels.ftl
|  |  +--LoadModels.ftl
|  +--Method.ftl
|  |  +--ATHP: LoadSymbolsIntoScope.ftl
|  |  +--LoadSymbolsIntoScope.ftl
|  +--Method.ftl
|  |  +--ATHP: Resolve.ftl
|  |  +--Resolve.ftl
|  +--Method.ftl
|  |  +--ATHP: ResolveSymbol.ftl
|  |  +--ResolveSymbol.ftl
|  +--Method.ftl
|  |  +--ATHP: ShowWarningIfParsedModels.ftl
|  |  +--ShowWarningIfParsedModels.ftl
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Constructor.ftl
|  |  +--ASHP: "this.realBuilder = (CalendarsModelLoaderBuilder) this;"
|  +--Method.ftl
|  |  +--ATHP: Build.ftl
|  |  +--Build.ftl
|  +--Method.ftl
|  |  +--ATHP: IsValidMethod.ftl
|  |  +--IsValidMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--ASHP: "= new java.util.ArrayDeque<>()"
|  +--Attribute.ftl
|  |  +--ASHP: "= this"
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Constructor.ftl
|  |  +--ASHP: "putOnStack(Log.errorIfNull(enclosingScope));"
|  +--Constructor.ftl
|  |  +--ASHP: "this.scopeStack = Log.errorIfNull((Deque<calendars._symboltable.[...]"
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateFromAST.ftl
|  |  +--CreateFromAST.ftl
|  +--Method.ftl
|  |  +--ATHP: PutOnStack.ftl
|  |  +--PutOnStack.ftl
|  +--Method.ftl
|  |  +--ASHP: "return Optional.ofNullable(scopeStack.peekLast());"
|  +--Method.ftl
|  |  +--ASHP: "return Optional.ofNullable(scopeStack.pollLast());"
|  +--Method.ftl
|  |  +--ASHP: "this.scopeStack = scopeStack;"
|  +--Method.ftl
|  |  +--ATHP: CreateScope.ftl
|  |  +--CreateScope.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitNoSymbol.ftl
|  |  +--VisitNoSymbol.ftl
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--ASHP: "= new java.util.ArrayDeque<>()"
|  +--Constructor.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ASHP: "return new CalendarsSymbolTableCreator(scopeStack);"
|  +--Method.ftl
|  |  +--ASHP: "this.scopeStack = scopeStack; return this;"
|  +--Method.ftl
|  |  +--ASHP: "this.scopeStack.add(scope); return this;"
|  +--Method.ftl
|  |  +--ASHP: "this.scopeStack.remove(scope); return this;"
|  +--Method.ftl
|  |  +--ASHP: "return this.scopeStack;"
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--ASHP: "= new java.util.ArrayDeque<>()"
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Constructor.ftl
|  |  +--ATHP: Constructor.ftl
|  |  +--Constructor.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateFromAST.ftl
|  |  +--CreateFromAST.ftl
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Constructor.ftl
|  |  +--ASHP: "this.realBuilder = (CalendarsSymbolTableCreatorDelegatorBuilder)[...]"
|  +--Method.ftl
|  |  +--ATHP: Build.ftl
|  |  +--Build.ftl
|  +--Method.ftl
|  |  +--ATHP: IsValidMethod.ftl
|  |  +--IsValidMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Constructor.ftl
|  |  +--ASHP: "super(scopeStack);"
|  +--Method.ftl
|  |  +--ATHP: CreateScope.ftl
|  |  +--CreateScope.ftl
+--Class.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Constructor.ftl
|  |  +--ASHP: "super(scopeStack);"
|  +--Method.ftl
|  |  +--ATHP: CreateScope.ftl
|  |  +--CreateScope.ftl
+--Interface.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Method.ftl
|  +--Method.ftl
|  |  +--ASHP: "Log.error("0xA7013x558 The method \"addSubScope\" of interface \[...]"
|  +--Method.ftl
|  |  +--ASHP: "Log.error("0xA7013x558 The method \"removeSubScope\" of interfac[...]"
|  +--Method.ftl
|  +--Method.ftl
|  +--Method.ftl
+--Interface.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Method.ftl
|  +--Method.ftl
|  +--Method.ftl
+--Interface.ftl
|  +--ASHP: "package calendars._symboltable;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Method.ftl
|  +--Method.ftl
|  +--Method.ftl
|  |  +--ASHP: "return false;"
|  +--Method.ftl
|  +--Method.ftl
|  |  +--ASHP: "return this;"
OP set value (key, value): 
OP set value (key, value): 
OP set value (key, value): 
+--Class.ftl
|  +--ASHP: "package calendars._symboltable.serialization;"
|  +--Imports.ftl
|  +--Annotations.ftl
|  +--Attribute.ftl
|  |  +--ASHP: "= new de.monticore.symboltable.serialization.JsonPrinter()"
|  +--Method.ftl
|  |  +--ASHP: "return this;"
|  +--Method.ftl
|  |  +--ASHP: "return this.printer.getContent();"
|  +--Method.ftl
|  |  +--ATHP: FilterRelevantSubScopes.ftl
|  |  +--FilterRelevantSubScopes.ftl
|  +--Method.ftl
|  |  +--ATHP: HasSymbolsInSubScopes.ftl
|  |  +--HasSymbolsInSubScopes.ftl
|  +--Method.ftl
|  |  +--ATHP: AddScopeSpanningSymbol.ftl
|  |  +--AddScopeSpanningSymbol.ftl
|  +--Method.ftl
|  |  +--ATHP: SerializeRelevantSubScopes.ftl
|  |  +--SerializeRelevantSubScopes.ftl
|  +--Method.ftl
|  |  +--ATHP: SerializeLocalSymbols.ftl
|  |  +--SerializeLocalSymbols.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitScope.ftl
|  |  +--VisitScope.ftl
|  +--Method.ftl
|  |  +--ASHP: "printer.endObject();"
|  +--Method.ftl
|  |  +--ASHP: "serializeRelevantSubScopes(node);"
|  +--Method.ftl
|  |  +--ATHP: SerializeSymbol.ftl
|  |  +--SerializeSymbol.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitArtifactScope.ftl
|  |  +--VisitArtifactScope.ftl
|  +--Method.ftl
|  |  +--ASHP: "printer.endObject();"
|  +--Method.ftl
|  |  +--ASHP: "traverse((calendars._symboltable.CalendarsScope) node);"
+--Class.ftl
|  +--ASHP: "package calendars._symboltable.serialization;"
|  +--Imports.ftl
|  +--Annotations.ftl
|  +--Method.ftl
|  |  +--ASHP: "store(as, java.nio.file.Paths.get(symbolPath, as.getFilePath(lan[...]"
|  +--Method.ftl
|  |  +--ASHP: "return "calendars._symboltable.CalendarsScope";"
|  +--Method.ftl
|  |  +--ASHP: "return "calendars._symboltable.CalendarsArtifactScope";"
|  +--Method.ftl
|  |  +--ATHP: Serialize.ftl
|  |  +--Serialize.ftl
|  +--Method.ftl
|  |  +--ATHP: DeserializeString.ftl
|  |  +--DeserializeString.ftl
|  +--Method.ftl
|  |  +--ATHP: DeserializeJsonObject.ftl
|  |  +--DeserializeJsonObject.ftl
|  +--Method.ftl
|  |  +--ATHP: DeserializeScope.ftl
|  |  +--DeserializeScope.ftl
|  +--Method.ftl
|  |  +--ATHP: DeserializeArtifactScope.ftl
|  |  +--DeserializeArtifactScope.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ATHP: AddSymbols.ftl
|  |  +--AddSymbols.ftl
|  +--Method.ftl
|  |  +--ATHP: AddAndLinkSubScopes.ftl
|  |  +--AddAndLinkSubScopes.ftl
|  +--Method.ftl
|  |  +--ATHP: AddAndLinkSpanningSymbol.ftl
|  |  +--AddAndLinkSpanningSymbol.ftl
OP set value (key, value): 
OP set value (key, value): 
OP set value (key, value): 
+--Class.ftl
|  +--ASHP: "package calendars._visitor;"
|  +--Imports.ftl
|  +--Annotations.ftl
|  +--Attribute.ftl
|  |  +--ASHP: "= (CalendarsDelegatorVisitor) this;"
|  +--Attribute.ftl
|  |  +--ASHP: "= Optional.empty();"
|  +--Attribute.ftl
|  |  +--ASHP: "= Optional.empty();"
|  +--Attribute.ftl
|  |  +--ASHP: "= Optional.empty();"
|  +--Attribute.ftl
|  |  +--ASHP: "= Optional.empty();"
|  +--Method.ftl
|  |  +--ASHP: "return realThis;"
|  +--Method.ftl
|  |  +--ATHP: SetRealThis.ftl
|  |  +--SetRealThis.ftl
|  +--Method.ftl
|  |  +--ATHP: SetVisitor.ftl
|  |  +--SetVisitor.ftl
|  +--Method.ftl
|  |  +--ASHP: "return mCCommonLiteralsVisitor;"
|  +--Method.ftl
|  |  +--ATHP: SetVisitor.ftl
|  |  +--SetVisitor.ftl
|  +--Method.ftl
|  |  +--ASHP: "return mCBasicsVisitor;"
|  +--Method.ftl
|  |  +--ATHP: SetVisitor.ftl
|  |  +--SetVisitor.ftl
|  +--Method.ftl
|  |  +--ASHP: "return mCLiteralsBasisVisitor;"
|  +--Method.ftl
|  |  +--ATHP: SetVisitor.ftl
|  |  +--SetVisitor.ftl
|  +--Method.ftl
|  |  +--ASHP: "return calendarsVisitor;"
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
|  +--Method.ftl
|  |  +--ATHP: VisitorMethods.ftl
|  |  +--VisitorMethods.ftl
+--Class.ftl
|  +--ASHP: "package calendars._visitor;"
|  +--Imports.ftl
|  +--Annotations.ftl
|  +--Attribute.ftl
|  |  +--ASHP: "= new java.util.Stack<>();"
|  +--Method.ftl
|  |  +--ATHP: GetParent.ftl
|  |  +--GetParent.ftl
|  +--Method.ftl
|  |  +--ASHP: "return new java.util.ArrayList<>(parents);"
|  +--Method.ftl
|  |  +--ATHP: Travers.ftl
|  |  +--Travers.ftl
+--Interface.ftl
|  +--ASHP: "package calendars._visitor;"
|  +--Imports.ftl
|  +--Annotations.ftl
|  +--Method.ftl
|  |  +--ASHP: "return this;"
|  +--Method.ftl
|  |  +--ASHP: " throw new UnsupportedOperationException("0xA7011x709 The setter[...]"
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ATHP: Handle.ftl
|  |  +--Handle.ftl
|  +--Method.ftl
|  |  +--ATHP: Traverse.ftl
|  |  +--Traverse.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ATHP: Handle.ftl
|  |  +--Handle.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ATHP: Handle.ftl
|  |  +--Handle.ftl
+--Interface.ftl
|  +--ASHP: "package calendars._visitor;"
|  +--Imports.ftl
|  +--Annotations.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ASHP: "return this;"
|  +--Method.ftl
|  |  +--ASHP: " throw new UnsupportedOperationException("0xA7011x709 The setter[...]"
+--Interface.ftl
|  +--ASHP: "package calendars._visitor;"
|  +--Imports.ftl
|  +--Annotations.ftl
|  +--Method.ftl
|  |  +--ASHP: "return this;"
|  +--Method.ftl
|  |  +--ASHP: " throw new UnsupportedOperationException("0xA7011x709 The setter[...]"
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ASHP: "CalendarsSymbolVisitor.super.handle(node);"
|  +--Method.ftl
|  |  +--ASHP: "CalendarsSymbolVisitor.super.handle(node);"
|  +--Method.ftl
|  |  +--ASHP: "CalendarsSymbolVisitor.super.handle(node);"
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ATHP: Handle.ftl
|  |  +--Handle.ftl
|  +--Method.ftl
|  |  +--ATHP: Traverse.ftl
|  |  +--Traverse.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ATHP: Handle.ftl
|  |  +--Handle.ftl
|  +--Method.ftl
|  |  +--ATHP: Traverse.ftl
|  |  +--Traverse.ftl
+--Interface.ftl
|  +--ASHP: "package calendars._visitor;"
|  +--Imports.ftl
|  +--Annotations.ftl
|  +--Method.ftl
|  |  +--ATHP: Handle.ftl
|  |  +--Handle.ftl
|  +--Method.ftl
|  |  +--ATHP: Handle.ftl
|  |  +--Handle.ftl
|  +--Method.ftl
|  |  +--ATHP: Handle.ftl
|  |  +--Handle.ftl
OP set value (key, value): 
OP set value (key, value): 
OP set value (key, value): 
+--Class.ftl
|  +--ASHP: "package calendars._cocos;"
|  +--Imports.ftl
|  +--Annotations.ftl
|  +--Attribute.ftl
|  |  +--ASHP: "= this"
|  +--Attribute.ftl
|  |  +--ASHP: "= new ArrayList<>()"
|  +--Attribute.ftl
|  |  +--ASHP: "= new LinkedHashSet<>()"
|  +--Attribute.ftl
|  |  +--ASHP: "= new LinkedHashSet<>()"
|  +--Attribute.ftl
|  |  +--ASHP: "= new LinkedHashSet<>()"
|  +--Attribute.ftl
|  |  +--ASHP: "= new ArrayList<>(Arrays.asList(new de.monticore.literals.mccomm[...]"
|  +--Attribute.ftl
|  |  +--ASHP: "= new ArrayList<>(Arrays.asList(new de.monticore.mcbasics._cocos[...]"
|  +--Attribute.ftl
|  |  +--ASHP: "= new ArrayList<>(Arrays.asList(new de.monticore.literals.mclite[...]"
|  +--Constructor.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ASHP: "this.calendars__cocos_CalendarsCoCoChecker.add(checker);"
|  +--Method.ftl
|  |  +--ASHP: "node.accept(getRealThis());"
|  +--Method.ftl
|  |  +--ASHP: "calendars__ast_ASTCalendarsCoCos.add(coco); return this;"
|  +--Method.ftl
|  |  +--ASHP: "for (calendars._cocos.CalendarsASTCalendarsCoCo coco : calendars[...]"
|  +--Method.ftl
|  |  +--ASHP: "calendars__ast_ASTAppointmentsCoCos.add(coco); return this;"
|  +--Method.ftl
|  |  +--ASHP: "for (calendars._cocos.CalendarsASTAppointmentsCoCo coco : calend[...]"
|  +--Method.ftl
|  |  +--ASHP: "calendars__ast_ASTCalendarsNodeCoCos.add(coco); return this;"
|  +--Method.ftl
|  |  +--ASHP: "for (calendars._cocos.CalendarsASTCalendarsNodeCoCo coco : calen[...]"
|  +--Method.ftl
|  |  +--ASHP: "this.de_monticore_literals_mccommonliterals__cocos_MCCommonLiter[...]"
|  +--Method.ftl
|  |  +--ASHP: "node.accept(getRealThis());"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mccommonliterals__cocos_MCCommonLiteralsCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "this.de_monticore_mcbasics__cocos_MCBasicsCoCoChecker.add(checker);"
|  +--Method.ftl
|  |  +--ASHP: "node.accept(getRealThis());"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_mcbasics__cocos_MCBasicsCoCoChecker.stream().findFi[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_mcbasics__cocos_MCBasicsCoCoChecker.stream().forEac[...]"
|  +--Method.ftl
|  |  +--ASHP: "this.de_monticore_literals_mcliteralsbasis__cocos_MCLiteralsBasi[...]"
|  +--Method.ftl
|  |  +--ASHP: "node.accept(getRealThis());"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mcliteralsbasis__cocos_MCLiteralsBasisCoCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mcliteralsbasis__cocos_MCLiteralsBasisCoCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mcliteralsbasis__cocos_MCLiteralsBasisCoCo[...]"
|  +--Method.ftl
|  |  +--ASHP: "de_monticore_literals_mcliteralsbasis__cocos_MCLiteralsBasisCoCo[...]"
+--Interface.ftl
|  +--ASHP: "package calendars._cocos;"
|  +--Imports.ftl
|  +--Annotations.ftl
|  +--Method.ftl
+--Interface.ftl
|  +--ASHP: "package calendars._cocos;"
|  +--Imports.ftl
|  +--Annotations.ftl
|  +--Method.ftl
+--Interface.ftl
|  +--ASHP: "package calendars._cocos;"
|  +--Imports.ftl
|  +--Annotations.ftl
|  +--Method.ftl
OP set value (key, value): 
OP set value (key, value): 
OP set value (key, value): 
+--Class.ftl
|  +--ASHP: "package calendars._ast;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Constructor.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ASHP: " return deepEquals(o, true);"
|  +--Method.ftl
|  |  +--ATHP: DeepEqualsWithOrder.ftl
|  |  +--DeepEqualsWithOrder.ftl
|  +--Method.ftl
|  |  +--ASHP: " return deepEqualsWithComments(o, true);"
|  +--Method.ftl
|  |  +--ATHP: DeepEqualsWithComments.ftl
|  |  +--DeepEqualsWithComments.ftl
|  +--Method.ftl
|  |  +--ATHP: EqualAttributes.ftl
|  |  +--EqualAttributes.ftl
|  +--Method.ftl
|  |  +--ATHP: EqualsWithComments.ftl
|  |  +--EqualsWithComments.ftl
|  +--Method.ftl
|  |  +--ASHP: " return deepClone(_construct());"
|  +--Method.ftl
|  |  +--ATHP: DeepCloneWithParameters.ftl
|  |  +--DeepCloneWithParameters.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: Accept.ftl
|  |  +--Accept.ftl
|  +--Method.ftl
|  |  +--ATHP: AcceptSuper.ftl
|  |  +--AcceptSuper.ftl
|  +--Method.ftl
|  |  +--ATHP: AcceptSuper.ftl
|  |  +--AcceptSuper.ftl
|  +--Method.ftl
|  |  +--ATHP: AcceptSuper.ftl
|  |  +--AcceptSuper.ftl
|  +--Method.ftl
|  |  +--ASHP: "return calendars._ast.CalendarsNodeFactory.createASTCalendars();"
|  +--Method.ftl
|  |  +--ATHP: GetChildren.ftl
|  |  +--GetChildren.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: InheritedSetEnclosingScope.ftl
|  |  +--InheritedSetEnclosingScope.ftl
|  +--Method.ftl
|  |  +--ATHP: InheritedSetEnclosingScope.ftl
|  |  +--InheritedSetEnclosingScope.ftl
|  +--Method.ftl
|  |  +--ATHP: InheritedSetEnclosingScope.ftl
|  |  +--InheritedSetEnclosingScope.ftl
+--Class.ftl
|  +--ASHP: "package calendars._ast;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Constructor.ftl
|  |  +--ASHP: "this.realBuilder = (ASTCalendarsBuilder) this;"
|  +--Method.ftl
|  |  +--ATHP: BuildMethod.ftl
|  |  +--BuildMethod.ftl
|  |  |  +--ATHP: ASTCNodeInit.ftl
|  |  |  +--ASTCNodeInit.ftl
|  +--Method.ftl
|  |  +--ATHP: IsValidMethod.ftl
|  |  +--IsValidMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
|  +--Method.ftl
|  |  +--ATHP: Set.ftl
|  |  +--Set.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
|  +--Method.ftl
|  |  +--ATHP: ASTCNodeMethodDelegate.ftl
|  |  +--ASTCNodeMethodDelegate.ftl
+--Class.ftl
|  +--ASHP: "package calendars._ast;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Constructor.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ATHP: GetFactory.ftl
|  |  +--GetFactory.ftl
|  +--Method.ftl
|  |  +--ATHP: Create.ftl
|  |  +--Create.ftl
|  +--Method.ftl
|  |  +--ATHP: DoCreate.ftl
|  |  +--DoCreate.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateDelegateMethod.ftl
|  |  +--CreateDelegateMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateDelegateMethod.ftl
|  |  +--CreateDelegateMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateDelegateMethod.ftl
|  |  +--CreateDelegateMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateDelegateMethod.ftl
|  |  +--CreateDelegateMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateDelegateMethod.ftl
|  |  +--CreateDelegateMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateDelegateMethod.ftl
|  |  +--CreateDelegateMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateDelegateMethod.ftl
|  |  +--CreateDelegateMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateDelegateMethod.ftl
|  |  +--CreateDelegateMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateDelegateMethod.ftl
|  |  +--CreateDelegateMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateDelegateMethod.ftl
|  |  +--CreateDelegateMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateDelegateMethod.ftl
|  |  +--CreateDelegateMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: CreateDelegateMethod.ftl
|  |  +--CreateDelegateMethod.ftl
+--Class.ftl
|  +--ASHP: "package calendars._ast;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Constructor.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ATHP: GetMillMethod.ftl
|  |  +--GetMillMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: InitMeMethod.ftl
|  |  +--InitMeMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: InitMethod.ftl
|  |  +--InitMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: ResetMethod.ftl
|  |  +--ResetMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: BuilderMethod.ftl
|  |  +--BuilderMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: ProtectedBuilderMethod.ftl
|  |  +--ProtectedBuilderMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: BuilderDelegatorMethod.ftl
|  |  +--BuilderDelegatorMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: BuilderDelegatorMethod.ftl
|  |  +--BuilderDelegatorMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: BuilderDelegatorMethod.ftl
|  |  +--BuilderDelegatorMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: BuilderDelegatorMethod.ftl
|  |  +--BuilderDelegatorMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: BuilderDelegatorMethod.ftl
|  |  +--BuilderDelegatorMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: BuilderDelegatorMethod.ftl
|  |  +--BuilderDelegatorMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: BuilderDelegatorMethod.ftl
|  |  +--BuilderDelegatorMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: BuilderDelegatorMethod.ftl
|  |  +--BuilderDelegatorMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: BuilderDelegatorMethod.ftl
|  |  +--BuilderDelegatorMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: BuilderDelegatorMethod.ftl
|  |  +--BuilderDelegatorMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: BuilderDelegatorMethod.ftl
|  |  +--BuilderDelegatorMethod.ftl
|  +--Method.ftl
|  |  +--ATHP: BuilderDelegatorMethod.ftl
|  |  +--BuilderDelegatorMethod.ftl
+--Class.ftl
|  +--ASHP: "package calendars._ast;"
|  +--Imports.ftl
|  +--ASHP: ""
+--Class.ftl
|  +--ASHP: "package calendars._ast;"
|  +--Imports.ftl
|  +--ASHP: ""
+--Class.ftl
|  +--ASHP: "package calendars._ast;"
|  +--Imports.ftl
|  +--ASHP: ""
+--Class.ftl
|  +--ASHP: "package calendars._ast;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--ASHP: "= "Calendars""
|  +--Attribute.ftl
|  |  +--ASHP: "= 0"
|  +--Attribute.ftl
|  |  +--ASHP: "= {"de.monticore.literals.MCCommonLiterals", "de.monticore.MCBas[...]"
|  +--Constructor.ftl
|  |  +--EmptyBody.ftl
|  +--Method.ftl
|  |  +--ATHP: GetAllLanguages.ftl
|  |  +--GetAllLanguages.ftl
+--Interface.ftl
|  +--ASHP: "package calendars._ast;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Method.ftl
|  +--Method.ftl
|  +--Method.ftl
|  +--Method.ftl
|  +--Method.ftl
|  +--Method.ftl
|  +--Method.ftl
|  +--Method.ftl
|  +--Method.ftl
|  +--Method.ftl
|  +--Method.ftl
|  +--Method.ftl
|  +--Method.ftl
+--Interface.ftl
|  +--ASHP: "package calendars._ast;"
|  +--Imports.ftl
|  +--ASHP: ""
|  +--Method.ftl
+--Enum.ftl
|  +--ASHP: "package calendars._ast;"
|  +--ASHP: ""
|  +--Attribute.ftl
|  |  +--Value.ftl
|  +--Constructor.ftl
|  |  +--ASHP: "this.intValue = intValue;"
|  +--Method.ftl
|  |  +--ATHP: Get.ftl
|  |  +--Get.ftl
OP set value (key, value): 
+--DiagramVisitor.ftl
========================================================== Explanation
Tree structure for template calls.
Short forms:
  +--      template call
  +--SHP   StringHookPoint call
  +--CHP   CodeHookPoint call
  +--ASHP  AST StringHookPoint call
  +--ATHP  AST TemplateHookPoint call
  +--ACHP  AST CodeHookPoint call
  +inst    instantiation of java class
(EOF)
