/* generated from model Appointments */
/* generated by template core.Interface*/

/* (c) https://github.com/MontiCore/monticore */
package appointments._visitor;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;

/* generated by template core.Annotations*/
// empty template

 public  interface AppointmentsScopeVisitor extends AppointmentsSymbolVisitor,de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsScopeVisitor {



  default /* generated by template core.Method*/
 public  AppointmentsScopeVisitor getRealThis ()  {
      return this;
}

  default /* generated by template core.Method*/
 public  void setRealThis (AppointmentsScopeVisitor realThis)  {
          throw new UnsupportedOperationException("0xA7011x709 The setter for realThis is not implemented. You might want to implement a wrapper class to allow setting/getting realThis.");

}

  default /* generated by template core.Method*/
 public  void visit (de.monticore.symboltable.IScope node)  {
      /* generated by template core.EmptyBody*/
// empty body

}

  default /* generated by template core.Method*/
 public  void endVisit (de.monticore.symboltable.IScope node)  {
      /* generated by template core.EmptyBody*/
// empty body

}

  default /* generated by template core.Method*/
 public  void visit (de.monticore.symboltable.ISymbol node)  {
      AppointmentsSymbolVisitor.super.handle(node);
}

  default /* generated by template core.Method*/
 public  void endVisit (de.monticore.symboltable.ISymbol node)  {
      AppointmentsSymbolVisitor.super.handle(node);
}

  default /* generated by template core.Method*/
 public  void handle (de.monticore.symboltable.ISymbol node)  {
      AppointmentsSymbolVisitor.super.handle(node);
}

  default /* generated by template core.Method*/
 public  void visit (appointments._symboltable.AppointmentsScope node)  {
      /* generated by template core.EmptyBody*/
// empty body

}

  default /* generated by template core.Method*/
 public  void endVisit (appointments._symboltable.AppointmentsScope node)  {
      /* generated by template core.EmptyBody*/
// empty body

}

  default /* generated by template core.Method*/
 public  void handle (appointments._symboltable.AppointmentsScope node)  {
      /* generated by template _visitor.Handle*/

  getRealThis().visit(node);
  getRealThis().traverse(node);
  getRealThis().endVisit(node);

}

  default /* generated by template core.Method*/
 public  void traverse (appointments._symboltable.AppointmentsScope node)  {
      /* generated by template _visitor.scope.Traverse*/

  // traverse symbols within the scope

  // traverse sub-scopes
  for (appointments._symboltable.IAppointmentsScope s : node.getSubScopes()) {
    s.accept(getRealThis());
  }
}

  default /* generated by template core.Method*/
 public  void visit (appointments._symboltable.AppointmentsArtifactScope node)  {
      /* generated by template core.EmptyBody*/
// empty body

}

  default /* generated by template core.Method*/
 public  void endVisit (appointments._symboltable.AppointmentsArtifactScope node)  {
      /* generated by template core.EmptyBody*/
// empty body

}

  default /* generated by template core.Method*/
 public  void handle (appointments._symboltable.AppointmentsArtifactScope node)  {
      /* generated by template _visitor.Handle*/

  getRealThis().visit(node);
  getRealThis().traverse(node);
  getRealThis().endVisit(node);

}

  default /* generated by template core.Method*/
 public  void traverse (appointments._symboltable.AppointmentsArtifactScope node)  {
      /* generated by template _visitor.scope.Traverse*/

  // traverse symbols within the scope

  // traverse sub-scopes
  for (appointments._symboltable.IAppointmentsScope s : node.getSubScopes()) {
    s.accept(getRealThis());
  }
}

}
