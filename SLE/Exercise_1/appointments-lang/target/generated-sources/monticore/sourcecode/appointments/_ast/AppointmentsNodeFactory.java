/* generated from model Appointments */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package appointments._ast;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class AppointmentsNodeFactory  {

    /* generated by template core.Attribute*/
 protected  static  AppointmentsNodeFactory factory ;

    /* generated by template core.Attribute*/
 protected  static  AppointmentsNodeFactory factoryASTAppointment ;

    /* generated by template core.Attribute*/
 protected  static  AppointmentsNodeFactory factoryASTStart ;

    /* generated by template core.Attribute*/
 protected  static  AppointmentsNodeFactory factoryASTEnd ;

    /* generated by template core.Attribute*/
 protected  static  AppointmentsNodeFactory factoryASTDate ;

    /* generated by template core.Attribute*/
 protected  static  AppointmentsNodeFactory factoryASTTime ;

    /* generated by template core.Attribute*/
 protected  static  AppointmentsNodeFactory factoryASTBreak ;


    /* generated by template core.Constructor*/
 protected  AppointmentsNodeFactory()  {
    /* generated by template core.EmptyBody*/
// empty body

}


    /* generated by template core.Method*/
 private  static  AppointmentsNodeFactory getFactory ()  {
      /* generated by template _ast.nodefactory.GetFactory*/

  if (factory == null) {
    factory = new AppointmentsNodeFactory();
  }
  return factory;

}

    /* generated by template core.Method*/
 public  static  ASTAppointment createASTAppointment ()  {
      /* generated by template _ast.nodefactory.Create*/

  {
    if (factoryASTAppointment == null) {
      factoryASTAppointment = getFactory();
    }
    return factoryASTAppointment.doCreateASTAppointment();
  }

}

    /* generated by template core.Method*/
 protected  ASTAppointment doCreateASTAppointment ()  {
      /* generated by template _ast.nodefactory.DoCreate*/

  {
    return new ASTAppointment();
  }

}

    /* generated by template core.Method*/
 public  static  ASTStart createASTStart ()  {
      /* generated by template _ast.nodefactory.Create*/

  {
    if (factoryASTStart == null) {
      factoryASTStart = getFactory();
    }
    return factoryASTStart.doCreateASTStart();
  }

}

    /* generated by template core.Method*/
 protected  ASTStart doCreateASTStart ()  {
      /* generated by template _ast.nodefactory.DoCreate*/

  {
    return new ASTStart();
  }

}

    /* generated by template core.Method*/
 public  static  ASTEnd createASTEnd ()  {
      /* generated by template _ast.nodefactory.Create*/

  {
    if (factoryASTEnd == null) {
      factoryASTEnd = getFactory();
    }
    return factoryASTEnd.doCreateASTEnd();
  }

}

    /* generated by template core.Method*/
 protected  ASTEnd doCreateASTEnd ()  {
      /* generated by template _ast.nodefactory.DoCreate*/

  {
    return new ASTEnd();
  }

}

    /* generated by template core.Method*/
 public  static  ASTDate createASTDate ()  {
      /* generated by template _ast.nodefactory.Create*/

  {
    if (factoryASTDate == null) {
      factoryASTDate = getFactory();
    }
    return factoryASTDate.doCreateASTDate();
  }

}

    /* generated by template core.Method*/
 protected  ASTDate doCreateASTDate ()  {
      /* generated by template _ast.nodefactory.DoCreate*/

  {
    return new ASTDate();
  }

}

    /* generated by template core.Method*/
 public  static  ASTTime createASTTime ()  {
      /* generated by template _ast.nodefactory.Create*/

  {
    if (factoryASTTime == null) {
      factoryASTTime = getFactory();
    }
    return factoryASTTime.doCreateASTTime();
  }

}

    /* generated by template core.Method*/
 protected  ASTTime doCreateASTTime ()  {
      /* generated by template _ast.nodefactory.DoCreate*/

  {
    return new ASTTime();
  }

}

    /* generated by template core.Method*/
 public  static  ASTBreak createASTBreak ()  {
      /* generated by template _ast.nodefactory.Create*/

  {
    if (factoryASTBreak == null) {
      factoryASTBreak = getFactory();
    }
    return factoryASTBreak.doCreateASTBreak();
  }

}

    /* generated by template core.Method*/
 protected  ASTBreak doCreateASTBreak ()  {
      /* generated by template _ast.nodefactory.DoCreate*/

  {
    return new ASTBreak();
  }

}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTNullLiteral createASTNullLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTNullLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTBooleanLiteral createASTBooleanLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTBooleanLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTCharLiteral createASTCharLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTCharLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral createASTStringLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTStringLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTNatLiteral createASTNatLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTNatLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTSignedNatLiteral createASTSignedNatLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTSignedNatLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTBasicLongLiteral createASTBasicLongLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTBasicLongLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTSignedBasicLongLiteral createASTSignedBasicLongLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTSignedBasicLongLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTBasicFloatLiteral createASTBasicFloatLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTBasicFloatLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTSignedBasicFloatLiteral createASTSignedBasicFloatLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTSignedBasicFloatLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTBasicDoubleLiteral createASTBasicDoubleLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTBasicDoubleLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTSignedBasicDoubleLiteral createASTSignedBasicDoubleLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTSignedBasicDoubleLiteral();
}

}
