/* generated from model Calendars */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package calendars._visitor;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;

/* generated by template core.Annotations*/
// empty template

 public  class CalendarsDelegatorVisitor  implements CalendarsInheritanceVisitor {

    /* generated by template core.Attribute*/
 private  CalendarsDelegatorVisitor realThis = (CalendarsDelegatorVisitor) this;;

    /* generated by template core.Attribute*/
 private  Optional<de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor> mCCommonLiteralsVisitor = Optional.empty();;

    /* generated by template core.Attribute*/
 private  Optional<de.monticore.mcbasics._visitor.MCBasicsVisitor> mCBasicsVisitor = Optional.empty();;

    /* generated by template core.Attribute*/
 private  Optional<de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor> mCLiteralsBasisVisitor = Optional.empty();;

    /* generated by template core.Attribute*/
 private  Optional<calendars._visitor.CalendarsVisitor> calendarsVisitor = Optional.empty();;



    /* generated by template core.Method*/
 public  CalendarsDelegatorVisitor getRealThis ()  {
      return realThis;
}

    /* generated by template core.Method*/
 public  void setRealThis (calendars._visitor.CalendarsVisitor realThis)  {
      /* generated by template _visitor.delegator.SetRealThis*/

if (this.realThis != realThis) {
  if (!(realThis instanceof CalendarsDelegatorVisitor)) {
  Log.error("0xA7111x046 realThis of CalendarsDelegatorVisitor must be CalendarsDelegatorVisitor itself.");
  }
  this.realThis = (CalendarsDelegatorVisitor) realThis;
  // register the known delegates to the realThis (and therby also set their new realThis)
  if (this.calendarsVisitor.isPresent()) {
    this.setCalendarsVisitor(calendarsVisitor.get());
  }
  if (this.mCCommonLiteralsVisitor.isPresent()) {
    this.setMCCommonLiteralsVisitor(mCCommonLiteralsVisitor.get());
  }

}
}

    /* generated by template core.Method*/
 public  void setMCCommonLiteralsVisitor (de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor mCCommonLiteralsVisitor)  {
      /* generated by template _visitor.delegator.SetVisitor*/

  this.mCCommonLiteralsVisitor = Optional.ofNullable(mCCommonLiteralsVisitor);
  if (this.mCCommonLiteralsVisitor.isPresent()) {
    this.mCCommonLiteralsVisitor.get().setRealThis(getRealThis());
  }
  // register the MCCommonLiteralsVisitor also to realThis if not this
  if (getRealThis() != this) {
    // to prevent recursion we must differentiate between realThis being
    // the current this or another instance.
    getRealThis().setMCCommonLiteralsVisitor(mCCommonLiteralsVisitor);
  }
}

    /* generated by template core.Method*/
 public  Optional<de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor> getMCCommonLiteralsVisitor ()  {
      return mCCommonLiteralsVisitor;
}

    /* generated by template core.Method*/
 public  void setMCBasicsVisitor (de.monticore.mcbasics._visitor.MCBasicsVisitor mCBasicsVisitor)  {
      /* generated by template _visitor.delegator.SetVisitor*/

  this.mCBasicsVisitor = Optional.ofNullable(mCBasicsVisitor);
  if (this.mCBasicsVisitor.isPresent()) {
    this.mCBasicsVisitor.get().setRealThis(getRealThis());
  }
  // register the MCBasicsVisitor also to realThis if not this
  if (getRealThis() != this) {
    // to prevent recursion we must differentiate between realThis being
    // the current this or another instance.
    getRealThis().setMCBasicsVisitor(mCBasicsVisitor);
  }
}

    /* generated by template core.Method*/
 public  Optional<de.monticore.mcbasics._visitor.MCBasicsVisitor> getMCBasicsVisitor ()  {
      return mCBasicsVisitor;
}

    /* generated by template core.Method*/
 public  void setMCLiteralsBasisVisitor (de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor mCLiteralsBasisVisitor)  {
      /* generated by template _visitor.delegator.SetVisitor*/

  this.mCLiteralsBasisVisitor = Optional.ofNullable(mCLiteralsBasisVisitor);
  if (this.mCLiteralsBasisVisitor.isPresent()) {
    this.mCLiteralsBasisVisitor.get().setRealThis(getRealThis());
  }
  // register the MCLiteralsBasisVisitor also to realThis if not this
  if (getRealThis() != this) {
    // to prevent recursion we must differentiate between realThis being
    // the current this or another instance.
    getRealThis().setMCLiteralsBasisVisitor(mCLiteralsBasisVisitor);
  }
}

    /* generated by template core.Method*/
 public  Optional<de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor> getMCLiteralsBasisVisitor ()  {
      return mCLiteralsBasisVisitor;
}

    /* generated by template core.Method*/
 public  void setCalendarsVisitor (calendars._visitor.CalendarsVisitor calendarsVisitor)  {
      /* generated by template _visitor.delegator.SetVisitor*/

  this.calendarsVisitor = Optional.ofNullable(calendarsVisitor);
  if (this.calendarsVisitor.isPresent()) {
    this.calendarsVisitor.get().setRealThis(getRealThis());
  }
  // register the CalendarsVisitor also to realThis if not this
  if (getRealThis() != this) {
    // to prevent recursion we must differentiate between realThis being
    // the current this or another instance.
    getRealThis().setCalendarsVisitor(calendarsVisitor);
  }
}

    /* generated by template core.Method*/
 public  Optional<calendars._visitor.CalendarsVisitor> getCalendarsVisitor ()  {
      return calendarsVisitor;
}

    /* generated by template core.Method*/
 public  void visit (calendars._ast.ASTCalendars node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getCalendarsVisitor().isPresent()) {
    getRealThis().getCalendarsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (calendars._ast.ASTCalendars node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getCalendarsVisitor().isPresent()) {
    getRealThis().getCalendarsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (calendars._ast.ASTCalendars node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getCalendarsVisitor().isPresent()) {
    getRealThis().getCalendarsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (calendars._ast.ASTCalendars node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getCalendarsVisitor().isPresent()) {
    getRealThis().getCalendarsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (calendars._ast.ASTAppointments node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getCalendarsVisitor().isPresent()) {
    getRealThis().getCalendarsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (calendars._ast.ASTAppointments node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getCalendarsVisitor().isPresent()) {
    getRealThis().getCalendarsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (calendars._ast.ASTAppointments node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getCalendarsVisitor().isPresent()) {
    getRealThis().getCalendarsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (calendars._ast.ASTCalendarsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getCalendarsVisitor().isPresent()) {
    getRealThis().getCalendarsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (calendars._ast.ASTCalendarsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getCalendarsVisitor().isPresent()) {
    getRealThis().getCalendarsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (calendars._ast.ASTCalendarsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getCalendarsVisitor().isPresent()) {
    getRealThis().getCalendarsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTNullLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTNullLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTNullLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTNullLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTBooleanLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTBooleanLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTBooleanLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTBooleanLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTCharLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTCharLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTCharLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTCharLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTSignedNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTSignedNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTSignedNatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicLongLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicFloatLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void traverse (de.monticore.literals.mccommonliterals._ast.ASTSignedBasicDoubleLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().traverse(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTSignedLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTSignedLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTNumericLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTNumericLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTNumericLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTSignedNumericLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTSignedNumericLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTSignedNumericLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mccommonliterals._ast.ASTMCCommonLiteralsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mccommonliterals._ast.ASTMCCommonLiteralsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mccommonliterals._ast.ASTMCCommonLiteralsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.mcbasics._ast.ASTMCBasicsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicsVisitor().isPresent()) {
    getRealThis().getMCBasicsVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.mcbasics._ast.ASTMCBasicsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicsVisitor().isPresent()) {
    getRealThis().getMCBasicsVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.mcbasics._ast.ASTMCBasicsNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCBasicsVisitor().isPresent()) {
    getRealThis().getMCBasicsVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mcliteralsbasis._ast.ASTLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mcliteralsbasis._ast.ASTLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mcliteralsbasis._ast.ASTLiteral node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.literals.mcliteralsbasis._ast.ASTMCLiteralsBasisNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.literals.mcliteralsbasis._ast.ASTMCLiteralsBasisNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().endVisit(node);
  }

}

    /* generated by template core.Method*/
 public  void handle (de.monticore.literals.mcliteralsbasis._ast.ASTMCLiteralsBasisNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().handle(node);
  }

}

    /* generated by template core.Method*/
 public  void visit (de.monticore.ast.ASTNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getCalendarsVisitor().isPresent()) {
    getRealThis().getCalendarsVisitor().get().visit(node);
  }
  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().visit(node);
  }
  if (getRealThis().getMCBasicsVisitor().isPresent()) {
    getRealThis().getMCBasicsVisitor().get().visit(node);
  }
  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().visit(node);
  }

}

    /* generated by template core.Method*/
 public  void endVisit (de.monticore.ast.ASTNode node)  {
      /* generated by template _visitor.delegator.VisitorMethods*/

  if (getRealThis().getMCLiteralsBasisVisitor().isPresent()) {
    getRealThis().getMCLiteralsBasisVisitor().get().endVisit(node);
  }
  if (getRealThis().getMCBasicsVisitor().isPresent()) {
    getRealThis().getMCBasicsVisitor().get().endVisit(node);
  }
  if (getRealThis().getMCCommonLiteralsVisitor().isPresent()) {
    getRealThis().getMCCommonLiteralsVisitor().get().endVisit(node);
  }
  if (getRealThis().getCalendarsVisitor().isPresent()) {
    getRealThis().getCalendarsVisitor().get().endVisit(node);
  }

}

}
