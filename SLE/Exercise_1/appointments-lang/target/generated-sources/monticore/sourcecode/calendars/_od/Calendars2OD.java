/* generated by template od.DiagramVisitor*/




package calendars._od;

import calendars._visitor.CalendarsVisitor;
import calendars._ast.ASTCalendarsNode;
import de.monticore.prettyprint.IndentPrinter;
import de.se_rwth.commons.Names;
import de.se_rwth.commons.StringTransformations;
import de.monticore.generating.templateengine.reporting.commons.ReportingRepository;
import java.util.Iterator;

public class Calendars2OD implements CalendarsVisitor {

  private CalendarsVisitor realThis = this;

  protected IndentPrinter pp;

  protected ReportingRepository reporting;

  protected boolean printEmptyOptional = false;

  protected boolean printEmptyList = false;

  public Calendars2OD(IndentPrinter printer, ReportingRepository reporting) {
    this.reporting = reporting;
    this.pp = printer;
  }


      @Override
      public void handle(calendars._ast.ASTCalendars node) {
        String name = StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
        printObject(name, "calendars._ast.ASTCalendars");
        pp.indent();
          String scopeName = StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
          pp.println("enclosingScope = " + scopeName + ";");
        printAttribute("name", "\"" + String.valueOf(node.getName()) + "\"");
        pp.unindent();
        pp.print("}");
     }


  private void printAttribute(String name, String value) {
    pp.print(name);
    pp.print(" = ");
    pp.print(value);
    pp.println(";");
  }

  private void printObject(String objName, String objType) {
    pp.print(objName);
    pp.print(":");
    pp.print(Names.getSimpleName(objType));
    pp.println(" {");
  }

  public String printObjectDiagram(String modelName, ASTCalendarsNode node) {
    pp.clearBuffer();
    pp.setIndentLength(2);
    pp.print("objectdiagram ");
    pp.print(modelName);
    pp.println(" {");
    pp.indent();
    node.accept(getRealThis());
    pp.print(";");
    pp.unindent();
    pp.println("}");
    return pp.getContent();
  }

  @Override
  public void setRealThis(CalendarsVisitor realThis) {
    this.realThis = realThis;
  }

  @Override
  public CalendarsVisitor getRealThis() {
    return realThis;
  }

  /**
   * @return the printEmptyOptional
   */
  public boolean isPrintEmptyOptional() {
    return this.printEmptyOptional;
  }


  /**
   * @param printEmptyOptional the printEmptyOptional to set
   */
  public void setPrintEmptyOptional(boolean printEmptyOptional) {
    this.printEmptyOptional = printEmptyOptional;
  }


  /**
   * @return the printEmptyList
   */
  public boolean isPrintEmptyList() {
    return this.printEmptyList;
  }


  /**
   * @param printEmptyList the printEmptyList to set
   */
  public void setPrintEmptyList(boolean printEmptyList) {
    this.printEmptyList = printEmptyList;
  }

}

