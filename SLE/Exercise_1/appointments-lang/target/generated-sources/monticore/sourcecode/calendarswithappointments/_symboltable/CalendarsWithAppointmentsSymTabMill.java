/* generated from model CalendarsWithAppointments */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package calendarswithappointments._symboltable;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class CalendarsWithAppointmentsSymTabMill  {

    /* generated by template core.Attribute*/
 protected  static  CalendarsWithAppointmentsSymTabMill mill ;

    /* generated by template core.Attribute*/
 protected  static  CalendarsWithAppointmentsSymTabMill calendarsWithAppointmentsModelLoader ;

    /* generated by template core.Attribute*/
 protected  static  CalendarsWithAppointmentsSymTabMill calendarsWithAppointmentsSymbolTableCreator ;

    /* generated by template core.Attribute*/
 protected  static  CalendarsWithAppointmentsSymTabMill calendarsWithAppointmentsSymbolTableCreatorDelegator ;

    /* generated by template core.Attribute*/
 protected  static  CalendarsWithAppointmentsSymTabMill calendarsWithAppointmentsGlobalScope ;

    /* generated by template core.Attribute*/
 protected  static  CalendarsWithAppointmentsSymTabMill calendarsWithAppointmentsArtifactScope ;

    /* generated by template core.Attribute*/
 protected  static  CalendarsWithAppointmentsSymTabMill calendarsWithAppointmentsScope ;


    /* generated by template core.Constructor*/
 protected  CalendarsWithAppointmentsSymTabMill()  {
    /* generated by template core.EmptyBody*/
// empty body

}


    /* generated by template core.Method*/
 protected  static  CalendarsWithAppointmentsSymTabMill getMill ()  {
      /* generated by template _symboltable.symTabMill.GetMill*/

  if (mill == null) {
    mill = new CalendarsWithAppointmentsSymTabMill();
  }
  return mill;
}

    /* generated by template core.Method*/
 public  static  void initMe (CalendarsWithAppointmentsSymTabMill a)  {
      /* generated by template _symboltable.symTabMill.InitMe*/

  mill = a;
  calendarsWithAppointmentsModelLoader = mill;
  calendarsWithAppointmentsSymbolTableCreator = mill;
  calendarsWithAppointmentsSymbolTableCreatorDelegator = mill;
  calendarsWithAppointmentsGlobalScope = mill;
  calendarsWithAppointmentsArtifactScope = mill;
  calendarsWithAppointmentsScope = mill;

}

    /* generated by template core.Method*/
 public  static  void init ()  {
      mill = new CalendarsWithAppointmentsSymTabMill();
}

    /* generated by template core.Method*/
 public  static  void reset ()  {
      /* generated by template _symboltable.symTabMill.Reset*/

  mill = null;
  calendarsWithAppointmentsModelLoader = null;
  calendarsWithAppointmentsSymbolTableCreator = null;
  calendarsWithAppointmentsSymbolTableCreatorDelegator = null;
  calendarsWithAppointmentsGlobalScope = null;
  calendarsWithAppointmentsArtifactScope = null;
  calendarsWithAppointmentsScope = null;
  calendars._symboltable.CalendarsSymTabMill.reset();
  appointments._symboltable.AppointmentsSymTabMill.reset();
  de.monticore.literals.mccommonliterals._symboltable.MCCommonLiteralsSymTabMill.reset();
  de.monticore.mcbasics._symboltable.MCBasicsSymTabMill.reset();
  de.monticore.literals.mcliteralsbasis._symboltable.MCLiteralsBasisSymTabMill.reset();

}

    /* generated by template core.Method*/
 protected  CalendarsWithAppointmentsModelLoaderBuilder _calendarsWithAppointmentsModelLoaderBuilder ()  {
      return new CalendarsWithAppointmentsModelLoaderBuilder();
}

    /* generated by template core.Method*/
 public  static  CalendarsWithAppointmentsModelLoaderBuilder calendarsWithAppointmentsModelLoaderBuilder ()  {
      /* generated by template _symboltable.symTabMill.BuilderMethod*/

  if (calendarsWithAppointmentsModelLoader == null) {
    calendarsWithAppointmentsModelLoader = getMill();
  }
  return calendarsWithAppointmentsModelLoader._calendarsWithAppointmentsModelLoaderBuilder();
}

    /* generated by template core.Method*/
 protected  CalendarsWithAppointmentsSymbolTableCreatorBuilder _calendarsWithAppointmentsSymbolTableCreatorBuilder ()  {
      return new CalendarsWithAppointmentsSymbolTableCreatorBuilder();
}

    /* generated by template core.Method*/
 public  static  CalendarsWithAppointmentsSymbolTableCreatorBuilder calendarsWithAppointmentsSymbolTableCreatorBuilder ()  {
      /* generated by template _symboltable.symTabMill.BuilderMethod*/

  if (calendarsWithAppointmentsSymbolTableCreator == null) {
    calendarsWithAppointmentsSymbolTableCreator = getMill();
  }
  return calendarsWithAppointmentsSymbolTableCreator._calendarsWithAppointmentsSymbolTableCreatorBuilder();
}

    /* generated by template core.Method*/
 protected  CalendarsWithAppointmentsSymbolTableCreatorDelegatorBuilder _calendarsWithAppointmentsSymbolTableCreatorDelegatorBuilder ()  {
      return new CalendarsWithAppointmentsSymbolTableCreatorDelegatorBuilder();
}

    /* generated by template core.Method*/
 public  static  CalendarsWithAppointmentsSymbolTableCreatorDelegatorBuilder calendarsWithAppointmentsSymbolTableCreatorDelegatorBuilder ()  {
      /* generated by template _symboltable.symTabMill.BuilderMethod*/

  if (calendarsWithAppointmentsSymbolTableCreatorDelegator == null) {
    calendarsWithAppointmentsSymbolTableCreatorDelegator = getMill();
  }
  return calendarsWithAppointmentsSymbolTableCreatorDelegator._calendarsWithAppointmentsSymbolTableCreatorDelegatorBuilder();
}

    /* generated by template core.Method*/
 protected  CalendarsWithAppointmentsGlobalScopeBuilder _calendarsWithAppointmentsGlobalScopeBuilder ()  {
      return new CalendarsWithAppointmentsGlobalScopeBuilder();
}

    /* generated by template core.Method*/
 public  static  CalendarsWithAppointmentsGlobalScopeBuilder calendarsWithAppointmentsGlobalScopeBuilder ()  {
      /* generated by template _symboltable.symTabMill.BuilderMethod*/

  if (calendarsWithAppointmentsGlobalScope == null) {
    calendarsWithAppointmentsGlobalScope = getMill();
  }
  return calendarsWithAppointmentsGlobalScope._calendarsWithAppointmentsGlobalScopeBuilder();
}

    /* generated by template core.Method*/
 protected  CalendarsWithAppointmentsArtifactScopeBuilder _calendarsWithAppointmentsArtifactScopeBuilder ()  {
      return new CalendarsWithAppointmentsArtifactScopeBuilder();
}

    /* generated by template core.Method*/
 public  static  CalendarsWithAppointmentsArtifactScopeBuilder calendarsWithAppointmentsArtifactScopeBuilder ()  {
      /* generated by template _symboltable.symTabMill.BuilderMethod*/

  if (calendarsWithAppointmentsArtifactScope == null) {
    calendarsWithAppointmentsArtifactScope = getMill();
  }
  return calendarsWithAppointmentsArtifactScope._calendarsWithAppointmentsArtifactScopeBuilder();
}

    /* generated by template core.Method*/
 protected  CalendarsWithAppointmentsScopeBuilder _calendarsWithAppointmentsScopeBuilder ()  {
      return new CalendarsWithAppointmentsScopeBuilder();
}

    /* generated by template core.Method*/
 public  static  CalendarsWithAppointmentsScopeBuilder calendarsWithAppointmentsScopeBuilder ()  {
      /* generated by template _symboltable.symTabMill.BuilderMethod*/

  if (calendarsWithAppointmentsScope == null) {
    calendarsWithAppointmentsScope = getMill();
  }
  return calendarsWithAppointmentsScope._calendarsWithAppointmentsScopeBuilder();
}

}
