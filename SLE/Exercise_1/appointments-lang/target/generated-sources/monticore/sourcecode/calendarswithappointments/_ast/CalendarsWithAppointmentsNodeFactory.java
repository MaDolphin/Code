/* generated from model CalendarsWithAppointments */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package calendarswithappointments._ast;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class CalendarsWithAppointmentsNodeFactory  {

    /* generated by template core.Attribute*/
 protected  static  CalendarsWithAppointmentsNodeFactory factory ;

    /* generated by template core.Attribute*/
 protected  static  CalendarsWithAppointmentsNodeFactory factoryASTCalendarsWithAppointments ;

    /* generated by template core.Attribute*/
 protected  static  CalendarsWithAppointmentsNodeFactory factoryASTI ;


    /* generated by template core.Constructor*/
 protected  CalendarsWithAppointmentsNodeFactory()  {
    /* generated by template core.EmptyBody*/
// empty body

}


    /* generated by template core.Method*/
 private  static  CalendarsWithAppointmentsNodeFactory getFactory ()  {
      /* generated by template _ast.nodefactory.GetFactory*/

  if (factory == null) {
    factory = new CalendarsWithAppointmentsNodeFactory();
  }
  return factory;

}

    /* generated by template core.Method*/
 public  static  ASTCalendarsWithAppointments createASTCalendarsWithAppointments ()  {
      /* generated by template _ast.nodefactory.Create*/

  {
    if (factoryASTCalendarsWithAppointments == null) {
      factoryASTCalendarsWithAppointments = getFactory();
    }
    return factoryASTCalendarsWithAppointments.doCreateASTCalendarsWithAppointments();
  }

}

    /* generated by template core.Method*/
 protected  ASTCalendarsWithAppointments doCreateASTCalendarsWithAppointments ()  {
      /* generated by template _ast.nodefactory.DoCreate*/

  {
    return new ASTCalendarsWithAppointments();
  }

}

    /* generated by template core.Method*/
 public  static  ASTI createASTI ()  {
      /* generated by template _ast.nodefactory.Create*/

  {
    if (factoryASTI == null) {
      factoryASTI = getFactory();
    }
    return factoryASTI.doCreateASTI();
  }

}

    /* generated by template core.Method*/
 protected  ASTI doCreateASTI ()  {
      /* generated by template _ast.nodefactory.DoCreate*/

  {
    return new ASTI();
  }

}

    /* generated by template core.Method*/
 public  static  calendars._ast.ASTCalendars createASTCalendars ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return calendars._ast.CalendarsNodeFactory.createASTCalendars();
}

    /* generated by template core.Method*/
 public  static  appointments._ast.ASTAppointment createASTAppointment ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return appointments._ast.AppointmentsNodeFactory.createASTAppointment();
}

    /* generated by template core.Method*/
 public  static  appointments._ast.ASTStart createASTStart ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return appointments._ast.AppointmentsNodeFactory.createASTStart();
}

    /* generated by template core.Method*/
 public  static  appointments._ast.ASTEnd createASTEnd ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return appointments._ast.AppointmentsNodeFactory.createASTEnd();
}

    /* generated by template core.Method*/
 public  static  appointments._ast.ASTDate createASTDate ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return appointments._ast.AppointmentsNodeFactory.createASTDate();
}

    /* generated by template core.Method*/
 public  static  appointments._ast.ASTTime createASTTime ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return appointments._ast.AppointmentsNodeFactory.createASTTime();
}

    /* generated by template core.Method*/
 public  static  appointments._ast.ASTBreak createASTBreak ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return appointments._ast.AppointmentsNodeFactory.createASTBreak();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTNullLiteral createASTNullLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTNullLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTBooleanLiteral createASTBooleanLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTBooleanLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTCharLiteral createASTCharLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTCharLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral createASTStringLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTStringLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTNatLiteral createASTNatLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTNatLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTSignedNatLiteral createASTSignedNatLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTSignedNatLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTBasicLongLiteral createASTBasicLongLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTBasicLongLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTSignedBasicLongLiteral createASTSignedBasicLongLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTSignedBasicLongLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTBasicFloatLiteral createASTBasicFloatLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTBasicFloatLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTSignedBasicFloatLiteral createASTSignedBasicFloatLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTSignedBasicFloatLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTBasicDoubleLiteral createASTBasicDoubleLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTBasicDoubleLiteral();
}

    /* generated by template core.Method*/
 public  static  de.monticore.literals.mccommonliterals._ast.ASTSignedBasicDoubleLiteral createASTSignedBasicDoubleLiteral ()  {
      /* generated by template _ast.nodefactory.CreateDelegateMethod*/

  return de.monticore.literals.mccommonliterals._ast.MCCommonLiteralsNodeFactory.createASTSignedBasicDoubleLiteral();
}

}
