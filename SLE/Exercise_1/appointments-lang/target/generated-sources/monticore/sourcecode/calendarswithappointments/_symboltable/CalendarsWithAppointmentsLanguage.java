/* generated from model CalendarsWithAppointments */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package calendarswithappointments._symboltable;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 abstract  public  class CalendarsWithAppointmentsLanguage  implements de.monticore.IModelingLanguage<CalendarsWithAppointmentsModelLoader> {

    /* generated by template core.Attribute*/
 private  CalendarsWithAppointmentsModelLoader modelLoader ;

    /* generated by template core.Attribute*/
 private  String name ;

    /* generated by template core.Attribute*/
 private  String fileExtension ;


    /* generated by template core.Constructor*/
 public  CalendarsWithAppointmentsLanguage(String langName,String fileEnding)  {
    /* generated by template _symboltable.language.Constructor*/
  this.name = langName;
  this.fileExtension = fileEnding;
  this.modelLoader = provideModelLoader();
}


    /* generated by template core.Method*/
 public  CalendarsWithAppointmentsModelLoader getModelLoader ()  {
      /* generated by template methods.Get*/

return this.modelLoader;

}

    /* generated by template core.Method*/
 public  String getName ()  {
      /* generated by template methods.Get*/

return this.name;

}

    /* generated by template core.Method*/
 public  String getFileExtension ()  {
      /* generated by template methods.Get*/

return this.fileExtension;

}

    /* generated by template core.Method*/
 public  calendarswithappointments._symboltable.CalendarsWithAppointmentsSymbolTableCreatorDelegator getSymbolTableCreator (calendarswithappointments._symboltable.ICalendarsWithAppointmentsGlobalScope enclosingScope)  {
       return new calendarswithappointments._symboltable.CalendarsWithAppointmentsSymbolTableCreatorDelegator(enclosingScope);
}

    /* generated by template core.Method*/
 protected  CalendarsWithAppointmentsModelLoader provideModelLoader ()  {
      return new CalendarsWithAppointmentsModelLoader(this);
}

    /* generated by template core.Method*/
 public  calendarswithappointments._parser.CalendarsWithAppointmentsParser getParser ()  {
      return new calendarswithappointments._parser.CalendarsWithAppointmentsParser();
}

}
