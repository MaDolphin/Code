/* generated from model AppointmentsFlexibilized */
/* generated by template core.Class*/

/* (c) https://github.com/MontiCore/monticore */
package appointmentsflexibilized._symboltable;

/* generated by template core.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;
import de.se_rwth.commons.SourcePosition;
import de.monticore.symboltable.*;
import de.monticore.ast.ASTCNode;


 public  class AppointmentsFlexibilizedGlobalScope extends appointmentsflexibilized._symboltable.AppointmentsFlexibilizedScope  implements appointmentsflexibilized._symboltable.IAppointmentsFlexibilizedGlobalScope {

    /* generated by template core.Attribute*/
 protected  de.monticore.io.paths.ModelPath modelPath ;

    /* generated by template core.Attribute*/
 protected  AppointmentsFlexibilizedLanguage appointmentsFlexibilizedLanguage ;

    /* generated by template core.Attribute*/
 protected  final  Map<String,Set<AppointmentsFlexibilizedModelLoader>> modelName2ModelLoaderCache  = new HashMap<>();


    /* generated by template core.Constructor*/
 public  AppointmentsFlexibilizedGlobalScope(de.monticore.io.paths.ModelPath modelPath,AppointmentsFlexibilizedLanguage language)  {
    this.modelPath = Log.errorIfNull(modelPath);
    this.appointmentsFlexibilizedLanguage = Log.errorIfNull(language);
}


    /* generated by template core.Method*/
 public  de.monticore.io.paths.ModelPath getModelPath ()  {
      /* generated by template methods.Get*/

return this.modelPath;

}

    /* generated by template core.Method*/
 public  AppointmentsFlexibilizedLanguage getAppointmentsFlexibilizedLanguage ()  {
      /* generated by template methods.Get*/

return this.appointmentsFlexibilizedLanguage;

}

    /* generated by template core.Method*/
 public  String getName ()  {
      Log.error("0xA6101x988 Global scopes do not have names.");
    return null;
}

    /* generated by template core.Method*/
 public  boolean isPresentName ()  {
      return false;
}

    /* generated by template core.Method*/
 public  void cache (String calculatedModelName)  {
      /* generated by template _symboltable.globalscope.CacheMethod*/

  AppointmentsFlexibilizedModelLoader modelLoader = this.getAppointmentsFlexibilizedLanguage().getModelLoader() ;
  if (modelName2ModelLoaderCache.containsKey(calculatedModelName)) {
    modelName2ModelLoaderCache.get(calculatedModelName).add(modelLoader);
  } else {
    final Set<AppointmentsFlexibilizedModelLoader> ml = new LinkedHashSet<>();
    ml.add(modelLoader);
    modelName2ModelLoaderCache.put(calculatedModelName, ml);
  }
}

    /* generated by template core.Method*/
 public  boolean continueWithModelLoader (String calculatedModelName,AppointmentsFlexibilizedModelLoader modelLoader)  {
          return !modelName2ModelLoaderCache.containsKey(calculatedModelName)
      || !modelName2ModelLoaderCache.get(calculatedModelName).contains(modelLoader);
}

    /* generated by template core.Method*/
 public  appointmentsflexibilized._symboltable.IAppointmentsFlexibilizedScope getEnclosingScope ()  {
      Log.error("0xA6100x566 GlobalScope AppointmentsFlexibilizedGlobalScope has no EnclosingScope, so you cannot call methodgetEnclosingScope.");
    return null;
}

    /* generated by template core.Method*/
 public  void setEnclosingScope (appointmentsflexibilized._symboltable.IAppointmentsFlexibilizedScope enclosingScope)  {
      Log.error("0xA6100x546 GlobalScope AppointmentsFlexibilizedGlobalScope has no EnclosingScope, so you cannot call methodsetEnclosingScope.");
}

}
